ARM GAS  /tmp/ccC4dOTN.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"main.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.Error_Handler,"ax",%progbits
  17              		.align	1
  18              		.global	Error_Handler
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	Error_Handler:
  26              	.LFB146:
  27              		.file 1 "../Core/Src/main.c"
   1:../Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:../Core/Src/main.c **** /**
   3:../Core/Src/main.c ****   ******************************************************************************
   4:../Core/Src/main.c ****   * @file           : main.c
   5:../Core/Src/main.c ****   * @brief          : Main program body
   6:../Core/Src/main.c ****   ******************************************************************************
   7:../Core/Src/main.c ****   * @attention
   8:../Core/Src/main.c ****   *
   9:../Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:../Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:../Core/Src/main.c ****   *
  12:../Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:../Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:../Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:../Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:../Core/Src/main.c ****   *
  17:../Core/Src/main.c ****   ******************************************************************************
  18:../Core/Src/main.c ****   */
  19:../Core/Src/main.c **** /* USER CODE END Header */
  20:../Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:../Core/Src/main.c **** #include "main.h"
  22:../Core/Src/main.c **** #include "adc.h"
  23:../Core/Src/main.c **** #include "dac.h"
  24:../Core/Src/main.c **** #include "dma.h"
  25:../Core/Src/main.c **** #include "spi.h"
  26:../Core/Src/main.c **** #include "tim.h"
  27:../Core/Src/main.c **** #include "usart.h"
  28:../Core/Src/main.c **** #include "gpio.h"
  29:../Core/Src/main.c **** 
  30:../Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  31:../Core/Src/main.c **** /* USER CODE BEGIN Includes */
ARM GAS  /tmp/ccC4dOTN.s 			page 2


  32:../Core/Src/main.c **** #include <string.h>
  33:../Core/Src/main.c **** #include "commands.h"
  34:../Core/Src/main.c **** #include "interface.h" // print startup message
  35:../Core/Src/main.c **** /* USER CODE END Includes */
  36:../Core/Src/main.c **** 
  37:../Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  38:../Core/Src/main.c **** /* USER CODE BEGIN PTD */
  39:../Core/Src/main.c **** 
  40:../Core/Src/main.c **** /* USER CODE END PTD */
  41:../Core/Src/main.c **** 
  42:../Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  43:../Core/Src/main.c **** /* USER CODE BEGIN PD */
  44:../Core/Src/main.c **** 
  45:../Core/Src/main.c **** /* USER CODE END PD */
  46:../Core/Src/main.c **** 
  47:../Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  48:../Core/Src/main.c **** /* USER CODE BEGIN PM */
  49:../Core/Src/main.c **** 
  50:../Core/Src/main.c **** /* USER CODE END PM */
  51:../Core/Src/main.c **** 
  52:../Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  53:../Core/Src/main.c **** 
  54:../Core/Src/main.c **** /* USER CODE BEGIN PV */
  55:../Core/Src/main.c **** char last_valid_cmd[RX_BUFF_LEN] = {0};
  56:../Core/Src/main.c **** 
  57:../Core/Src/main.c **** /* USER CODE END PV */
  58:../Core/Src/main.c **** 
  59:../Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  60:../Core/Src/main.c **** void SystemClock_Config(void);
  61:../Core/Src/main.c **** /* USER CODE BEGIN PFP */
  62:../Core/Src/main.c **** 
  63:../Core/Src/main.c **** /* USER CODE END PFP */
  64:../Core/Src/main.c **** 
  65:../Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  66:../Core/Src/main.c **** /* USER CODE BEGIN 0 */
  67:../Core/Src/main.c **** 
  68:../Core/Src/main.c **** /* USER CODE END 0 */
  69:../Core/Src/main.c **** 
  70:../Core/Src/main.c **** /**
  71:../Core/Src/main.c ****   * @brief  The application entry point.
  72:../Core/Src/main.c ****   * @retval int
  73:../Core/Src/main.c ****   */
  74:../Core/Src/main.c **** int main(void)
  75:../Core/Src/main.c **** {
  76:../Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  77:../Core/Src/main.c ****   char c;
  78:../Core/Src/main.c ****   /* USER CODE END 1 */
  79:../Core/Src/main.c **** 
  80:../Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  81:../Core/Src/main.c **** 
  82:../Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  83:../Core/Src/main.c ****   HAL_Init();
  84:../Core/Src/main.c **** 
  85:../Core/Src/main.c ****   /* USER CODE BEGIN Init */
  86:../Core/Src/main.c **** 
  87:../Core/Src/main.c ****   /* USER CODE END Init */
  88:../Core/Src/main.c **** 
ARM GAS  /tmp/ccC4dOTN.s 			page 3


  89:../Core/Src/main.c ****   /* Configure the system clock */
  90:../Core/Src/main.c ****   SystemClock_Config();
  91:../Core/Src/main.c **** 
  92:../Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  93:../Core/Src/main.c **** 
  94:../Core/Src/main.c ****   /* USER CODE END SysInit */
  95:../Core/Src/main.c **** 
  96:../Core/Src/main.c ****   /* Initialize all configured peripherals */
  97:../Core/Src/main.c ****   MX_GPIO_Init();
  98:../Core/Src/main.c ****   MX_DMA_Init();
  99:../Core/Src/main.c ****   MX_USART3_UART_Init();
 100:../Core/Src/main.c ****   MX_ADC1_Init();
 101:../Core/Src/main.c ****   MX_DAC_Init();
 102:../Core/Src/main.c ****   MX_TIM2_Init();
 103:../Core/Src/main.c ****   MX_TIM6_Init();
 104:../Core/Src/main.c ****   MX_SPI1_Init();
 105:../Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 106:../Core/Src/main.c ****   // print startup message
 107:../Core/Src/main.c ****   ver_cb(1, NULL);
 108:../Core/Src/main.c ****   UART_puts("\n\rType '?' for list of available commands\n\r");
 109:../Core/Src/main.c ****   UART_puts("Type '? <cmd>' for more info on a given command\n\r");
 110:../Core/Src/main.c **** 
 111:../Core/Src/main.c ****   /* USER CODE END 2 */
 112:../Core/Src/main.c **** 
 113:../Core/Src/main.c ****   /* Infinite loop */
 114:../Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 115:../Core/Src/main.c **** {
 116:../Core/Src/main.c ****     exec_cmd("MO 1 1");
 117:../Core/Src/main.c ****     exec_cmd("WG sin 32");
 118:../Core/Src/main.c ****     exec_cmd("SP ms 1");
 119:../Core/Src/main.c ****     exec_cmd("S");
 120:../Core/Src/main.c ****   }
 121:../Core/Src/main.c **** 
 122:../Core/Src/main.c ****   UART_putchar('>'); // print prompt
 123:../Core/Src/main.c ****   Rx_UART_init(); // set USART3 interrupt
 124:../Core/Src/main.c **** 
 125:../Core/Src/main.c ****   while (1)
 126:../Core/Src/main.c ****   {
 127:../Core/Src/main.c ****     if(Rx_flag)
 128:../Core/Src/main.c ****     {
 129:../Core/Src/main.c ****       c = UART_Receive(); // Returns received char
 130:../Core/Src/main.c ****       if(c != (char)(-1))
 131:../Core/Src/main.c ****         // Its not a special character
 132:../Core/Src/main.c ****         UART_putchar(c); // Received char is echoed
 133:../Core/Src/main.c **** 
 134:../Core/Src/main.c ****       Rx_flag = 0;
 135:../Core/Src/main.c ****     }
 136:../Core/Src/main.c ****     
 137:../Core/Src/main.c ****     if(cmd_received)
 138:../Core/Src/main.c ****     {
 139:../Core/Src/main.c ****       if(exec_cmd(Rx_Buffer) == 0)// Is there an error?
 140:../Core/Src/main.c ****         // No error. Command is valid
 141:../Core/Src/main.c ****         strcpy(last_valid_cmd, Rx_Buffer); // Save this as last valid command
 142:../Core/Src/main.c ****       
 143:../Core/Src/main.c ****       UART_putchar('>');// print prompt
 144:../Core/Src/main.c ****       cmd_received = 0;
 145:../Core/Src/main.c ****       Rx_UART_init(); // ready to begin reception
ARM GAS  /tmp/ccC4dOTN.s 			page 4


 146:../Core/Src/main.c ****     }
 147:../Core/Src/main.c ****     /* USER CODE END WHILE */
 148:../Core/Src/main.c **** 
 149:../Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 150:../Core/Src/main.c ****   }
 151:../Core/Src/main.c ****   /* USER CODE END 3 */
 152:../Core/Src/main.c **** }
 153:../Core/Src/main.c **** 
 154:../Core/Src/main.c **** /**
 155:../Core/Src/main.c ****   * @brief System Clock Configuration
 156:../Core/Src/main.c ****   * @retval None
 157:../Core/Src/main.c ****   */
 158:../Core/Src/main.c **** void SystemClock_Config(void)
 159:../Core/Src/main.c **** {
 160:../Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 161:../Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 162:../Core/Src/main.c **** 
 163:../Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 164:../Core/Src/main.c ****   */
 165:../Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 166:../Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 167:../Core/Src/main.c **** 
 168:../Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 169:../Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 170:../Core/Src/main.c ****   */
 171:../Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 172:../Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 173:../Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 174:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 175:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 176:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 177:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 216;
 178:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 179:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 180:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 181:../Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 182:../Core/Src/main.c ****   {
 183:../Core/Src/main.c ****     Error_Handler();
 184:../Core/Src/main.c ****   }
 185:../Core/Src/main.c **** 
 186:../Core/Src/main.c ****   /** Activate the Over-Drive mode
 187:../Core/Src/main.c ****   */
 188:../Core/Src/main.c ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 189:../Core/Src/main.c ****   {
 190:../Core/Src/main.c ****     Error_Handler();
 191:../Core/Src/main.c ****   }
 192:../Core/Src/main.c **** 
 193:../Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 194:../Core/Src/main.c ****   */
 195:../Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 196:../Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 197:../Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 198:../Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 199:../Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 200:../Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 201:../Core/Src/main.c **** 
 202:../Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
ARM GAS  /tmp/ccC4dOTN.s 			page 5


 203:../Core/Src/main.c ****   {
 204:../Core/Src/main.c ****     Error_Handler();
 205:../Core/Src/main.c ****   }
 206:../Core/Src/main.c **** }
 207:../Core/Src/main.c **** 
 208:../Core/Src/main.c **** /* USER CODE BEGIN 4 */
 209:../Core/Src/main.c **** 
 210:../Core/Src/main.c **** /* USER CODE END 4 */
 211:../Core/Src/main.c **** 
 212:../Core/Src/main.c **** /**
 213:../Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 214:../Core/Src/main.c ****   * @retval None
 215:../Core/Src/main.c ****   */
 216:../Core/Src/main.c **** void Error_Handler(void)
 217:../Core/Src/main.c **** {
  28              		.loc 1 217 1 view -0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 218:../Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 219:../Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 220:../Core/Src/main.c ****   __disable_irq();
  34              		.loc 1 220 3 view .LVU1
  35              	.LBB4:
  36              	.LBI4:
  37              		.file 2 "../Drivers/CMSIS/Include/cmsis_gcc.h"
   1:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:../Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:../Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
ARM GAS  /tmp/ccC4dOTN.s 			page 6


  30:../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:../Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
ARM GAS  /tmp/ccC4dOTN.s 			page 7


  87:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:../Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:../Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:../Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  38              		.loc 2 140 27 view .LVU2
  39              	.LBB5:
 141:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccC4dOTN.s 			page 8


 142:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  40              		.loc 2 142 3 view .LVU3
  41              		.syntax unified
  42              	@ 142 "../Drivers/CMSIS/Include/cmsis_gcc.h" 1
  43 0000 72B6     		cpsid i
  44              	@ 0 "" 2
  45              		.thumb
  46              		.syntax unified
  47              	.L2:
  48              	.LBE5:
  49              	.LBE4:
 221:../Core/Src/main.c ****   while (1)
  50              		.loc 1 221 3 discriminator 1 view .LVU4
 222:../Core/Src/main.c ****   {
 223:../Core/Src/main.c ****   }
  51              		.loc 1 223 3 discriminator 1 view .LVU5
 221:../Core/Src/main.c ****   while (1)
  52              		.loc 1 221 9 discriminator 1 view .LVU6
  53 0002 FEE7     		b	.L2
  54              		.cfi_endproc
  55              	.LFE146:
  57              		.section	.text.SystemClock_Config,"ax",%progbits
  58              		.align	1
  59              		.global	SystemClock_Config
  60              		.syntax unified
  61              		.thumb
  62              		.thumb_func
  63              		.fpu fpv5-d16
  65              	SystemClock_Config:
  66              	.LFB145:
 159:../Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  67              		.loc 1 159 1 view -0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 80
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71 0000 00B5     		push	{lr}
  72              	.LCFI0:
  73              		.cfi_def_cfa_offset 4
  74              		.cfi_offset 14, -4
  75 0002 95B0     		sub	sp, sp, #84
  76              	.LCFI1:
  77              		.cfi_def_cfa_offset 88
 160:../Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  78              		.loc 1 160 3 view .LVU8
 160:../Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  79              		.loc 1 160 22 is_stmt 0 view .LVU9
  80 0004 3422     		movs	r2, #52
  81 0006 0021     		movs	r1, #0
  82 0008 07A8     		add	r0, sp, #28
  83 000a FFF7FEFF 		bl	memset
  84              	.LVL0:
 161:../Core/Src/main.c **** 
  85              		.loc 1 161 3 is_stmt 1 view .LVU10
 161:../Core/Src/main.c **** 
  86              		.loc 1 161 22 is_stmt 0 view .LVU11
  87 000e 0023     		movs	r3, #0
  88 0010 0293     		str	r3, [sp, #8]
ARM GAS  /tmp/ccC4dOTN.s 			page 9


  89 0012 0393     		str	r3, [sp, #12]
  90 0014 0493     		str	r3, [sp, #16]
  91 0016 0593     		str	r3, [sp, #20]
  92 0018 0693     		str	r3, [sp, #24]
 165:../Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  93              		.loc 1 165 3 is_stmt 1 view .LVU12
  94              	.LBB6:
 165:../Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  95              		.loc 1 165 3 view .LVU13
 165:../Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  96              		.loc 1 165 3 view .LVU14
  97 001a 224A     		ldr	r2, .L11
  98 001c 116C     		ldr	r1, [r2, #64]
  99 001e 41F08051 		orr	r1, r1, #268435456
 100 0022 1164     		str	r1, [r2, #64]
 165:../Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 101              		.loc 1 165 3 view .LVU15
 102 0024 126C     		ldr	r2, [r2, #64]
 103 0026 02F08052 		and	r2, r2, #268435456
 104 002a 0092     		str	r2, [sp]
 165:../Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 105              		.loc 1 165 3 view .LVU16
 106 002c 009A     		ldr	r2, [sp]
 107              	.LBE6:
 165:../Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 108              		.loc 1 165 3 view .LVU17
 166:../Core/Src/main.c **** 
 109              		.loc 1 166 3 view .LVU18
 110              	.LBB7:
 166:../Core/Src/main.c **** 
 111              		.loc 1 166 3 view .LVU19
 166:../Core/Src/main.c **** 
 112              		.loc 1 166 3 view .LVU20
 113 002e 1E4A     		ldr	r2, .L11+4
 114 0030 1168     		ldr	r1, [r2]
 115 0032 41F44041 		orr	r1, r1, #49152
 116 0036 1160     		str	r1, [r2]
 166:../Core/Src/main.c **** 
 117              		.loc 1 166 3 view .LVU21
 118 0038 1268     		ldr	r2, [r2]
 119 003a 02F44042 		and	r2, r2, #49152
 120 003e 0192     		str	r2, [sp, #4]
 166:../Core/Src/main.c **** 
 121              		.loc 1 166 3 view .LVU22
 122 0040 019A     		ldr	r2, [sp, #4]
 123              	.LBE7:
 166:../Core/Src/main.c **** 
 124              		.loc 1 166 3 view .LVU23
 171:../Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 125              		.loc 1 171 3 view .LVU24
 171:../Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 126              		.loc 1 171 36 is_stmt 0 view .LVU25
 127 0042 0222     		movs	r2, #2
 128 0044 0792     		str	r2, [sp, #28]
 172:../Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 129              		.loc 1 172 3 is_stmt 1 view .LVU26
 172:../Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
ARM GAS  /tmp/ccC4dOTN.s 			page 10


 130              		.loc 1 172 30 is_stmt 0 view .LVU27
 131 0046 0121     		movs	r1, #1
 132 0048 0A91     		str	r1, [sp, #40]
 173:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 133              		.loc 1 173 3 is_stmt 1 view .LVU28
 173:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 134              		.loc 1 173 41 is_stmt 0 view .LVU29
 135 004a 1021     		movs	r1, #16
 136 004c 0B91     		str	r1, [sp, #44]
 174:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 137              		.loc 1 174 3 is_stmt 1 view .LVU30
 174:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 138              		.loc 1 174 34 is_stmt 0 view .LVU31
 139 004e 0D92     		str	r2, [sp, #52]
 175:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 140              		.loc 1 175 3 is_stmt 1 view .LVU32
 175:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 141              		.loc 1 175 35 is_stmt 0 view .LVU33
 142 0050 0E93     		str	r3, [sp, #56]
 176:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 216;
 143              		.loc 1 176 3 is_stmt 1 view .LVU34
 176:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 216;
 144              		.loc 1 176 30 is_stmt 0 view .LVU35
 145 0052 0823     		movs	r3, #8
 146 0054 0F93     		str	r3, [sp, #60]
 177:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 147              		.loc 1 177 3 is_stmt 1 view .LVU36
 177:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 148              		.loc 1 177 30 is_stmt 0 view .LVU37
 149 0056 D823     		movs	r3, #216
 150 0058 1093     		str	r3, [sp, #64]
 178:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 151              		.loc 1 178 3 is_stmt 1 view .LVU38
 178:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 152              		.loc 1 178 30 is_stmt 0 view .LVU39
 153 005a 1192     		str	r2, [sp, #68]
 179:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 154              		.loc 1 179 3 is_stmt 1 view .LVU40
 179:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 155              		.loc 1 179 30 is_stmt 0 view .LVU41
 156 005c 1292     		str	r2, [sp, #72]
 180:../Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 157              		.loc 1 180 3 is_stmt 1 view .LVU42
 180:../Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 158              		.loc 1 180 30 is_stmt 0 view .LVU43
 159 005e 1392     		str	r2, [sp, #76]
 181:../Core/Src/main.c ****   {
 160              		.loc 1 181 3 is_stmt 1 view .LVU44
 181:../Core/Src/main.c ****   {
 161              		.loc 1 181 7 is_stmt 0 view .LVU45
 162 0060 07A8     		add	r0, sp, #28
 163 0062 FFF7FEFF 		bl	HAL_RCC_OscConfig
 164              	.LVL1:
 181:../Core/Src/main.c ****   {
 165              		.loc 1 181 6 view .LVU46
 166 0066 B0B9     		cbnz	r0, .L8
 188:../Core/Src/main.c ****   {
ARM GAS  /tmp/ccC4dOTN.s 			page 11


 167              		.loc 1 188 3 is_stmt 1 view .LVU47
 188:../Core/Src/main.c ****   {
 168              		.loc 1 188 7 is_stmt 0 view .LVU48
 169 0068 FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 170              	.LVL2:
 188:../Core/Src/main.c ****   {
 171              		.loc 1 188 6 view .LVU49
 172 006c A8B9     		cbnz	r0, .L9
 195:../Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 173              		.loc 1 195 3 is_stmt 1 view .LVU50
 195:../Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 174              		.loc 1 195 31 is_stmt 0 view .LVU51
 175 006e 0F23     		movs	r3, #15
 176 0070 0293     		str	r3, [sp, #8]
 197:../Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 177              		.loc 1 197 3 is_stmt 1 view .LVU52
 197:../Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 178              		.loc 1 197 34 is_stmt 0 view .LVU53
 179 0072 0223     		movs	r3, #2
 180 0074 0393     		str	r3, [sp, #12]
 198:../Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 181              		.loc 1 198 3 is_stmt 1 view .LVU54
 198:../Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 182              		.loc 1 198 35 is_stmt 0 view .LVU55
 183 0076 0023     		movs	r3, #0
 184 0078 0493     		str	r3, [sp, #16]
 199:../Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 185              		.loc 1 199 3 is_stmt 1 view .LVU56
 199:../Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 186              		.loc 1 199 36 is_stmt 0 view .LVU57
 187 007a 4FF4A053 		mov	r3, #5120
 188 007e 0593     		str	r3, [sp, #20]
 200:../Core/Src/main.c **** 
 189              		.loc 1 200 3 is_stmt 1 view .LVU58
 200:../Core/Src/main.c **** 
 190              		.loc 1 200 36 is_stmt 0 view .LVU59
 191 0080 4FF48053 		mov	r3, #4096
 192 0084 0693     		str	r3, [sp, #24]
 202:../Core/Src/main.c ****   {
 193              		.loc 1 202 3 is_stmt 1 view .LVU60
 202:../Core/Src/main.c ****   {
 194              		.loc 1 202 7 is_stmt 0 view .LVU61
 195 0086 0721     		movs	r1, #7
 196 0088 02A8     		add	r0, sp, #8
 197 008a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 198              	.LVL3:
 202:../Core/Src/main.c ****   {
 199              		.loc 1 202 6 view .LVU62
 200 008e 30B9     		cbnz	r0, .L10
 206:../Core/Src/main.c **** 
 201              		.loc 1 206 1 view .LVU63
 202 0090 15B0     		add	sp, sp, #84
 203              	.LCFI2:
 204              		.cfi_remember_state
 205              		.cfi_def_cfa_offset 4
 206              		@ sp needed
 207 0092 5DF804FB 		ldr	pc, [sp], #4
ARM GAS  /tmp/ccC4dOTN.s 			page 12


 208              	.L8:
 209              	.LCFI3:
 210              		.cfi_restore_state
 183:../Core/Src/main.c ****   }
 211              		.loc 1 183 5 is_stmt 1 view .LVU64
 212 0096 FFF7FEFF 		bl	Error_Handler
 213              	.LVL4:
 214              	.L9:
 190:../Core/Src/main.c ****   }
 215              		.loc 1 190 5 view .LVU65
 216 009a FFF7FEFF 		bl	Error_Handler
 217              	.LVL5:
 218              	.L10:
 204:../Core/Src/main.c ****   }
 219              		.loc 1 204 5 view .LVU66
 220 009e FFF7FEFF 		bl	Error_Handler
 221              	.LVL6:
 222              	.L12:
 223 00a2 00BF     		.align	2
 224              	.L11:
 225 00a4 00380240 		.word	1073887232
 226 00a8 00700040 		.word	1073770496
 227              		.cfi_endproc
 228              	.LFE145:
 230              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 231              		.align	2
 232              	.LC0:
 233 0000 0A0D5479 		.ascii	"\012\015Type '?' for list of available commands\012"
 233      70652027 
 233      3F272066 
 233      6F72206C 
 233      69737420 
 234 002a 0D00     		.ascii	"\015\000"
 235              		.align	2
 236              	.LC1:
 237 002c 54797065 		.ascii	"Type '? <cmd>' for more info on a given command\012"
 237      20273F20 
 237      3C636D64 
 237      3E272066 
 237      6F72206D 
 238 005c 0D00     		.ascii	"\015\000"
 239 005e 0000     		.align	2
 240              	.LC2:
 241 0060 4D4F2031 		.ascii	"MO 1 1\000"
 241      203100
 242 0067 00       		.align	2
 243              	.LC3:
 244 0068 57472073 		.ascii	"WG sin 32\000"
 244      696E2033 
 244      3200
 245 0072 0000     		.align	2
 246              	.LC4:
 247 0074 5350206D 		.ascii	"SP ms 1\000"
 247      73203100 
 248              		.align	2
 249              	.LC5:
 250 007c 5300     		.ascii	"S\000"
ARM GAS  /tmp/ccC4dOTN.s 			page 13


 251              		.section	.text.main,"ax",%progbits
 252              		.align	1
 253              		.global	main
 254              		.syntax unified
 255              		.thumb
 256              		.thumb_func
 257              		.fpu fpv5-d16
 259              	main:
 260              	.LFB144:
  75:../Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 261              		.loc 1 75 1 view -0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265 0000 08B5     		push	{r3, lr}
 266              	.LCFI4:
 267              		.cfi_def_cfa_offset 8
 268              		.cfi_offset 3, -8
 269              		.cfi_offset 14, -4
  77:../Core/Src/main.c ****   /* USER CODE END 1 */
 270              		.loc 1 77 3 view .LVU68
  83:../Core/Src/main.c **** 
 271              		.loc 1 83 3 view .LVU69
 272 0002 FFF7FEFF 		bl	HAL_Init
 273              	.LVL7:
  90:../Core/Src/main.c **** 
 274              		.loc 1 90 3 view .LVU70
 275 0006 FFF7FEFF 		bl	SystemClock_Config
 276              	.LVL8:
  97:../Core/Src/main.c ****   MX_DMA_Init();
 277              		.loc 1 97 3 view .LVU71
 278 000a FFF7FEFF 		bl	MX_GPIO_Init
 279              	.LVL9:
  98:../Core/Src/main.c ****   MX_USART3_UART_Init();
 280              		.loc 1 98 3 view .LVU72
 281 000e FFF7FEFF 		bl	MX_DMA_Init
 282              	.LVL10:
  99:../Core/Src/main.c ****   MX_ADC1_Init();
 283              		.loc 1 99 3 view .LVU73
 284 0012 FFF7FEFF 		bl	MX_USART3_UART_Init
 285              	.LVL11:
 100:../Core/Src/main.c ****   MX_DAC_Init();
 286              		.loc 1 100 3 view .LVU74
 287 0016 FFF7FEFF 		bl	MX_ADC1_Init
 288              	.LVL12:
 101:../Core/Src/main.c ****   MX_TIM2_Init();
 289              		.loc 1 101 3 view .LVU75
 290 001a FFF7FEFF 		bl	MX_DAC_Init
 291              	.LVL13:
 102:../Core/Src/main.c ****   MX_TIM6_Init();
 292              		.loc 1 102 3 view .LVU76
 293 001e FFF7FEFF 		bl	MX_TIM2_Init
 294              	.LVL14:
 103:../Core/Src/main.c ****   MX_SPI1_Init();
 295              		.loc 1 103 3 view .LVU77
 296 0022 FFF7FEFF 		bl	MX_TIM6_Init
 297              	.LVL15:
ARM GAS  /tmp/ccC4dOTN.s 			page 14


 104:../Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 298              		.loc 1 104 3 view .LVU78
 299 0026 FFF7FEFF 		bl	MX_SPI1_Init
 300              	.LVL16:
 107:../Core/Src/main.c ****   UART_puts("\n\rType '?' for list of available commands\n\r");
 301              		.loc 1 107 3 view .LVU79
 302 002a 0021     		movs	r1, #0
 303 002c 0120     		movs	r0, #1
 304 002e FFF7FEFF 		bl	ver_cb
 305              	.LVL17:
 108:../Core/Src/main.c ****   UART_puts("Type '? <cmd>' for more info on a given command\n\r");
 306              		.loc 1 108 3 view .LVU80
 307 0032 1D48     		ldr	r0, .L21
 308 0034 FFF7FEFF 		bl	UART_puts
 309              	.LVL18:
 109:../Core/Src/main.c **** 
 310              		.loc 1 109 3 view .LVU81
 311 0038 1C48     		ldr	r0, .L21+4
 312 003a FFF7FEFF 		bl	UART_puts
 313              	.LVL19:
 116:../Core/Src/main.c ****     exec_cmd("WG sin 32");
 314              		.loc 1 116 5 view .LVU82
 315 003e 1C48     		ldr	r0, .L21+8
 316 0040 FFF7FEFF 		bl	exec_cmd
 317              	.LVL20:
 117:../Core/Src/main.c ****     exec_cmd("SP ms 1");
 318              		.loc 1 117 5 view .LVU83
 319 0044 1B48     		ldr	r0, .L21+12
 320 0046 FFF7FEFF 		bl	exec_cmd
 321              	.LVL21:
 118:../Core/Src/main.c ****     exec_cmd("S");
 322              		.loc 1 118 5 view .LVU84
 323 004a 1B48     		ldr	r0, .L21+16
 324 004c FFF7FEFF 		bl	exec_cmd
 325              	.LVL22:
 119:../Core/Src/main.c ****   }
 326              		.loc 1 119 5 view .LVU85
 327 0050 1A48     		ldr	r0, .L21+20
 328 0052 FFF7FEFF 		bl	exec_cmd
 329              	.LVL23:
 122:../Core/Src/main.c ****   Rx_UART_init(); // set USART3 interrupt
 330              		.loc 1 122 3 view .LVU86
 331 0056 3E20     		movs	r0, #62
 332 0058 FFF7FEFF 		bl	UART_putchar
 333              	.LVL24:
 123:../Core/Src/main.c **** 
 334              		.loc 1 123 3 view .LVU87
 335 005c FFF7FEFF 		bl	Rx_UART_init
 336              	.LVL25:
 337 0060 05E0     		b	.L16
 338              	.LVL26:
 339              	.L15:
 134:../Core/Src/main.c ****     }
 340              		.loc 1 134 7 view .LVU88
 134:../Core/Src/main.c ****     }
 341              		.loc 1 134 15 is_stmt 0 view .LVU89
 342 0062 174B     		ldr	r3, .L21+24
ARM GAS  /tmp/ccC4dOTN.s 			page 15


 343 0064 0022     		movs	r2, #0
 344 0066 1A70     		strb	r2, [r3]
 345              	.L14:
 137:../Core/Src/main.c ****     {
 346              		.loc 1 137 5 is_stmt 1 view .LVU90
 137:../Core/Src/main.c ****     {
 347              		.loc 1 137 8 is_stmt 0 view .LVU91
 348 0068 164B     		ldr	r3, .L21+28
 349 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 137:../Core/Src/main.c ****     {
 350              		.loc 1 137 7 view .LVU92
 351 006c 53B9     		cbnz	r3, .L20
 352              	.L16:
 125:../Core/Src/main.c ****   {
 353              		.loc 1 125 3 is_stmt 1 view .LVU93
 127:../Core/Src/main.c ****     {
 354              		.loc 1 127 5 view .LVU94
 127:../Core/Src/main.c ****     {
 355              		.loc 1 127 8 is_stmt 0 view .LVU95
 356 006e 144B     		ldr	r3, .L21+24
 357 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 127:../Core/Src/main.c ****     {
 358              		.loc 1 127 7 view .LVU96
 359 0072 002B     		cmp	r3, #0
 360 0074 F8D0     		beq	.L14
 129:../Core/Src/main.c ****       if(c != (char)(-1))
 361              		.loc 1 129 7 is_stmt 1 view .LVU97
 129:../Core/Src/main.c ****       if(c != (char)(-1))
 362              		.loc 1 129 11 is_stmt 0 view .LVU98
 363 0076 FFF7FEFF 		bl	UART_Receive
 364              	.LVL27:
 130:../Core/Src/main.c ****         // Its not a special character
 365              		.loc 1 130 7 is_stmt 1 view .LVU99
 130:../Core/Src/main.c ****         // Its not a special character
 366              		.loc 1 130 9 is_stmt 0 view .LVU100
 367 007a FF28     		cmp	r0, #255
 368 007c F1D0     		beq	.L15
 132:../Core/Src/main.c **** 
 369              		.loc 1 132 9 is_stmt 1 view .LVU101
 370 007e FFF7FEFF 		bl	UART_putchar
 371              	.LVL28:
 132:../Core/Src/main.c **** 
 372              		.loc 1 132 9 is_stmt 0 view .LVU102
 373 0082 EEE7     		b	.L15
 374              	.L20:
 139:../Core/Src/main.c ****         // No error. Command is valid
 375              		.loc 1 139 7 is_stmt 1 view .LVU103
 139:../Core/Src/main.c ****         // No error. Command is valid
 376              		.loc 1 139 10 is_stmt 0 view .LVU104
 377 0084 1048     		ldr	r0, .L21+32
 378 0086 FFF7FEFF 		bl	exec_cmd
 379              	.LVL29:
 139:../Core/Src/main.c ****         // No error. Command is valid
 380              		.loc 1 139 9 view .LVU105
 381 008a 18B9     		cbnz	r0, .L17
 141:../Core/Src/main.c ****       
 382              		.loc 1 141 9 is_stmt 1 view .LVU106
ARM GAS  /tmp/ccC4dOTN.s 			page 16


 383 008c 0E49     		ldr	r1, .L21+32
 384 008e 0F48     		ldr	r0, .L21+36
 385 0090 FFF7FEFF 		bl	strcpy
 386              	.LVL30:
 387              	.L17:
 143:../Core/Src/main.c ****       cmd_received = 0;
 388              		.loc 1 143 7 view .LVU107
 389 0094 3E20     		movs	r0, #62
 390 0096 FFF7FEFF 		bl	UART_putchar
 391              	.LVL31:
 144:../Core/Src/main.c ****       Rx_UART_init(); // ready to begin reception
 392              		.loc 1 144 7 view .LVU108
 144:../Core/Src/main.c ****       Rx_UART_init(); // ready to begin reception
 393              		.loc 1 144 20 is_stmt 0 view .LVU109
 394 009a 0A4B     		ldr	r3, .L21+28
 395 009c 0022     		movs	r2, #0
 396 009e 1A70     		strb	r2, [r3]
 145:../Core/Src/main.c ****     }
 397              		.loc 1 145 7 is_stmt 1 view .LVU110
 398 00a0 FFF7FEFF 		bl	Rx_UART_init
 399              	.LVL32:
 400 00a4 E3E7     		b	.L16
 401              	.L22:
 402 00a6 00BF     		.align	2
 403              	.L21:
 404 00a8 00000000 		.word	.LC0
 405 00ac 2C000000 		.word	.LC1
 406 00b0 60000000 		.word	.LC2
 407 00b4 68000000 		.word	.LC3
 408 00b8 74000000 		.word	.LC4
 409 00bc 7C000000 		.word	.LC5
 410 00c0 00000000 		.word	Rx_flag
 411 00c4 00000000 		.word	cmd_received
 412 00c8 00000000 		.word	Rx_Buffer
 413 00cc 00000000 		.word	.LANCHOR0
 414              		.cfi_endproc
 415              	.LFE144:
 417              		.global	last_valid_cmd
 418              		.section	.bss.last_valid_cmd,"aw",%nobits
 419              		.align	2
 420              		.set	.LANCHOR0,. + 0
 423              	last_valid_cmd:
 424 0000 00000000 		.space	16
 424      00000000 
 424      00000000 
 424      00000000 
 425              		.text
 426              	.Letext0:
 427              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 428              		.file 4 "../Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 429              		.file 5 "../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 430              		.file 6 "../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 431              		.file 7 "../Core/Inc/main.h"
 432              		.file 8 "../Core/Inc/usart.h"
 433              		.file 9 "../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pwr_ex.h"
 434              		.file 10 "../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 435              		.file 11 "../Core/Inc/gpio.h"
ARM GAS  /tmp/ccC4dOTN.s 			page 17


 436              		.file 12 "../Core/Inc/dma.h"
 437              		.file 13 "../Core/Inc/adc.h"
 438              		.file 14 "../Core/Inc/dac.h"
 439              		.file 15 "../Core/Inc/tim.h"
 440              		.file 16 "../Core/Inc/spi.h"
 441              		.file 17 "../Core/Inc/interface.h"
 442              		.file 18 "../Core/Inc/commands.h"
 443              		.file 19 "/usr/include/newlib/string.h"
 444              		.file 20 "../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 445              		.file 21 "<built-in>"
ARM GAS  /tmp/ccC4dOTN.s 			page 18


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccC4dOTN.s:17     .text.Error_Handler:0000000000000000 $t
     /tmp/ccC4dOTN.s:25     .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccC4dOTN.s:58     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccC4dOTN.s:65     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccC4dOTN.s:225    .text.SystemClock_Config:00000000000000a4 $d
     /tmp/ccC4dOTN.s:231    .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccC4dOTN.s:252    .text.main:0000000000000000 $t
     /tmp/ccC4dOTN.s:259    .text.main:0000000000000000 main
     /tmp/ccC4dOTN.s:404    .text.main:00000000000000a8 $d
     /tmp/ccC4dOTN.s:423    .bss.last_valid_cmd:0000000000000000 last_valid_cmd
     /tmp/ccC4dOTN.s:419    .bss.last_valid_cmd:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_USART3_UART_Init
MX_ADC1_Init
MX_DAC_Init
MX_TIM2_Init
MX_TIM6_Init
MX_SPI1_Init
ver_cb
UART_puts
exec_cmd
UART_putchar
Rx_UART_init
UART_Receive
strcpy
Rx_flag
cmd_received
Rx_Buffer
