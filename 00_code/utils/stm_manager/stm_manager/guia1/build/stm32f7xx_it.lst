ARM GAS  /tmp/ccorkyb3.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32f7xx_it.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.NMI_Handler,"ax",%progbits
  17              		.align	1
  18              		.global	NMI_Handler
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	NMI_Handler:
  26              	.LFB141:
  27              		.file 1 "../Core/Src/stm32f7xx_it.c"
   1:../Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN Header */
   2:../Core/Src/stm32f7xx_it.c **** /**
   3:../Core/Src/stm32f7xx_it.c ****   ******************************************************************************
   4:../Core/Src/stm32f7xx_it.c ****   * @file    stm32f7xx_it.c
   5:../Core/Src/stm32f7xx_it.c ****   * @brief   Interrupt Service Routines.
   6:../Core/Src/stm32f7xx_it.c ****   ******************************************************************************
   7:../Core/Src/stm32f7xx_it.c ****   * @attention
   8:../Core/Src/stm32f7xx_it.c ****   *
   9:../Core/Src/stm32f7xx_it.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:../Core/Src/stm32f7xx_it.c ****   * All rights reserved.</center></h2>
  11:../Core/Src/stm32f7xx_it.c ****   *
  12:../Core/Src/stm32f7xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:../Core/Src/stm32f7xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:../Core/Src/stm32f7xx_it.c ****   * License. You may obtain a copy of the License at:
  15:../Core/Src/stm32f7xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:../Core/Src/stm32f7xx_it.c ****   *
  17:../Core/Src/stm32f7xx_it.c ****   ******************************************************************************
  18:../Core/Src/stm32f7xx_it.c ****   */
  19:../Core/Src/stm32f7xx_it.c **** /* USER CODE END Header */
  20:../Core/Src/stm32f7xx_it.c **** 
  21:../Core/Src/stm32f7xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:../Core/Src/stm32f7xx_it.c **** #include "main.h"
  23:../Core/Src/stm32f7xx_it.c **** #include "stm32f7xx_it.h"
  24:../Core/Src/stm32f7xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:../Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN Includes */
  26:../Core/Src/stm32f7xx_it.c **** /* USER CODE END Includes */
  27:../Core/Src/stm32f7xx_it.c **** 
  28:../Core/Src/stm32f7xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:../Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN TD */
  30:../Core/Src/stm32f7xx_it.c **** 
  31:../Core/Src/stm32f7xx_it.c **** /* USER CODE END TD */
ARM GAS  /tmp/ccorkyb3.s 			page 2


  32:../Core/Src/stm32f7xx_it.c **** 
  33:../Core/Src/stm32f7xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:../Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN PD */
  35:../Core/Src/stm32f7xx_it.c **** 
  36:../Core/Src/stm32f7xx_it.c **** /* USER CODE END PD */
  37:../Core/Src/stm32f7xx_it.c **** 
  38:../Core/Src/stm32f7xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:../Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN PM */
  40:../Core/Src/stm32f7xx_it.c **** 
  41:../Core/Src/stm32f7xx_it.c **** /* USER CODE END PM */
  42:../Core/Src/stm32f7xx_it.c **** 
  43:../Core/Src/stm32f7xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:../Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN PV */
  45:../Core/Src/stm32f7xx_it.c **** 
  46:../Core/Src/stm32f7xx_it.c **** /* USER CODE END PV */
  47:../Core/Src/stm32f7xx_it.c **** 
  48:../Core/Src/stm32f7xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:../Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN PFP */
  50:../Core/Src/stm32f7xx_it.c **** 
  51:../Core/Src/stm32f7xx_it.c **** /* USER CODE END PFP */
  52:../Core/Src/stm32f7xx_it.c **** 
  53:../Core/Src/stm32f7xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:../Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN 0 */
  55:../Core/Src/stm32f7xx_it.c **** 
  56:../Core/Src/stm32f7xx_it.c **** /* USER CODE END 0 */
  57:../Core/Src/stm32f7xx_it.c **** 
  58:../Core/Src/stm32f7xx_it.c **** /* External variables --------------------------------------------------------*/
  59:../Core/Src/stm32f7xx_it.c **** extern ADC_HandleTypeDef hadc1;
  60:../Core/Src/stm32f7xx_it.c **** extern DMA_HandleTypeDef hdma_dac2;
  61:../Core/Src/stm32f7xx_it.c **** extern TIM_HandleTypeDef htim2;
  62:../Core/Src/stm32f7xx_it.c **** extern UART_HandleTypeDef huart3;
  63:../Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN EV */
  64:../Core/Src/stm32f7xx_it.c **** 
  65:../Core/Src/stm32f7xx_it.c **** /* USER CODE END EV */
  66:../Core/Src/stm32f7xx_it.c **** 
  67:../Core/Src/stm32f7xx_it.c **** /******************************************************************************/
  68:../Core/Src/stm32f7xx_it.c **** /*           Cortex-M7 Processor Interruption and Exception Handlers          */
  69:../Core/Src/stm32f7xx_it.c **** /******************************************************************************/
  70:../Core/Src/stm32f7xx_it.c **** /**
  71:../Core/Src/stm32f7xx_it.c ****   * @brief This function handles Non maskable interrupt.
  72:../Core/Src/stm32f7xx_it.c ****   */
  73:../Core/Src/stm32f7xx_it.c **** void NMI_Handler(void)
  74:../Core/Src/stm32f7xx_it.c **** {
  28              		.loc 1 74 1 view -0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.L2:
  75:../Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  76:../Core/Src/stm32f7xx_it.c **** 
  77:../Core/Src/stm32f7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  78:../Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  79:../Core/Src/stm32f7xx_it.c ****   while (1)
  35              		.loc 1 79 3 discriminator 1 view .LVU1
  80:../Core/Src/stm32f7xx_it.c ****   {
ARM GAS  /tmp/ccorkyb3.s 			page 3


  81:../Core/Src/stm32f7xx_it.c ****   }
  36              		.loc 1 81 3 discriminator 1 view .LVU2
  79:../Core/Src/stm32f7xx_it.c ****   {
  37              		.loc 1 79 9 discriminator 1 view .LVU3
  38 0000 FEE7     		b	.L2
  39              		.cfi_endproc
  40              	.LFE141:
  42              		.section	.text.HardFault_Handler,"ax",%progbits
  43              		.align	1
  44              		.global	HardFault_Handler
  45              		.syntax unified
  46              		.thumb
  47              		.thumb_func
  48              		.fpu fpv5-d16
  50              	HardFault_Handler:
  51              	.LFB142:
  82:../Core/Src/stm32f7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  83:../Core/Src/stm32f7xx_it.c **** }
  84:../Core/Src/stm32f7xx_it.c **** 
  85:../Core/Src/stm32f7xx_it.c **** /**
  86:../Core/Src/stm32f7xx_it.c ****   * @brief This function handles Hard fault interrupt.
  87:../Core/Src/stm32f7xx_it.c ****   */
  88:../Core/Src/stm32f7xx_it.c **** void HardFault_Handler(void)
  89:../Core/Src/stm32f7xx_it.c **** {
  52              		.loc 1 89 1 view -0
  53              		.cfi_startproc
  54              		@ Volatile: function does not return.
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
  58              	.L4:
  90:../Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  91:../Core/Src/stm32f7xx_it.c **** 
  92:../Core/Src/stm32f7xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  93:../Core/Src/stm32f7xx_it.c ****   while (1)
  59              		.loc 1 93 3 discriminator 1 view .LVU5
  94:../Core/Src/stm32f7xx_it.c ****   {
  95:../Core/Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  96:../Core/Src/stm32f7xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  97:../Core/Src/stm32f7xx_it.c ****   }
  60              		.loc 1 97 3 discriminator 1 view .LVU6
  93:../Core/Src/stm32f7xx_it.c ****   {
  61              		.loc 1 93 9 discriminator 1 view .LVU7
  62 0000 FEE7     		b	.L4
  63              		.cfi_endproc
  64              	.LFE142:
  66              		.section	.text.MemManage_Handler,"ax",%progbits
  67              		.align	1
  68              		.global	MemManage_Handler
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  72              		.fpu fpv5-d16
  74              	MemManage_Handler:
  75              	.LFB143:
  98:../Core/Src/stm32f7xx_it.c **** }
  99:../Core/Src/stm32f7xx_it.c **** 
ARM GAS  /tmp/ccorkyb3.s 			page 4


 100:../Core/Src/stm32f7xx_it.c **** /**
 101:../Core/Src/stm32f7xx_it.c ****   * @brief This function handles Memory management fault.
 102:../Core/Src/stm32f7xx_it.c ****   */
 103:../Core/Src/stm32f7xx_it.c **** void MemManage_Handler(void)
 104:../Core/Src/stm32f7xx_it.c **** {
  76              		.loc 1 104 1 view -0
  77              		.cfi_startproc
  78              		@ Volatile: function does not return.
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              		@ link register save eliminated.
  82              	.L6:
 105:../Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 106:../Core/Src/stm32f7xx_it.c **** 
 107:../Core/Src/stm32f7xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 108:../Core/Src/stm32f7xx_it.c ****   while (1)
  83              		.loc 1 108 3 discriminator 1 view .LVU9
 109:../Core/Src/stm32f7xx_it.c ****   {
 110:../Core/Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 111:../Core/Src/stm32f7xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 112:../Core/Src/stm32f7xx_it.c ****   }
  84              		.loc 1 112 3 discriminator 1 view .LVU10
 108:../Core/Src/stm32f7xx_it.c ****   {
  85              		.loc 1 108 9 discriminator 1 view .LVU11
  86 0000 FEE7     		b	.L6
  87              		.cfi_endproc
  88              	.LFE143:
  90              		.section	.text.BusFault_Handler,"ax",%progbits
  91              		.align	1
  92              		.global	BusFault_Handler
  93              		.syntax unified
  94              		.thumb
  95              		.thumb_func
  96              		.fpu fpv5-d16
  98              	BusFault_Handler:
  99              	.LFB144:
 113:../Core/Src/stm32f7xx_it.c **** }
 114:../Core/Src/stm32f7xx_it.c **** 
 115:../Core/Src/stm32f7xx_it.c **** /**
 116:../Core/Src/stm32f7xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 117:../Core/Src/stm32f7xx_it.c ****   */
 118:../Core/Src/stm32f7xx_it.c **** void BusFault_Handler(void)
 119:../Core/Src/stm32f7xx_it.c **** {
 100              		.loc 1 119 1 view -0
 101              		.cfi_startproc
 102              		@ Volatile: function does not return.
 103              		@ args = 0, pretend = 0, frame = 0
 104              		@ frame_needed = 0, uses_anonymous_args = 0
 105              		@ link register save eliminated.
 106              	.L8:
 120:../Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 121:../Core/Src/stm32f7xx_it.c **** 
 122:../Core/Src/stm32f7xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 123:../Core/Src/stm32f7xx_it.c ****   while (1)
 107              		.loc 1 123 3 discriminator 1 view .LVU13
 124:../Core/Src/stm32f7xx_it.c ****   {
 125:../Core/Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
ARM GAS  /tmp/ccorkyb3.s 			page 5


 126:../Core/Src/stm32f7xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 127:../Core/Src/stm32f7xx_it.c ****   }
 108              		.loc 1 127 3 discriminator 1 view .LVU14
 123:../Core/Src/stm32f7xx_it.c ****   {
 109              		.loc 1 123 9 discriminator 1 view .LVU15
 110 0000 FEE7     		b	.L8
 111              		.cfi_endproc
 112              	.LFE144:
 114              		.section	.text.UsageFault_Handler,"ax",%progbits
 115              		.align	1
 116              		.global	UsageFault_Handler
 117              		.syntax unified
 118              		.thumb
 119              		.thumb_func
 120              		.fpu fpv5-d16
 122              	UsageFault_Handler:
 123              	.LFB145:
 128:../Core/Src/stm32f7xx_it.c **** }
 129:../Core/Src/stm32f7xx_it.c **** 
 130:../Core/Src/stm32f7xx_it.c **** /**
 131:../Core/Src/stm32f7xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 132:../Core/Src/stm32f7xx_it.c ****   */
 133:../Core/Src/stm32f7xx_it.c **** void UsageFault_Handler(void)
 134:../Core/Src/stm32f7xx_it.c **** {
 124              		.loc 1 134 1 view -0
 125              		.cfi_startproc
 126              		@ Volatile: function does not return.
 127              		@ args = 0, pretend = 0, frame = 0
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129              		@ link register save eliminated.
 130              	.L10:
 135:../Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 136:../Core/Src/stm32f7xx_it.c **** 
 137:../Core/Src/stm32f7xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 138:../Core/Src/stm32f7xx_it.c ****   while (1)
 131              		.loc 1 138 3 discriminator 1 view .LVU17
 139:../Core/Src/stm32f7xx_it.c ****   {
 140:../Core/Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 141:../Core/Src/stm32f7xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 142:../Core/Src/stm32f7xx_it.c ****   }
 132              		.loc 1 142 3 discriminator 1 view .LVU18
 138:../Core/Src/stm32f7xx_it.c ****   {
 133              		.loc 1 138 9 discriminator 1 view .LVU19
 134 0000 FEE7     		b	.L10
 135              		.cfi_endproc
 136              	.LFE145:
 138              		.section	.text.SVC_Handler,"ax",%progbits
 139              		.align	1
 140              		.global	SVC_Handler
 141              		.syntax unified
 142              		.thumb
 143              		.thumb_func
 144              		.fpu fpv5-d16
 146              	SVC_Handler:
 147              	.LFB146:
 143:../Core/Src/stm32f7xx_it.c **** }
 144:../Core/Src/stm32f7xx_it.c **** 
ARM GAS  /tmp/ccorkyb3.s 			page 6


 145:../Core/Src/stm32f7xx_it.c **** /**
 146:../Core/Src/stm32f7xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 147:../Core/Src/stm32f7xx_it.c ****   */
 148:../Core/Src/stm32f7xx_it.c **** void SVC_Handler(void)
 149:../Core/Src/stm32f7xx_it.c **** {
 148              		.loc 1 149 1 view -0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              		@ link register save eliminated.
 150:../Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 151:../Core/Src/stm32f7xx_it.c **** 
 152:../Core/Src/stm32f7xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 153:../Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 154:../Core/Src/stm32f7xx_it.c **** 
 155:../Core/Src/stm32f7xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 156:../Core/Src/stm32f7xx_it.c **** }
 153              		.loc 1 156 1 view .LVU21
 154 0000 7047     		bx	lr
 155              		.cfi_endproc
 156              	.LFE146:
 158              		.section	.text.DebugMon_Handler,"ax",%progbits
 159              		.align	1
 160              		.global	DebugMon_Handler
 161              		.syntax unified
 162              		.thumb
 163              		.thumb_func
 164              		.fpu fpv5-d16
 166              	DebugMon_Handler:
 167              	.LFB147:
 157:../Core/Src/stm32f7xx_it.c **** 
 158:../Core/Src/stm32f7xx_it.c **** /**
 159:../Core/Src/stm32f7xx_it.c ****   * @brief This function handles Debug monitor.
 160:../Core/Src/stm32f7xx_it.c ****   */
 161:../Core/Src/stm32f7xx_it.c **** void DebugMon_Handler(void)
 162:../Core/Src/stm32f7xx_it.c **** {
 168              		.loc 1 162 1 view -0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172              		@ link register save eliminated.
 163:../Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 164:../Core/Src/stm32f7xx_it.c **** 
 165:../Core/Src/stm32f7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 166:../Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 167:../Core/Src/stm32f7xx_it.c **** 
 168:../Core/Src/stm32f7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 169:../Core/Src/stm32f7xx_it.c **** }
 173              		.loc 1 169 1 view .LVU23
 174 0000 7047     		bx	lr
 175              		.cfi_endproc
 176              	.LFE147:
 178              		.section	.text.PendSV_Handler,"ax",%progbits
 179              		.align	1
 180              		.global	PendSV_Handler
 181              		.syntax unified
 182              		.thumb
ARM GAS  /tmp/ccorkyb3.s 			page 7


 183              		.thumb_func
 184              		.fpu fpv5-d16
 186              	PendSV_Handler:
 187              	.LFB148:
 170:../Core/Src/stm32f7xx_it.c **** 
 171:../Core/Src/stm32f7xx_it.c **** /**
 172:../Core/Src/stm32f7xx_it.c ****   * @brief This function handles Pendable request for system service.
 173:../Core/Src/stm32f7xx_it.c ****   */
 174:../Core/Src/stm32f7xx_it.c **** void PendSV_Handler(void)
 175:../Core/Src/stm32f7xx_it.c **** {
 188              		.loc 1 175 1 view -0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              		@ link register save eliminated.
 176:../Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 177:../Core/Src/stm32f7xx_it.c **** 
 178:../Core/Src/stm32f7xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 179:../Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 180:../Core/Src/stm32f7xx_it.c **** 
 181:../Core/Src/stm32f7xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 182:../Core/Src/stm32f7xx_it.c **** }
 193              		.loc 1 182 1 view .LVU25
 194 0000 7047     		bx	lr
 195              		.cfi_endproc
 196              	.LFE148:
 198              		.section	.text.SysTick_Handler,"ax",%progbits
 199              		.align	1
 200              		.global	SysTick_Handler
 201              		.syntax unified
 202              		.thumb
 203              		.thumb_func
 204              		.fpu fpv5-d16
 206              	SysTick_Handler:
 207              	.LFB149:
 183:../Core/Src/stm32f7xx_it.c **** 
 184:../Core/Src/stm32f7xx_it.c **** /**
 185:../Core/Src/stm32f7xx_it.c ****   * @brief This function handles System tick timer.
 186:../Core/Src/stm32f7xx_it.c ****   */
 187:../Core/Src/stm32f7xx_it.c **** void SysTick_Handler(void)
 188:../Core/Src/stm32f7xx_it.c **** {
 208              		.loc 1 188 1 view -0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212 0000 08B5     		push	{r3, lr}
 213              	.LCFI0:
 214              		.cfi_def_cfa_offset 8
 215              		.cfi_offset 3, -8
 216              		.cfi_offset 14, -4
 189:../Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 190:../Core/Src/stm32f7xx_it.c **** 
 191:../Core/Src/stm32f7xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 192:../Core/Src/stm32f7xx_it.c ****   HAL_IncTick();
 217              		.loc 1 192 3 view .LVU27
 218 0002 FFF7FEFF 		bl	HAL_IncTick
 219              	.LVL0:
ARM GAS  /tmp/ccorkyb3.s 			page 8


 193:../Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 194:../Core/Src/stm32f7xx_it.c **** 
 195:../Core/Src/stm32f7xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 196:../Core/Src/stm32f7xx_it.c **** }
 220              		.loc 1 196 1 is_stmt 0 view .LVU28
 221 0006 08BD     		pop	{r3, pc}
 222              		.cfi_endproc
 223              	.LFE149:
 225              		.section	.text.DMA1_Stream6_IRQHandler,"ax",%progbits
 226              		.align	1
 227              		.global	DMA1_Stream6_IRQHandler
 228              		.syntax unified
 229              		.thumb
 230              		.thumb_func
 231              		.fpu fpv5-d16
 233              	DMA1_Stream6_IRQHandler:
 234              	.LFB150:
 197:../Core/Src/stm32f7xx_it.c **** 
 198:../Core/Src/stm32f7xx_it.c **** /******************************************************************************/
 199:../Core/Src/stm32f7xx_it.c **** /* STM32F7xx Peripheral Interrupt Handlers                                    */
 200:../Core/Src/stm32f7xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 201:../Core/Src/stm32f7xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 202:../Core/Src/stm32f7xx_it.c **** /* please refer to the startup file (startup_stm32f7xx.s).                    */
 203:../Core/Src/stm32f7xx_it.c **** /******************************************************************************/
 204:../Core/Src/stm32f7xx_it.c **** 
 205:../Core/Src/stm32f7xx_it.c **** /**
 206:../Core/Src/stm32f7xx_it.c ****   * @brief This function handles DMA1 stream6 global interrupt.
 207:../Core/Src/stm32f7xx_it.c ****   */
 208:../Core/Src/stm32f7xx_it.c **** void DMA1_Stream6_IRQHandler(void)
 209:../Core/Src/stm32f7xx_it.c **** {
 235              		.loc 1 209 1 is_stmt 1 view -0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239 0000 08B5     		push	{r3, lr}
 240              	.LCFI1:
 241              		.cfi_def_cfa_offset 8
 242              		.cfi_offset 3, -8
 243              		.cfi_offset 14, -4
 210:../Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream6_IRQn 0 */
 211:../Core/Src/stm32f7xx_it.c **** 
 212:../Core/Src/stm32f7xx_it.c ****   /* USER CODE END DMA1_Stream6_IRQn 0 */
 213:../Core/Src/stm32f7xx_it.c ****   HAL_DMA_IRQHandler(&hdma_dac2);
 244              		.loc 1 213 3 view .LVU30
 245 0002 0248     		ldr	r0, .L18
 246 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 247              	.LVL1:
 214:../Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream6_IRQn 1 */
 215:../Core/Src/stm32f7xx_it.c **** 
 216:../Core/Src/stm32f7xx_it.c ****   /* USER CODE END DMA1_Stream6_IRQn 1 */
 217:../Core/Src/stm32f7xx_it.c **** }
 248              		.loc 1 217 1 is_stmt 0 view .LVU31
 249 0008 08BD     		pop	{r3, pc}
 250              	.L19:
 251 000a 00BF     		.align	2
 252              	.L18:
 253 000c 00000000 		.word	hdma_dac2
ARM GAS  /tmp/ccorkyb3.s 			page 9


 254              		.cfi_endproc
 255              	.LFE150:
 257              		.section	.text.ADC_IRQHandler,"ax",%progbits
 258              		.align	1
 259              		.global	ADC_IRQHandler
 260              		.syntax unified
 261              		.thumb
 262              		.thumb_func
 263              		.fpu fpv5-d16
 265              	ADC_IRQHandler:
 266              	.LFB151:
 218:../Core/Src/stm32f7xx_it.c **** 
 219:../Core/Src/stm32f7xx_it.c **** /**
 220:../Core/Src/stm32f7xx_it.c ****   * @brief This function handles ADC1, ADC2 and ADC3 global interrupts.
 221:../Core/Src/stm32f7xx_it.c ****   */
 222:../Core/Src/stm32f7xx_it.c **** void ADC_IRQHandler(void)
 223:../Core/Src/stm32f7xx_it.c **** {
 267              		.loc 1 223 1 is_stmt 1 view -0
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 0
 270              		@ frame_needed = 0, uses_anonymous_args = 0
 271 0000 08B5     		push	{r3, lr}
 272              	.LCFI2:
 273              		.cfi_def_cfa_offset 8
 274              		.cfi_offset 3, -8
 275              		.cfi_offset 14, -4
 224:../Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN ADC_IRQn 0 */
 225:../Core/Src/stm32f7xx_it.c **** 
 226:../Core/Src/stm32f7xx_it.c ****   /* USER CODE END ADC_IRQn 0 */
 227:../Core/Src/stm32f7xx_it.c ****   HAL_ADC_IRQHandler(&hadc1);
 276              		.loc 1 227 3 view .LVU33
 277 0002 0248     		ldr	r0, .L22
 278 0004 FFF7FEFF 		bl	HAL_ADC_IRQHandler
 279              	.LVL2:
 228:../Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN ADC_IRQn 1 */
 229:../Core/Src/stm32f7xx_it.c **** 
 230:../Core/Src/stm32f7xx_it.c ****   /* USER CODE END ADC_IRQn 1 */
 231:../Core/Src/stm32f7xx_it.c **** }
 280              		.loc 1 231 1 is_stmt 0 view .LVU34
 281 0008 08BD     		pop	{r3, pc}
 282              	.L23:
 283 000a 00BF     		.align	2
 284              	.L22:
 285 000c 00000000 		.word	hadc1
 286              		.cfi_endproc
 287              	.LFE151:
 289              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 290              		.align	1
 291              		.global	TIM2_IRQHandler
 292              		.syntax unified
 293              		.thumb
 294              		.thumb_func
 295              		.fpu fpv5-d16
 297              	TIM2_IRQHandler:
 298              	.LFB152:
 232:../Core/Src/stm32f7xx_it.c **** 
 233:../Core/Src/stm32f7xx_it.c **** /**
ARM GAS  /tmp/ccorkyb3.s 			page 10


 234:../Core/Src/stm32f7xx_it.c ****   * @brief This function handles TIM2 global interrupt.
 235:../Core/Src/stm32f7xx_it.c ****   */
 236:../Core/Src/stm32f7xx_it.c **** void TIM2_IRQHandler(void)
 237:../Core/Src/stm32f7xx_it.c **** {
 299              		.loc 1 237 1 is_stmt 1 view -0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 0
 302              		@ frame_needed = 0, uses_anonymous_args = 0
 303 0000 08B5     		push	{r3, lr}
 304              	.LCFI3:
 305              		.cfi_def_cfa_offset 8
 306              		.cfi_offset 3, -8
 307              		.cfi_offset 14, -4
 238:../Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 0 */
 239:../Core/Src/stm32f7xx_it.c **** 
 240:../Core/Src/stm32f7xx_it.c ****   /* USER CODE END TIM2_IRQn 0 */
 241:../Core/Src/stm32f7xx_it.c ****   HAL_TIM_IRQHandler(&htim2);
 308              		.loc 1 241 3 view .LVU36
 309 0002 0248     		ldr	r0, .L26
 310 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 311              	.LVL3:
 242:../Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 1 */
 243:../Core/Src/stm32f7xx_it.c **** 
 244:../Core/Src/stm32f7xx_it.c ****   /* USER CODE END TIM2_IRQn 1 */
 245:../Core/Src/stm32f7xx_it.c **** }
 312              		.loc 1 245 1 is_stmt 0 view .LVU37
 313 0008 08BD     		pop	{r3, pc}
 314              	.L27:
 315 000a 00BF     		.align	2
 316              	.L26:
 317 000c 00000000 		.word	htim2
 318              		.cfi_endproc
 319              	.LFE152:
 321              		.section	.text.USART3_IRQHandler,"ax",%progbits
 322              		.align	1
 323              		.global	USART3_IRQHandler
 324              		.syntax unified
 325              		.thumb
 326              		.thumb_func
 327              		.fpu fpv5-d16
 329              	USART3_IRQHandler:
 330              	.LFB153:
 246:../Core/Src/stm32f7xx_it.c **** 
 247:../Core/Src/stm32f7xx_it.c **** /**
 248:../Core/Src/stm32f7xx_it.c ****   * @brief This function handles USART3 global interrupt.
 249:../Core/Src/stm32f7xx_it.c ****   */
 250:../Core/Src/stm32f7xx_it.c **** void USART3_IRQHandler(void)
 251:../Core/Src/stm32f7xx_it.c **** {
 331              		.loc 1 251 1 is_stmt 1 view -0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 0
 334              		@ frame_needed = 0, uses_anonymous_args = 0
 335 0000 08B5     		push	{r3, lr}
 336              	.LCFI4:
 337              		.cfi_def_cfa_offset 8
 338              		.cfi_offset 3, -8
 339              		.cfi_offset 14, -4
ARM GAS  /tmp/ccorkyb3.s 			page 11


 252:../Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN USART3_IRQn 0 */
 253:../Core/Src/stm32f7xx_it.c **** 
 254:../Core/Src/stm32f7xx_it.c ****   /* USER CODE END USART3_IRQn 0 */
 255:../Core/Src/stm32f7xx_it.c ****   HAL_UART_IRQHandler(&huart3);
 340              		.loc 1 255 3 view .LVU39
 341 0002 0248     		ldr	r0, .L30
 342 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 343              	.LVL4:
 256:../Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN USART3_IRQn 1 */
 257:../Core/Src/stm32f7xx_it.c **** 
 258:../Core/Src/stm32f7xx_it.c ****   /* USER CODE END USART3_IRQn 1 */
 259:../Core/Src/stm32f7xx_it.c **** }
 344              		.loc 1 259 1 is_stmt 0 view .LVU40
 345 0008 08BD     		pop	{r3, pc}
 346              	.L31:
 347 000a 00BF     		.align	2
 348              	.L30:
 349 000c 00000000 		.word	huart3
 350              		.cfi_endproc
 351              	.LFE153:
 353              		.text
 354              	.Letext0:
 355              		.file 2 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 356              		.file 3 "../Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 357              		.file 4 "../Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 358              		.file 5 "../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 359              		.file 6 "../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 360              		.file 7 "../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_adc.h"
 361              		.file 8 "../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 362              		.file 9 "../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 363              		.file 10 "../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
ARM GAS  /tmp/ccorkyb3.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_it.c
     /tmp/ccorkyb3.s:17     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccorkyb3.s:25     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccorkyb3.s:43     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccorkyb3.s:50     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccorkyb3.s:67     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccorkyb3.s:74     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccorkyb3.s:91     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccorkyb3.s:98     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccorkyb3.s:115    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccorkyb3.s:122    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccorkyb3.s:139    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccorkyb3.s:146    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccorkyb3.s:159    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccorkyb3.s:166    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccorkyb3.s:179    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccorkyb3.s:186    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccorkyb3.s:199    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccorkyb3.s:206    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccorkyb3.s:226    .text.DMA1_Stream6_IRQHandler:0000000000000000 $t
     /tmp/ccorkyb3.s:233    .text.DMA1_Stream6_IRQHandler:0000000000000000 DMA1_Stream6_IRQHandler
     /tmp/ccorkyb3.s:253    .text.DMA1_Stream6_IRQHandler:000000000000000c $d
     /tmp/ccorkyb3.s:258    .text.ADC_IRQHandler:0000000000000000 $t
     /tmp/ccorkyb3.s:265    .text.ADC_IRQHandler:0000000000000000 ADC_IRQHandler
     /tmp/ccorkyb3.s:285    .text.ADC_IRQHandler:000000000000000c $d
     /tmp/ccorkyb3.s:290    .text.TIM2_IRQHandler:0000000000000000 $t
     /tmp/ccorkyb3.s:297    .text.TIM2_IRQHandler:0000000000000000 TIM2_IRQHandler
     /tmp/ccorkyb3.s:317    .text.TIM2_IRQHandler:000000000000000c $d
     /tmp/ccorkyb3.s:322    .text.USART3_IRQHandler:0000000000000000 $t
     /tmp/ccorkyb3.s:329    .text.USART3_IRQHandler:0000000000000000 USART3_IRQHandler
     /tmp/ccorkyb3.s:349    .text.USART3_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_DMA_IRQHandler
hdma_dac2
HAL_ADC_IRQHandler
hadc1
HAL_TIM_IRQHandler
htim2
HAL_UART_IRQHandler
huart3
