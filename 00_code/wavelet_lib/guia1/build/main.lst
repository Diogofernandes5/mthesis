ARM GAS  /tmp/cc7fR7um.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"main.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.rodata.print_vector.str1.4,"aMS",%progbits,1
  17              		.align	2
  18              	.LC1:
  19 0000 2025352E 		.ascii	" %5.2f,%5.2fj \000"
  19      32662C25 
  19      352E3266 
  19      6A2000
  20              		.section	.text.print_vector,"ax",%progbits
  21              		.align	1
  22              		.global	print_vector
  23              		.arch armv7e-m
  24              		.syntax unified
  25              		.thumb
  26              		.thumb_func
  27              		.fpu fpv5-d16
  29              	print_vector:
  30              	.LVL0:
  31              	.LFB146:
  32              		.file 1 "../Core/Src/main.c"
   1:../Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:../Core/Src/main.c **** /**
   3:../Core/Src/main.c ****   ******************************************************************************
   4:../Core/Src/main.c ****   * @file           : main.c
   5:../Core/Src/main.c ****   * @brief          : Main program body
   6:../Core/Src/main.c ****   ******************************************************************************
   7:../Core/Src/main.c ****   * @attention
   8:../Core/Src/main.c ****   *
   9:../Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:../Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:../Core/Src/main.c ****   *
  12:../Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:../Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:../Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:../Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:../Core/Src/main.c ****   *
  17:../Core/Src/main.c ****   ******************************************************************************
  18:../Core/Src/main.c ****   */
  19:../Core/Src/main.c **** /* USER CODE END Header */
  20:../Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:../Core/Src/main.c **** #include "main.h"
  22:../Core/Src/main.c **** #include "adc.h"
  23:../Core/Src/main.c **** #include "dac.h"
ARM GAS  /tmp/cc7fR7um.s 			page 2


  24:../Core/Src/main.c **** #include "dma.h"
  25:../Core/Src/main.c **** #include "spi.h"
  26:../Core/Src/main.c **** #include "tim.h"
  27:../Core/Src/main.c **** #include "usart.h"
  28:../Core/Src/main.c **** #include "gpio.h"
  29:../Core/Src/main.c **** 
  30:../Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  31:../Core/Src/main.c **** /* USER CODE BEGIN Includes */
  32:../Core/Src/main.c **** #include <string.h>
  33:../Core/Src/main.c **** #include "commands.h"
  34:../Core/Src/main.c **** #include "interface.h" // print startup message
  35:../Core/Src/main.c **** 
  36:../Core/Src/main.c **** #include "complex.h"
  37:../Core/Src/main.c **** #include "cwt.h"
  38:../Core/Src/main.c **** #include "wavelet.h"
  39:../Core/Src/main.c **** 
  40:../Core/Src/main.c **** /* USER CODE END Includes */
  41:../Core/Src/main.c **** 
  42:../Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  43:../Core/Src/main.c **** /* USER CODE BEGIN PTD */
  44:../Core/Src/main.c **** 
  45:../Core/Src/main.c **** /* USER CODE END PTD */
  46:../Core/Src/main.c **** 
  47:../Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  48:../Core/Src/main.c **** /* USER CODE BEGIN PD */
  49:../Core/Src/main.c **** #define N     8
  50:../Core/Src/main.c **** #define DT    0.25
  51:../Core/Src/main.c **** #define DJ    0.25
  52:../Core/Src/main.c **** #define S0    (2*DT)
  53:../Core/Src/main.c **** #define J     (7/DJ)
  54:../Core/Src/main.c **** 
  55:../Core/Src/main.c **** /* USER CODE END PD */
  56:../Core/Src/main.c **** 
  57:../Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  58:../Core/Src/main.c **** /* USER CODE BEGIN PM */
  59:../Core/Src/main.c **** 
  60:../Core/Src/main.c **** /* USER CODE END PM */
  61:../Core/Src/main.c **** 
  62:../Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  63:../Core/Src/main.c **** 
  64:../Core/Src/main.c **** /* USER CODE BEGIN PV */
  65:../Core/Src/main.c **** char last_valid_cmd[RX_BUFF_LEN] = {0};
  66:../Core/Src/main.c **** 
  67:../Core/Src/main.c **** /* USER CODE END PV */
  68:../Core/Src/main.c **** 
  69:../Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  70:../Core/Src/main.c **** void SystemClock_Config(void);
  71:../Core/Src/main.c **** /* USER CODE BEGIN PFP */
  72:../Core/Src/main.c **** 
  73:../Core/Src/main.c **** /* USER CODE END PFP */
  74:../Core/Src/main.c **** 
  75:../Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  76:../Core/Src/main.c **** /* USER CODE BEGIN 0 */
  77:../Core/Src/main.c **** 
  78:../Core/Src/main.c **** void print_vector(complex *x, int n)
  79:../Core/Src/main.c **** {
  33              		.loc 1 79 1 view -0
ARM GAS  /tmp/cc7fR7um.s 			page 3


  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 16
  36              		@ frame_needed = 0, uses_anonymous_args = 0
  37              		.loc 1 79 1 is_stmt 0 view .LVU1
  38 0000 70B5     		push	{r4, r5, r6, lr}
  39              	.LCFI0:
  40              		.cfi_def_cfa_offset 16
  41              		.cfi_offset 4, -16
  42              		.cfi_offset 5, -12
  43              		.cfi_offset 6, -8
  44              		.cfi_offset 14, -4
  45 0002 86B0     		sub	sp, sp, #24
  46              	.LCFI1:
  47              		.cfi_def_cfa_offset 40
  48 0004 0646     		mov	r6, r0
  49 0006 0D46     		mov	r5, r1
  80:../Core/Src/main.c ****   for(int i = 0; i < n; i++)
  50              		.loc 1 80 3 is_stmt 1 view .LVU2
  51              	.LBB4:
  52              		.loc 1 80 7 view .LVU3
  53              	.LVL1:
  54              		.loc 1 80 11 is_stmt 0 view .LVU4
  55 0008 0024     		movs	r4, #0
  56              		.loc 1 80 3 view .LVU5
  57 000a 15E0     		b	.L2
  58              	.LVL2:
  59              	.L3:
  60              	.LBB5:
  81:../Core/Src/main.c ****   {
  82:../Core/Src/main.c ****     char str[16];
  61              		.loc 1 82 5 is_stmt 1 discriminator 3 view .LVU6
  83:../Core/Src/main.c ****     sprintf(str, " %5.2f,%5.2fj ", x[i].Re,x[i].Im);
  62              		.loc 1 83 5 discriminator 3 view .LVU7
  63              		.loc 1 83 37 is_stmt 0 discriminator 3 view .LVU8
  64 000c 06EBC403 		add	r3, r6, r4, lsl #3
  65              		.loc 1 83 40 discriminator 3 view .LVU9
  66 0010 D3ED006A 		vldr.32	s13, [r3]
  67              		.loc 1 83 48 discriminator 3 view .LVU10
  68 0014 93ED017A 		vldr.32	s14, [r3, #4]
  69              		.loc 1 83 5 discriminator 3 view .LVU11
  70 0018 B7EEC77A 		vcvt.f64.f32	d7, s14
  71 001c 8DED007B 		vstr.64	d7, [sp]
  72 0020 B7EEE67A 		vcvt.f64.f32	d7, s13
  73 0024 53EC172B 		vmov	r2, r3, d7
  74 0028 0749     		ldr	r1, .L5
  75 002a 02A8     		add	r0, sp, #8
  76 002c FFF7FEFF 		bl	sprintf
  77              	.LVL3:
  84:../Core/Src/main.c ****     UART_puts(str);
  78              		.loc 1 84 5 is_stmt 1 discriminator 3 view .LVU12
  79 0030 02A8     		add	r0, sp, #8
  80 0032 FFF7FEFF 		bl	UART_puts
  81              	.LVL4:
  82              	.LBE5:
  80:../Core/Src/main.c ****   {
  83              		.loc 1 80 25 discriminator 3 view .LVU13
  80:../Core/Src/main.c ****   {
ARM GAS  /tmp/cc7fR7um.s 			page 4


  84              		.loc 1 80 26 is_stmt 0 discriminator 3 view .LVU14
  85 0036 0134     		adds	r4, r4, #1
  86              	.LVL5:
  87              	.L2:
  80:../Core/Src/main.c ****   {
  88              		.loc 1 80 18 is_stmt 1 discriminator 1 view .LVU15
  80:../Core/Src/main.c ****   {
  89              		.loc 1 80 3 is_stmt 0 discriminator 1 view .LVU16
  90 0038 AC42     		cmp	r4, r5
  91 003a E7DB     		blt	.L3
  92              	.LBE4:
  85:../Core/Src/main.c ****   } 
  86:../Core/Src/main.c ****   putchar('\n');
  93              		.loc 1 86 3 is_stmt 1 view .LVU17
  94 003c 0A20     		movs	r0, #10
  95 003e FFF7FEFF 		bl	putchar
  96              	.LVL6:
  87:../Core/Src/main.c **** }
  97              		.loc 1 87 1 is_stmt 0 view .LVU18
  98 0042 06B0     		add	sp, sp, #24
  99              	.LCFI2:
 100              		.cfi_def_cfa_offset 16
 101              		@ sp needed
 102 0044 70BD     		pop	{r4, r5, r6, pc}
 103              	.LVL7:
 104              	.L6:
 105              		.loc 1 87 1 view .LVU19
 106 0046 00BF     		.align	2
 107              	.L5:
 108 0048 00000000 		.word	.LC1
 109              		.cfi_endproc
 110              	.LFE146:
 112              		.section	.text.Error_Handler,"ax",%progbits
 113              		.align	1
 114              		.global	Error_Handler
 115              		.syntax unified
 116              		.thumb
 117              		.thumb_func
 118              		.fpu fpv5-d16
 120              	Error_Handler:
 121              	.LFB149:
  88:../Core/Src/main.c **** 
  89:../Core/Src/main.c **** /* USER CODE END 0 */
  90:../Core/Src/main.c **** 
  91:../Core/Src/main.c **** /**
  92:../Core/Src/main.c ****   * @brief  The application entry point.
  93:../Core/Src/main.c ****   * @retval int
  94:../Core/Src/main.c ****   */
  95:../Core/Src/main.c **** int main(void)
  96:../Core/Src/main.c **** {
  97:../Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  98:../Core/Src/main.c ****   char c;
  99:../Core/Src/main.c ****   char string[24];
 100:../Core/Src/main.c **** 
 101:../Core/Src/main.c ****   /* USER CODE END 1 */
 102:../Core/Src/main.c **** 
 103:../Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
ARM GAS  /tmp/cc7fR7um.s 			page 5


 104:../Core/Src/main.c **** 
 105:../Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 106:../Core/Src/main.c ****   HAL_Init();
 107:../Core/Src/main.c **** 
 108:../Core/Src/main.c ****   /* USER CODE BEGIN Init */
 109:../Core/Src/main.c **** 
 110:../Core/Src/main.c ****   /* USER CODE END Init */
 111:../Core/Src/main.c **** 
 112:../Core/Src/main.c ****   /* Configure the system clock */
 113:../Core/Src/main.c ****   SystemClock_Config();
 114:../Core/Src/main.c **** 
 115:../Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 116:../Core/Src/main.c **** 
 117:../Core/Src/main.c ****   /* USER CODE END SysInit */
 118:../Core/Src/main.c **** 
 119:../Core/Src/main.c ****   /* Initialize all configured peripherals */
 120:../Core/Src/main.c ****   MX_GPIO_Init();
 121:../Core/Src/main.c ****   MX_DMA_Init();
 122:../Core/Src/main.c ****   MX_USART3_UART_Init();
 123:../Core/Src/main.c ****   MX_ADC1_Init();
 124:../Core/Src/main.c ****   MX_DAC_Init();
 125:../Core/Src/main.c ****   MX_TIM2_Init();
 126:../Core/Src/main.c ****   MX_TIM6_Init();
 127:../Core/Src/main.c ****   MX_SPI1_Init();
 128:../Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 129:../Core/Src/main.c ****   // print startup message
 130:../Core/Src/main.c ****   ver_cb(1, NULL);
 131:../Core/Src/main.c ****   UART_puts("\n\rType '?' for list of available commands\n\r");
 132:../Core/Src/main.c ****   UART_puts("Type '? <cmd>' for more info on a given command\n\r");
 133:../Core/Src/main.c **** 
 134:../Core/Src/main.c ****   /* USER CODE END 2 */
 135:../Core/Src/main.c **** 
 136:../Core/Src/main.c ****   /* Infinite loop */
 137:../Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 138:../Core/Src/main.c ****   complex y[N] = {{1,0},{2,0},{3,0},{4,0},{5,0},{6,0},{7,0},{8,0}};
 139:../Core/Src/main.c ****   complex y_cwt[N];
 140:../Core/Src/main.c ****   float period[(int)J];
 141:../Core/Src/main.c ****   float scale[(int)J];
 142:../Core/Src/main.c ****   float coi[N];
 143:../Core/Src/main.c **** 
 144:../Core/Src/main.c ****   UART_puts("Original vector:");
 145:../Core/Src/main.c ****   print_vector(y, N);
 146:../Core/Src/main.c **** 
 147:../Core/Src/main.c ****   cwt(y, N, DT, DJ, S0, J, MORLET, 6.0, y_cwt, period, scale, coi);
 148:../Core/Src/main.c **** 
 149:../Core/Src/main.c ****   HAL_Delay(500);
 150:../Core/Src/main.c ****   UART_puts("Transformed vector:");
 151:../Core/Src/main.c ****   print_vector(y_cwt, N);
 152:../Core/Src/main.c **** 
 153:../Core/Src/main.c ****   UART_putchar('>'); // print prompt
 154:../Core/Src/main.c ****   Rx_UART_init(); // set USART3 interrupt
 155:../Core/Src/main.c **** 
 156:../Core/Src/main.c ****   while (1)
 157:../Core/Src/main.c ****   {
 158:../Core/Src/main.c ****     if(Rx_flag)
 159:../Core/Src/main.c ****     {
 160:../Core/Src/main.c ****       c = UART_Receive(); // Returns received char
ARM GAS  /tmp/cc7fR7um.s 			page 6


 161:../Core/Src/main.c ****       if(c != (char)(-1))
 162:../Core/Src/main.c ****         // Its not a special character
 163:../Core/Src/main.c ****         UART_putchar(c); // Received char is echoed
 164:../Core/Src/main.c **** 
 165:../Core/Src/main.c ****       Rx_flag = 0;
 166:../Core/Src/main.c ****     }
 167:../Core/Src/main.c ****     
 168:../Core/Src/main.c ****     if(cmd_received)
 169:../Core/Src/main.c ****     {
 170:../Core/Src/main.c ****       if(exec_cmd(Rx_Buffer) == 0)// Is there an error?
 171:../Core/Src/main.c ****         // No error. Command is valid
 172:../Core/Src/main.c ****         strcpy(last_valid_cmd, Rx_Buffer); // Save this as last valid command
 173:../Core/Src/main.c ****       
 174:../Core/Src/main.c ****       UART_putchar('>');// print prompt
 175:../Core/Src/main.c ****       cmd_received = 0;
 176:../Core/Src/main.c ****       Rx_UART_init(); // ready to begin reception
 177:../Core/Src/main.c ****     }
 178:../Core/Src/main.c **** 
 179:../Core/Src/main.c ****     /* USER CODE END WHILE */
 180:../Core/Src/main.c **** 
 181:../Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 182:../Core/Src/main.c ****   }
 183:../Core/Src/main.c ****   /* USER CODE END 3 */
 184:../Core/Src/main.c **** }
 185:../Core/Src/main.c **** 
 186:../Core/Src/main.c **** /**
 187:../Core/Src/main.c ****   * @brief System Clock Configuration
 188:../Core/Src/main.c ****   * @retval None
 189:../Core/Src/main.c ****   */
 190:../Core/Src/main.c **** void SystemClock_Config(void)
 191:../Core/Src/main.c **** {
 192:../Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 193:../Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 194:../Core/Src/main.c **** 
 195:../Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 196:../Core/Src/main.c ****   */
 197:../Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 198:../Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 199:../Core/Src/main.c **** 
 200:../Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 201:../Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 202:../Core/Src/main.c ****   */
 203:../Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 204:../Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 205:../Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 206:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 207:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 208:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 209:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 216;
 210:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 211:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 212:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 213:../Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 214:../Core/Src/main.c ****   {
 215:../Core/Src/main.c ****     Error_Handler();
 216:../Core/Src/main.c ****   }
 217:../Core/Src/main.c **** 
ARM GAS  /tmp/cc7fR7um.s 			page 7


 218:../Core/Src/main.c ****   /** Activate the Over-Drive mode
 219:../Core/Src/main.c ****   */
 220:../Core/Src/main.c ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 221:../Core/Src/main.c ****   {
 222:../Core/Src/main.c ****     Error_Handler();
 223:../Core/Src/main.c ****   }
 224:../Core/Src/main.c **** 
 225:../Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 226:../Core/Src/main.c ****   */
 227:../Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 228:../Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 229:../Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 230:../Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 231:../Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 232:../Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 233:../Core/Src/main.c **** 
 234:../Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 235:../Core/Src/main.c ****   {
 236:../Core/Src/main.c ****     Error_Handler();
 237:../Core/Src/main.c ****   }
 238:../Core/Src/main.c **** }
 239:../Core/Src/main.c **** 
 240:../Core/Src/main.c **** /* USER CODE BEGIN 4 */
 241:../Core/Src/main.c **** 
 242:../Core/Src/main.c **** 
 243:../Core/Src/main.c **** /* USER CODE END 4 */
 244:../Core/Src/main.c **** 
 245:../Core/Src/main.c **** /**
 246:../Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 247:../Core/Src/main.c ****   * @retval None
 248:../Core/Src/main.c ****   */
 249:../Core/Src/main.c **** void Error_Handler(void)
 250:../Core/Src/main.c **** {
 122              		.loc 1 250 1 is_stmt 1 view -0
 123              		.cfi_startproc
 124              		@ Volatile: function does not return.
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127              		@ link register save eliminated.
 251:../Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 252:../Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 253:../Core/Src/main.c ****   __disable_irq();
 128              		.loc 1 253 3 view .LVU21
 129              	.LBB6:
 130              	.LBI6:
 131              		.file 2 "../Drivers/CMSIS/Include/cmsis_gcc.h"
   1:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:../Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:../Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
ARM GAS  /tmp/cc7fR7um.s 			page 8


  12:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
ARM GAS  /tmp/cc7fR7um.s 			page 9


  69:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:../Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:../Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:../Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:../Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
ARM GAS  /tmp/cc7fR7um.s 			page 10


 126:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 132              		.loc 2 140 27 view .LVU22
 133              	.LBB7:
 141:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 134              		.loc 2 142 3 view .LVU23
 135              		.syntax unified
 136              	@ 142 "../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 137 0000 72B6     		cpsid i
 138              	@ 0 "" 2
 139              		.thumb
 140              		.syntax unified
 141              	.L8:
 142              	.LBE7:
 143              	.LBE6:
 254:../Core/Src/main.c ****   while (1)
 144              		.loc 1 254 3 discriminator 1 view .LVU24
 255:../Core/Src/main.c ****   {
 256:../Core/Src/main.c **** 
 257:../Core/Src/main.c ****   }
 145              		.loc 1 257 3 discriminator 1 view .LVU25
 254:../Core/Src/main.c ****   while (1)
 146              		.loc 1 254 9 discriminator 1 view .LVU26
 147 0002 FEE7     		b	.L8
 148              		.cfi_endproc
 149              	.LFE149:
 151              		.section	.text.SystemClock_Config,"ax",%progbits
 152              		.align	1
 153              		.global	SystemClock_Config
 154              		.syntax unified
 155              		.thumb
 156              		.thumb_func
 157              		.fpu fpv5-d16
 159              	SystemClock_Config:
 160              	.LFB148:
 191:../Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 161              		.loc 1 191 1 view -0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 80
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165 0000 00B5     		push	{lr}
 166              	.LCFI3:
 167              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/cc7fR7um.s 			page 11


 168              		.cfi_offset 14, -4
 169 0002 95B0     		sub	sp, sp, #84
 170              	.LCFI4:
 171              		.cfi_def_cfa_offset 88
 192:../Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 172              		.loc 1 192 3 view .LVU28
 192:../Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 173              		.loc 1 192 22 is_stmt 0 view .LVU29
 174 0004 3422     		movs	r2, #52
 175 0006 0021     		movs	r1, #0
 176 0008 07A8     		add	r0, sp, #28
 177 000a FFF7FEFF 		bl	memset
 178              	.LVL8:
 193:../Core/Src/main.c **** 
 179              		.loc 1 193 3 is_stmt 1 view .LVU30
 193:../Core/Src/main.c **** 
 180              		.loc 1 193 22 is_stmt 0 view .LVU31
 181 000e 0023     		movs	r3, #0
 182 0010 0293     		str	r3, [sp, #8]
 183 0012 0393     		str	r3, [sp, #12]
 184 0014 0493     		str	r3, [sp, #16]
 185 0016 0593     		str	r3, [sp, #20]
 186 0018 0693     		str	r3, [sp, #24]
 197:../Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 187              		.loc 1 197 3 is_stmt 1 view .LVU32
 188              	.LBB8:
 197:../Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 189              		.loc 1 197 3 view .LVU33
 197:../Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 190              		.loc 1 197 3 view .LVU34
 191 001a 224A     		ldr	r2, .L17
 192 001c 116C     		ldr	r1, [r2, #64]
 193 001e 41F08051 		orr	r1, r1, #268435456
 194 0022 1164     		str	r1, [r2, #64]
 197:../Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 195              		.loc 1 197 3 view .LVU35
 196 0024 126C     		ldr	r2, [r2, #64]
 197 0026 02F08052 		and	r2, r2, #268435456
 198 002a 0092     		str	r2, [sp]
 197:../Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 199              		.loc 1 197 3 view .LVU36
 200 002c 009A     		ldr	r2, [sp]
 201              	.LBE8:
 197:../Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 202              		.loc 1 197 3 view .LVU37
 198:../Core/Src/main.c **** 
 203              		.loc 1 198 3 view .LVU38
 204              	.LBB9:
 198:../Core/Src/main.c **** 
 205              		.loc 1 198 3 view .LVU39
 198:../Core/Src/main.c **** 
 206              		.loc 1 198 3 view .LVU40
 207 002e 1E4A     		ldr	r2, .L17+4
 208 0030 1168     		ldr	r1, [r2]
 209 0032 41F44041 		orr	r1, r1, #49152
 210 0036 1160     		str	r1, [r2]
 198:../Core/Src/main.c **** 
ARM GAS  /tmp/cc7fR7um.s 			page 12


 211              		.loc 1 198 3 view .LVU41
 212 0038 1268     		ldr	r2, [r2]
 213 003a 02F44042 		and	r2, r2, #49152
 214 003e 0192     		str	r2, [sp, #4]
 198:../Core/Src/main.c **** 
 215              		.loc 1 198 3 view .LVU42
 216 0040 019A     		ldr	r2, [sp, #4]
 217              	.LBE9:
 198:../Core/Src/main.c **** 
 218              		.loc 1 198 3 view .LVU43
 203:../Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 219              		.loc 1 203 3 view .LVU44
 203:../Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 220              		.loc 1 203 36 is_stmt 0 view .LVU45
 221 0042 0222     		movs	r2, #2
 222 0044 0792     		str	r2, [sp, #28]
 204:../Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 223              		.loc 1 204 3 is_stmt 1 view .LVU46
 204:../Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 224              		.loc 1 204 30 is_stmt 0 view .LVU47
 225 0046 0121     		movs	r1, #1
 226 0048 0A91     		str	r1, [sp, #40]
 205:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 227              		.loc 1 205 3 is_stmt 1 view .LVU48
 205:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 228              		.loc 1 205 41 is_stmt 0 view .LVU49
 229 004a 1021     		movs	r1, #16
 230 004c 0B91     		str	r1, [sp, #44]
 206:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 231              		.loc 1 206 3 is_stmt 1 view .LVU50
 206:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 232              		.loc 1 206 34 is_stmt 0 view .LVU51
 233 004e 0D92     		str	r2, [sp, #52]
 207:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 234              		.loc 1 207 3 is_stmt 1 view .LVU52
 207:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 235              		.loc 1 207 35 is_stmt 0 view .LVU53
 236 0050 0E93     		str	r3, [sp, #56]
 208:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 216;
 237              		.loc 1 208 3 is_stmt 1 view .LVU54
 208:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 216;
 238              		.loc 1 208 30 is_stmt 0 view .LVU55
 239 0052 0823     		movs	r3, #8
 240 0054 0F93     		str	r3, [sp, #60]
 209:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 241              		.loc 1 209 3 is_stmt 1 view .LVU56
 209:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 242              		.loc 1 209 30 is_stmt 0 view .LVU57
 243 0056 D823     		movs	r3, #216
 244 0058 1093     		str	r3, [sp, #64]
 210:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 245              		.loc 1 210 3 is_stmt 1 view .LVU58
 210:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 246              		.loc 1 210 30 is_stmt 0 view .LVU59
 247 005a 1192     		str	r2, [sp, #68]
 211:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 248              		.loc 1 211 3 is_stmt 1 view .LVU60
ARM GAS  /tmp/cc7fR7um.s 			page 13


 211:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 249              		.loc 1 211 30 is_stmt 0 view .LVU61
 250 005c 1292     		str	r2, [sp, #72]
 212:../Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 251              		.loc 1 212 3 is_stmt 1 view .LVU62
 212:../Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 252              		.loc 1 212 30 is_stmt 0 view .LVU63
 253 005e 1392     		str	r2, [sp, #76]
 213:../Core/Src/main.c ****   {
 254              		.loc 1 213 3 is_stmt 1 view .LVU64
 213:../Core/Src/main.c ****   {
 255              		.loc 1 213 7 is_stmt 0 view .LVU65
 256 0060 07A8     		add	r0, sp, #28
 257 0062 FFF7FEFF 		bl	HAL_RCC_OscConfig
 258              	.LVL9:
 213:../Core/Src/main.c ****   {
 259              		.loc 1 213 6 view .LVU66
 260 0066 B0B9     		cbnz	r0, .L14
 220:../Core/Src/main.c ****   {
 261              		.loc 1 220 3 is_stmt 1 view .LVU67
 220:../Core/Src/main.c ****   {
 262              		.loc 1 220 7 is_stmt 0 view .LVU68
 263 0068 FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 264              	.LVL10:
 220:../Core/Src/main.c ****   {
 265              		.loc 1 220 6 view .LVU69
 266 006c A8B9     		cbnz	r0, .L15
 227:../Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 267              		.loc 1 227 3 is_stmt 1 view .LVU70
 227:../Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 268              		.loc 1 227 31 is_stmt 0 view .LVU71
 269 006e 0F23     		movs	r3, #15
 270 0070 0293     		str	r3, [sp, #8]
 229:../Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 271              		.loc 1 229 3 is_stmt 1 view .LVU72
 229:../Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 272              		.loc 1 229 34 is_stmt 0 view .LVU73
 273 0072 0223     		movs	r3, #2
 274 0074 0393     		str	r3, [sp, #12]
 230:../Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 275              		.loc 1 230 3 is_stmt 1 view .LVU74
 230:../Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 276              		.loc 1 230 35 is_stmt 0 view .LVU75
 277 0076 0023     		movs	r3, #0
 278 0078 0493     		str	r3, [sp, #16]
 231:../Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 279              		.loc 1 231 3 is_stmt 1 view .LVU76
 231:../Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 280              		.loc 1 231 36 is_stmt 0 view .LVU77
 281 007a 4FF4A053 		mov	r3, #5120
 282 007e 0593     		str	r3, [sp, #20]
 232:../Core/Src/main.c **** 
 283              		.loc 1 232 3 is_stmt 1 view .LVU78
 232:../Core/Src/main.c **** 
 284              		.loc 1 232 36 is_stmt 0 view .LVU79
 285 0080 4FF48053 		mov	r3, #4096
 286 0084 0693     		str	r3, [sp, #24]
ARM GAS  /tmp/cc7fR7um.s 			page 14


 234:../Core/Src/main.c ****   {
 287              		.loc 1 234 3 is_stmt 1 view .LVU80
 234:../Core/Src/main.c ****   {
 288              		.loc 1 234 7 is_stmt 0 view .LVU81
 289 0086 0721     		movs	r1, #7
 290 0088 02A8     		add	r0, sp, #8
 291 008a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 292              	.LVL11:
 234:../Core/Src/main.c ****   {
 293              		.loc 1 234 6 view .LVU82
 294 008e 30B9     		cbnz	r0, .L16
 238:../Core/Src/main.c **** 
 295              		.loc 1 238 1 view .LVU83
 296 0090 15B0     		add	sp, sp, #84
 297              	.LCFI5:
 298              		.cfi_remember_state
 299              		.cfi_def_cfa_offset 4
 300              		@ sp needed
 301 0092 5DF804FB 		ldr	pc, [sp], #4
 302              	.L14:
 303              	.LCFI6:
 304              		.cfi_restore_state
 215:../Core/Src/main.c ****   }
 305              		.loc 1 215 5 is_stmt 1 view .LVU84
 306 0096 FFF7FEFF 		bl	Error_Handler
 307              	.LVL12:
 308              	.L15:
 222:../Core/Src/main.c ****   }
 309              		.loc 1 222 5 view .LVU85
 310 009a FFF7FEFF 		bl	Error_Handler
 311              	.LVL13:
 312              	.L16:
 236:../Core/Src/main.c ****   }
 313              		.loc 1 236 5 view .LVU86
 314 009e FFF7FEFF 		bl	Error_Handler
 315              	.LVL14:
 316              	.L18:
 317 00a2 00BF     		.align	2
 318              	.L17:
 319 00a4 00380240 		.word	1073887232
 320 00a8 00700040 		.word	1073770496
 321              		.cfi_endproc
 322              	.LFE148:
 324              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 325              		.align	2
 326              	.LC2:
 327 0000 0A0D5479 		.ascii	"\012\015Type '?' for list of available commands\012"
 327      70652027 
 327      3F272066 
 327      6F72206C 
 327      69737420 
 328 002a 0D00     		.ascii	"\015\000"
 329              		.align	2
 330              	.LC3:
 331 002c 54797065 		.ascii	"Type '? <cmd>' for more info on a given command\012"
 331      20273F20 
 331      3C636D64 
ARM GAS  /tmp/cc7fR7um.s 			page 15


 331      3E272066 
 331      6F72206D 
 332 005c 0D00     		.ascii	"\015\000"
 333 005e 0000     		.align	2
 334              	.LC4:
 335 0060 4F726967 		.ascii	"Original vector:\000"
 335      696E616C 
 335      20766563 
 335      746F723A 
 335      00
 336 0071 000000   		.align	2
 337              	.LC5:
 338 0074 5472616E 		.ascii	"Transformed vector:\000"
 338      73666F72 
 338      6D656420 
 338      76656374 
 338      6F723A00 
 339              		.section	.text.main,"ax",%progbits
 340              		.align	1
 341              		.global	main
 342              		.syntax unified
 343              		.thumb
 344              		.thumb_func
 345              		.fpu fpv5-d16
 347              	main:
 348              	.LFB147:
  96:../Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 349              		.loc 1 96 1 view -0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 384
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353 0000 10B5     		push	{r4, lr}
 354              	.LCFI7:
 355              		.cfi_def_cfa_offset 8
 356              		.cfi_offset 4, -8
 357              		.cfi_offset 14, -4
 358 0002 E4B0     		sub	sp, sp, #400
 359              	.LCFI8:
 360              		.cfi_def_cfa_offset 408
  98:../Core/Src/main.c ****   char string[24];
 361              		.loc 1 98 3 view .LVU88
  99:../Core/Src/main.c **** 
 362              		.loc 1 99 3 view .LVU89
 106:../Core/Src/main.c **** 
 363              		.loc 1 106 3 view .LVU90
 364 0004 FFF7FEFF 		bl	HAL_Init
 365              	.LVL15:
 113:../Core/Src/main.c **** 
 366              		.loc 1 113 3 view .LVU91
 367 0008 FFF7FEFF 		bl	SystemClock_Config
 368              	.LVL16:
 120:../Core/Src/main.c ****   MX_DMA_Init();
 369              		.loc 1 120 3 view .LVU92
 370 000c FFF7FEFF 		bl	MX_GPIO_Init
 371              	.LVL17:
 121:../Core/Src/main.c ****   MX_USART3_UART_Init();
 372              		.loc 1 121 3 view .LVU93
ARM GAS  /tmp/cc7fR7um.s 			page 16


 373 0010 FFF7FEFF 		bl	MX_DMA_Init
 374              	.LVL18:
 122:../Core/Src/main.c ****   MX_ADC1_Init();
 375              		.loc 1 122 3 view .LVU94
 376 0014 FFF7FEFF 		bl	MX_USART3_UART_Init
 377              	.LVL19:
 123:../Core/Src/main.c ****   MX_DAC_Init();
 378              		.loc 1 123 3 view .LVU95
 379 0018 FFF7FEFF 		bl	MX_ADC1_Init
 380              	.LVL20:
 124:../Core/Src/main.c ****   MX_TIM2_Init();
 381              		.loc 1 124 3 view .LVU96
 382 001c FFF7FEFF 		bl	MX_DAC_Init
 383              	.LVL21:
 125:../Core/Src/main.c ****   MX_TIM6_Init();
 384              		.loc 1 125 3 view .LVU97
 385 0020 FFF7FEFF 		bl	MX_TIM2_Init
 386              	.LVL22:
 126:../Core/Src/main.c ****   MX_SPI1_Init();
 387              		.loc 1 126 3 view .LVU98
 388 0024 FFF7FEFF 		bl	MX_TIM6_Init
 389              	.LVL23:
 127:../Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 390              		.loc 1 127 3 view .LVU99
 391 0028 FFF7FEFF 		bl	MX_SPI1_Init
 392              	.LVL24:
 130:../Core/Src/main.c ****   UART_puts("\n\rType '?' for list of available commands\n\r");
 393              		.loc 1 130 3 view .LVU100
 394 002c 0021     		movs	r1, #0
 395 002e 0120     		movs	r0, #1
 396 0030 FFF7FEFF 		bl	ver_cb
 397              	.LVL25:
 131:../Core/Src/main.c ****   UART_puts("Type '? <cmd>' for more info on a given command\n\r");
 398              		.loc 1 131 3 view .LVU101
 399 0034 3248     		ldr	r0, .L27
 400 0036 FFF7FEFF 		bl	UART_puts
 401              	.LVL26:
 132:../Core/Src/main.c **** 
 402              		.loc 1 132 3 view .LVU102
 403 003a 3248     		ldr	r0, .L27+4
 404 003c FFF7FEFF 		bl	UART_puts
 405              	.LVL27:
 138:../Core/Src/main.c ****   complex y_cwt[N];
 406              		.loc 1 138 3 view .LVU103
 138:../Core/Src/main.c ****   complex y_cwt[N];
 407              		.loc 1 138 11 is_stmt 0 view .LVU104
 408 0040 0DF5A87C 		add	ip, sp, #336
 409 0044 304C     		ldr	r4, .L27+8
 410 0046 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 411 0048 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 412 004c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 413 004e ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 414 0052 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 415 0054 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 416 0058 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 417 005c 8CE80F00 		stm	ip, {r0, r1, r2, r3}
 139:../Core/Src/main.c ****   float period[(int)J];
ARM GAS  /tmp/cc7fR7um.s 			page 17


 418              		.loc 1 139 3 is_stmt 1 view .LVU105
 140:../Core/Src/main.c ****   float scale[(int)J];
 419              		.loc 1 140 3 view .LVU106
 420              	.LVL28:
 141:../Core/Src/main.c ****   float coi[N];
 421              		.loc 1 141 3 view .LVU107
 142:../Core/Src/main.c **** 
 422              		.loc 1 142 3 view .LVU108
 144:../Core/Src/main.c ****   print_vector(y, N);
 423              		.loc 1 144 3 view .LVU109
 424 0060 2A48     		ldr	r0, .L27+12
 425 0062 FFF7FEFF 		bl	UART_puts
 426              	.LVL29:
 145:../Core/Src/main.c **** 
 427              		.loc 1 145 3 view .LVU110
 428 0066 0821     		movs	r1, #8
 429 0068 54A8     		add	r0, sp, #336
 430 006a FFF7FEFF 		bl	print_vector
 431              	.LVL30:
 147:../Core/Src/main.c **** 
 432              		.loc 1 147 3 view .LVU111
 433 006e 3CAB     		add	r3, sp, #240
 434 0070 0393     		str	r3, [sp, #12]
 435 0072 20AB     		add	r3, sp, #128
 436              	.LVL31:
 147:../Core/Src/main.c **** 
 437              		.loc 1 147 3 is_stmt 0 view .LVU112
 438 0074 0293     		str	r3, [sp, #8]
 439 0076 04AB     		add	r3, sp, #16
 440              	.LVL32:
 147:../Core/Src/main.c **** 
 441              		.loc 1 147 3 view .LVU113
 442 0078 0193     		str	r3, [sp, #4]
 443 007a 44AC     		add	r4, sp, #272
 444 007c 0094     		str	r4, [sp]
 445 007e F1EE081A 		vmov.f32	s3, #6.0e+0
 446 0082 0023     		movs	r3, #0
 447              	.LVL33:
 147:../Core/Src/main.c **** 
 448              		.loc 1 147 3 view .LVU114
 449 0084 1C22     		movs	r2, #28
 450 0086 B6EE001A 		vmov.f32	s2, #5.0e-1
 451 008a F5EE000A 		vmov.f32	s1, #2.5e-1
 452 008e B0EE600A 		vmov.f32	s0, s1
 453 0092 0821     		movs	r1, #8
 454 0094 54A8     		add	r0, sp, #336
 455 0096 FFF7FEFF 		bl	cwt
 456              	.LVL34:
 149:../Core/Src/main.c ****   UART_puts("Transformed vector:");
 457              		.loc 1 149 3 is_stmt 1 view .LVU115
 458 009a 4FF4FA70 		mov	r0, #500
 459 009e FFF7FEFF 		bl	HAL_Delay
 460              	.LVL35:
 150:../Core/Src/main.c ****   print_vector(y_cwt, N);
 461              		.loc 1 150 3 view .LVU116
 462 00a2 1B48     		ldr	r0, .L27+16
 463 00a4 FFF7FEFF 		bl	UART_puts
ARM GAS  /tmp/cc7fR7um.s 			page 18


 464              	.LVL36:
 151:../Core/Src/main.c **** 
 465              		.loc 1 151 3 view .LVU117
 466 00a8 0821     		movs	r1, #8
 467 00aa 2046     		mov	r0, r4
 468 00ac FFF7FEFF 		bl	print_vector
 469              	.LVL37:
 153:../Core/Src/main.c ****   Rx_UART_init(); // set USART3 interrupt
 470              		.loc 1 153 3 view .LVU118
 471 00b0 3E20     		movs	r0, #62
 472 00b2 FFF7FEFF 		bl	UART_putchar
 473              	.LVL38:
 154:../Core/Src/main.c **** 
 474              		.loc 1 154 3 view .LVU119
 475 00b6 FFF7FEFF 		bl	Rx_UART_init
 476              	.LVL39:
 477 00ba 05E0     		b	.L22
 478              	.LVL40:
 479              	.L21:
 165:../Core/Src/main.c ****     }
 480              		.loc 1 165 7 view .LVU120
 165:../Core/Src/main.c ****     }
 481              		.loc 1 165 15 is_stmt 0 view .LVU121
 482 00bc 154B     		ldr	r3, .L27+20
 483 00be 0022     		movs	r2, #0
 484 00c0 1A70     		strb	r2, [r3]
 485              	.L20:
 168:../Core/Src/main.c ****     {
 486              		.loc 1 168 5 is_stmt 1 view .LVU122
 168:../Core/Src/main.c ****     {
 487              		.loc 1 168 8 is_stmt 0 view .LVU123
 488 00c2 154B     		ldr	r3, .L27+24
 489 00c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 168:../Core/Src/main.c ****     {
 490              		.loc 1 168 7 view .LVU124
 491 00c6 53B9     		cbnz	r3, .L26
 492              	.L22:
 156:../Core/Src/main.c ****   {
 493              		.loc 1 156 3 is_stmt 1 view .LVU125
 158:../Core/Src/main.c ****     {
 494              		.loc 1 158 5 view .LVU126
 158:../Core/Src/main.c ****     {
 495              		.loc 1 158 8 is_stmt 0 view .LVU127
 496 00c8 124B     		ldr	r3, .L27+20
 497 00ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 158:../Core/Src/main.c ****     {
 498              		.loc 1 158 7 view .LVU128
 499 00cc 002B     		cmp	r3, #0
 500 00ce F8D0     		beq	.L20
 160:../Core/Src/main.c ****       if(c != (char)(-1))
 501              		.loc 1 160 7 is_stmt 1 view .LVU129
 160:../Core/Src/main.c ****       if(c != (char)(-1))
 502              		.loc 1 160 11 is_stmt 0 view .LVU130
 503 00d0 FFF7FEFF 		bl	UART_Receive
 504              	.LVL41:
 161:../Core/Src/main.c ****         // Its not a special character
 505              		.loc 1 161 7 is_stmt 1 view .LVU131
ARM GAS  /tmp/cc7fR7um.s 			page 19


 161:../Core/Src/main.c ****         // Its not a special character
 506              		.loc 1 161 9 is_stmt 0 view .LVU132
 507 00d4 FF28     		cmp	r0, #255
 508 00d6 F1D0     		beq	.L21
 163:../Core/Src/main.c **** 
 509              		.loc 1 163 9 is_stmt 1 view .LVU133
 510 00d8 FFF7FEFF 		bl	UART_putchar
 511              	.LVL42:
 163:../Core/Src/main.c **** 
 512              		.loc 1 163 9 is_stmt 0 view .LVU134
 513 00dc EEE7     		b	.L21
 514              	.L26:
 170:../Core/Src/main.c ****         // No error. Command is valid
 515              		.loc 1 170 7 is_stmt 1 view .LVU135
 170:../Core/Src/main.c ****         // No error. Command is valid
 516              		.loc 1 170 10 is_stmt 0 view .LVU136
 517 00de 0F48     		ldr	r0, .L27+28
 518 00e0 FFF7FEFF 		bl	exec_cmd
 519              	.LVL43:
 170:../Core/Src/main.c ****         // No error. Command is valid
 520              		.loc 1 170 9 view .LVU137
 521 00e4 18B9     		cbnz	r0, .L23
 172:../Core/Src/main.c ****       
 522              		.loc 1 172 9 is_stmt 1 view .LVU138
 523 00e6 0D49     		ldr	r1, .L27+28
 524 00e8 0D48     		ldr	r0, .L27+32
 525 00ea FFF7FEFF 		bl	strcpy
 526              	.LVL44:
 527              	.L23:
 174:../Core/Src/main.c ****       cmd_received = 0;
 528              		.loc 1 174 7 view .LVU139
 529 00ee 3E20     		movs	r0, #62
 530 00f0 FFF7FEFF 		bl	UART_putchar
 531              	.LVL45:
 175:../Core/Src/main.c ****       Rx_UART_init(); // ready to begin reception
 532              		.loc 1 175 7 view .LVU140
 175:../Core/Src/main.c ****       Rx_UART_init(); // ready to begin reception
 533              		.loc 1 175 20 is_stmt 0 view .LVU141
 534 00f4 084B     		ldr	r3, .L27+24
 535 00f6 0022     		movs	r2, #0
 536 00f8 1A70     		strb	r2, [r3]
 176:../Core/Src/main.c ****     }
 537              		.loc 1 176 7 is_stmt 1 view .LVU142
 538 00fa FFF7FEFF 		bl	Rx_UART_init
 539              	.LVL46:
 540 00fe E3E7     		b	.L22
 541              	.L28:
 542              		.align	2
 543              	.L27:
 544 0100 00000000 		.word	.LC2
 545 0104 2C000000 		.word	.LC3
 546 0108 00000000 		.word	.LANCHOR0
 547 010c 60000000 		.word	.LC4
 548 0110 74000000 		.word	.LC5
 549 0114 00000000 		.word	Rx_flag
 550 0118 00000000 		.word	cmd_received
 551 011c 00000000 		.word	Rx_Buffer
ARM GAS  /tmp/cc7fR7um.s 			page 20


 552 0120 00000000 		.word	.LANCHOR1
 553              		.cfi_endproc
 554              	.LFE147:
 556              		.global	last_valid_cmd
 557              		.section	.rodata
 558              		.align	2
 559              		.set	.LANCHOR0,. + 0
 560              	.LC0:
 561 0000 0000803F 		.word	1065353216
 562 0004 00000000 		.word	0
 563 0008 00000040 		.word	1073741824
 564 000c 00000000 		.word	0
 565 0010 00004040 		.word	1077936128
 566 0014 00000000 		.word	0
 567 0018 00008040 		.word	1082130432
 568 001c 00000000 		.word	0
 569 0020 0000A040 		.word	1084227584
 570 0024 00000000 		.word	0
 571 0028 0000C040 		.word	1086324736
 572 002c 00000000 		.word	0
 573 0030 0000E040 		.word	1088421888
 574 0034 00000000 		.word	0
 575 0038 00000041 		.word	1090519040
 576 003c 00000000 		.word	0
 577              		.section	.bss.last_valid_cmd,"aw",%nobits
 578              		.align	2
 579              		.set	.LANCHOR1,. + 0
 582              	last_valid_cmd:
 583 0000 00000000 		.space	16
 583      00000000 
 583      00000000 
 583      00000000 
 584              		.text
 585              	.Letext0:
 586              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 587              		.file 4 "../Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 588              		.file 5 "../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 589              		.file 6 "../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 590              		.file 7 "../Core/Inc/main.h"
 591              		.file 8 "../Core/Inc/usart.h"
 592              		.file 9 "../Core/Inc/complex.h"
 593              		.file 10 "../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 594              		.file 11 "../Core/Inc/wavelet.h"
 595              		.file 12 "../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pwr_ex.h"
 596              		.file 13 "../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 597              		.file 14 "../Core/Inc/gpio.h"
 598              		.file 15 "../Core/Inc/dma.h"
 599              		.file 16 "../Core/Inc/adc.h"
 600              		.file 17 "../Core/Inc/dac.h"
 601              		.file 18 "../Core/Inc/tim.h"
 602              		.file 19 "../Core/Inc/spi.h"
 603              		.file 20 "../Core/Inc/interface.h"
 604              		.file 21 "../Core/Inc/commands.h"
 605              		.file 22 "/usr/include/newlib/string.h"
 606              		.file 23 "/usr/include/newlib/stdio.h"
 607              		.file 24 "<built-in>"
 608              		.file 25 "../Core/Inc/cwt.h"
ARM GAS  /tmp/cc7fR7um.s 			page 21


ARM GAS  /tmp/cc7fR7um.s 			page 22


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc7fR7um.s:17     .rodata.print_vector.str1.4:0000000000000000 $d
     /tmp/cc7fR7um.s:21     .text.print_vector:0000000000000000 $t
     /tmp/cc7fR7um.s:29     .text.print_vector:0000000000000000 print_vector
     /tmp/cc7fR7um.s:108    .text.print_vector:0000000000000048 $d
     /tmp/cc7fR7um.s:113    .text.Error_Handler:0000000000000000 $t
     /tmp/cc7fR7um.s:120    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cc7fR7um.s:152    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc7fR7um.s:159    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc7fR7um.s:319    .text.SystemClock_Config:00000000000000a4 $d
     /tmp/cc7fR7um.s:325    .rodata.main.str1.4:0000000000000000 $d
     /tmp/cc7fR7um.s:340    .text.main:0000000000000000 $t
     /tmp/cc7fR7um.s:347    .text.main:0000000000000000 main
     /tmp/cc7fR7um.s:544    .text.main:0000000000000100 $d
     /tmp/cc7fR7um.s:582    .bss.last_valid_cmd:0000000000000000 last_valid_cmd
     /tmp/cc7fR7um.s:558    .rodata:0000000000000000 $d
     /tmp/cc7fR7um.s:578    .bss.last_valid_cmd:0000000000000000 $d

UNDEFINED SYMBOLS
sprintf
UART_puts
putchar
memset
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_USART3_UART_Init
MX_ADC1_Init
MX_DAC_Init
MX_TIM2_Init
MX_TIM6_Init
MX_SPI1_Init
ver_cb
cwt
HAL_Delay
UART_putchar
Rx_UART_init
UART_Receive
exec_cmd
strcpy
Rx_flag
cmd_received
Rx_Buffer
