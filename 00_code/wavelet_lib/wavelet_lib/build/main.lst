ARM GAS  /tmp/cccl9yjp.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"main.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.rodata.print_vector.str1.4,"aMS",%progbits,1
  17              		.align	2
  18              	.LC1:
  19 0000 2025332E 		.ascii	" %3.2f,%3.2fj \000"
  19      32662C25 
  19      332E3266 
  19      6A2000
  20 000f 00       		.align	2
  21              	.LC2:
  22 0010 0A0D00   		.ascii	"\012\015\000"
  23              		.section	.text.print_vector,"ax",%progbits
  24              		.align	1
  25              		.global	print_vector
  26              		.arch armv7e-m
  27              		.syntax unified
  28              		.thumb
  29              		.thumb_func
  30              		.fpu fpv5-d16
  32              	print_vector:
  33              	.LVL0:
  34              	.LFB146:
  35              		.file 1 "../Core/Src/main.c"
   1:../Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:../Core/Src/main.c **** /**
   3:../Core/Src/main.c ****   ******************************************************************************
   4:../Core/Src/main.c ****   * @file           : main.c
   5:../Core/Src/main.c ****   * @brief          : Main program body
   6:../Core/Src/main.c ****   ******************************************************************************
   7:../Core/Src/main.c ****   * @attention
   8:../Core/Src/main.c ****   *
   9:../Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:../Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:../Core/Src/main.c ****   *
  12:../Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:../Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:../Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:../Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:../Core/Src/main.c ****   *
  17:../Core/Src/main.c ****   ******************************************************************************
  18:../Core/Src/main.c ****   */
  19:../Core/Src/main.c **** /* USER CODE END Header */
  20:../Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
ARM GAS  /tmp/cccl9yjp.s 			page 2


  21:../Core/Src/main.c **** #include "main.h"
  22:../Core/Src/main.c **** #include "adc.h"
  23:../Core/Src/main.c **** #include "dac.h"
  24:../Core/Src/main.c **** #include "dma.h"
  25:../Core/Src/main.c **** #include "spi.h"
  26:../Core/Src/main.c **** #include "tim.h"
  27:../Core/Src/main.c **** #include "usart.h"
  28:../Core/Src/main.c **** #include "gpio.h"
  29:../Core/Src/main.c **** 
  30:../Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  31:../Core/Src/main.c **** /* USER CODE BEGIN Includes */
  32:../Core/Src/main.c **** #include <string.h>
  33:../Core/Src/main.c **** #include "commands.h"
  34:../Core/Src/main.c **** #include "interface.h" // print startup message
  35:../Core/Src/main.c **** 
  36:../Core/Src/main.c **** #include "complex.h"
  37:../Core/Src/main.c **** #include "cwt.h"
  38:../Core/Src/main.c **** #include "wavelet.h"
  39:../Core/Src/main.c **** 
  40:../Core/Src/main.c **** /* USER CODE END Includes */
  41:../Core/Src/main.c **** 
  42:../Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  43:../Core/Src/main.c **** /* USER CODE BEGIN PTD */
  44:../Core/Src/main.c **** 
  45:../Core/Src/main.c **** /* USER CODE END PTD */
  46:../Core/Src/main.c **** 
  47:../Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  48:../Core/Src/main.c **** /* USER CODE BEGIN PD */
  49:../Core/Src/main.c **** #define N     8
  50:../Core/Src/main.c **** #define DT    0.25
  51:../Core/Src/main.c **** #define DJ    0.25
  52:../Core/Src/main.c **** #define S0    (2*DT)
  53:../Core/Src/main.c **** #define J     5
  54:../Core/Src/main.c **** 
  55:../Core/Src/main.c **** /* USER CODE END PD */
  56:../Core/Src/main.c **** 
  57:../Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  58:../Core/Src/main.c **** /* USER CODE BEGIN PM */
  59:../Core/Src/main.c **** 
  60:../Core/Src/main.c **** /* USER CODE END PM */
  61:../Core/Src/main.c **** 
  62:../Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  63:../Core/Src/main.c **** 
  64:../Core/Src/main.c **** /* USER CODE BEGIN PV */
  65:../Core/Src/main.c **** char last_valid_cmd[RX_BUFF_LEN] = {0};
  66:../Core/Src/main.c **** 
  67:../Core/Src/main.c **** /* USER CODE END PV */
  68:../Core/Src/main.c **** 
  69:../Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  70:../Core/Src/main.c **** void SystemClock_Config(void);
  71:../Core/Src/main.c **** /* USER CODE BEGIN PFP */
  72:../Core/Src/main.c **** 
  73:../Core/Src/main.c **** /* USER CODE END PFP */
  74:../Core/Src/main.c **** 
  75:../Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  76:../Core/Src/main.c **** /* USER CODE BEGIN 0 */
  77:../Core/Src/main.c **** 
ARM GAS  /tmp/cccl9yjp.s 			page 3


  78:../Core/Src/main.c **** void print_vector(complex *x, int n, int j)
  79:../Core/Src/main.c **** {
  36              		.loc 1 79 1 view -0
  37              		.cfi_startproc
  38              		@ args = 0, pretend = 0, frame = 24
  39              		@ frame_needed = 0, uses_anonymous_args = 0
  40              		.loc 1 79 1 is_stmt 0 view .LVU1
  41 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  42              	.LCFI0:
  43              		.cfi_def_cfa_offset 24
  44              		.cfi_offset 4, -24
  45              		.cfi_offset 5, -20
  46              		.cfi_offset 6, -16
  47              		.cfi_offset 7, -12
  48              		.cfi_offset 8, -8
  49              		.cfi_offset 14, -4
  50 0004 88B0     		sub	sp, sp, #32
  51              	.LCFI1:
  52              		.cfi_def_cfa_offset 56
  53 0006 0746     		mov	r7, r0
  54 0008 0D46     		mov	r5, r1
  55 000a 9046     		mov	r8, r2
  80:../Core/Src/main.c ****   for(int i = 0; i < j; i++)
  56              		.loc 1 80 3 is_stmt 1 view .LVU2
  57              	.LBB4:
  58              		.loc 1 80 7 view .LVU3
  59              	.LVL1:
  60              		.loc 1 80 11 is_stmt 0 view .LVU4
  61 000c 0026     		movs	r6, #0
  62              		.loc 1 80 3 view .LVU5
  63 000e 17E0     		b	.L2
  64              	.LVL2:
  65              	.L3:
  66              	.LBB5:
  67              	.LBB6:
  81:../Core/Src/main.c ****   {
  82:../Core/Src/main.c ****     for(int k = 0; k < n; k++)
  83:../Core/Src/main.c ****     {
  84:../Core/Src/main.c ****       char str[24];
  68              		.loc 1 84 7 is_stmt 1 discriminator 3 view .LVU6
  85:../Core/Src/main.c ****       sprintf(str, " %3.2f,%3.2fj ", x[(i*n) + k].Re, x[(i*n) + k].Im);
  69              		.loc 1 85 7 discriminator 3 view .LVU7
  70              		.loc 1 85 46 is_stmt 0 discriminator 3 view .LVU8
  71 0010 05FB0643 		mla	r3, r5, r6, r4
  72              		.loc 1 85 39 discriminator 3 view .LVU9
  73 0014 07EB0313 		add	r3, r7, r3, lsl #4
  74              		.loc 1 85 7 discriminator 3 view .LVU10
  75 0018 D3E90201 		ldrd	r0, [r3, #8]
  76 001c CDE90001 		strd	r0, [sp]
  77 0020 D3E90023 		ldrd	r2, [r3]
  78 0024 0B49     		ldr	r1, .L8
  79 0026 02A8     		add	r0, sp, #8
  80 0028 FFF7FEFF 		bl	sprintf
  81              	.LVL3:
  86:../Core/Src/main.c ****       UART_puts(str);      
  82              		.loc 1 86 7 is_stmt 1 discriminator 3 view .LVU11
  83 002c 02A8     		add	r0, sp, #8
ARM GAS  /tmp/cccl9yjp.s 			page 4


  84 002e FFF7FEFF 		bl	UART_puts
  85              	.LVL4:
  86              	.LBE6:
  82:../Core/Src/main.c ****     {
  87              		.loc 1 82 27 discriminator 3 view .LVU12
  82:../Core/Src/main.c ****     {
  88              		.loc 1 82 28 is_stmt 0 discriminator 3 view .LVU13
  89 0032 0134     		adds	r4, r4, #1
  90              	.LVL5:
  91              	.L4:
  82:../Core/Src/main.c ****     {
  92              		.loc 1 82 20 is_stmt 1 discriminator 1 view .LVU14
  82:../Core/Src/main.c ****     {
  93              		.loc 1 82 5 is_stmt 0 discriminator 1 view .LVU15
  94 0034 AC42     		cmp	r4, r5
  95 0036 EBDB     		blt	.L3
  96              	.LBE5:
  87:../Core/Src/main.c ****     }
  88:../Core/Src/main.c ****     UART_puts("\n\r");
  97              		.loc 1 88 5 is_stmt 1 discriminator 2 view .LVU16
  98 0038 0748     		ldr	r0, .L8+4
  99 003a FFF7FEFF 		bl	UART_puts
 100              	.LVL6:
  80:../Core/Src/main.c ****   {
 101              		.loc 1 80 25 discriminator 2 view .LVU17
  80:../Core/Src/main.c ****   {
 102              		.loc 1 80 26 is_stmt 0 discriminator 2 view .LVU18
 103 003e 0136     		adds	r6, r6, #1
 104              	.LVL7:
 105              	.L2:
  80:../Core/Src/main.c ****   {
 106              		.loc 1 80 18 is_stmt 1 discriminator 1 view .LVU19
  80:../Core/Src/main.c ****   {
 107              		.loc 1 80 3 is_stmt 0 discriminator 1 view .LVU20
 108 0040 4645     		cmp	r6, r8
 109 0042 01DA     		bge	.L7
 110              	.LBB7:
  82:../Core/Src/main.c ****     {
 111              		.loc 1 82 13 view .LVU21
 112 0044 0024     		movs	r4, #0
 113 0046 F5E7     		b	.L4
 114              	.L7:
 115              	.LBE7:
 116              	.LBE4:
  89:../Core/Src/main.c ****   } 
  90:../Core/Src/main.c ****   UART_puts("\n\r");
 117              		.loc 1 90 3 is_stmt 1 view .LVU22
 118 0048 0348     		ldr	r0, .L8+4
 119 004a FFF7FEFF 		bl	UART_puts
 120              	.LVL8:
  91:../Core/Src/main.c **** }
 121              		.loc 1 91 1 is_stmt 0 view .LVU23
 122 004e 08B0     		add	sp, sp, #32
 123              	.LCFI2:
 124              		.cfi_def_cfa_offset 24
 125              		@ sp needed
 126 0050 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
ARM GAS  /tmp/cccl9yjp.s 			page 5


 127              	.LVL9:
 128              	.L9:
 129              		.loc 1 91 1 view .LVU24
 130              		.align	2
 131              	.L8:
 132 0054 00000000 		.word	.LC1
 133 0058 10000000 		.word	.LC2
 134              		.cfi_endproc
 135              	.LFE146:
 137              		.section	.text.Error_Handler,"ax",%progbits
 138              		.align	1
 139              		.global	Error_Handler
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 143              		.fpu fpv5-d16
 145              	Error_Handler:
 146              	.LFB149:
  92:../Core/Src/main.c **** 
  93:../Core/Src/main.c **** /* USER CODE END 0 */
  94:../Core/Src/main.c **** 
  95:../Core/Src/main.c **** /**
  96:../Core/Src/main.c ****   * @brief  The application entry point.
  97:../Core/Src/main.c ****   * @retval int
  98:../Core/Src/main.c ****   */
  99:../Core/Src/main.c **** int main(void)
 100:../Core/Src/main.c **** {
 101:../Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 102:../Core/Src/main.c ****   char c;
 103:../Core/Src/main.c ****   
 104:../Core/Src/main.c ****   /* USER CODE END 1 */
 105:../Core/Src/main.c **** 
 106:../Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 107:../Core/Src/main.c **** 
 108:../Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 109:../Core/Src/main.c ****   HAL_Init();
 110:../Core/Src/main.c **** 
 111:../Core/Src/main.c ****   /* USER CODE BEGIN Init */
 112:../Core/Src/main.c **** 
 113:../Core/Src/main.c ****   /* USER CODE END Init */
 114:../Core/Src/main.c **** 
 115:../Core/Src/main.c ****   /* Configure the system clock */
 116:../Core/Src/main.c ****   SystemClock_Config();
 117:../Core/Src/main.c **** 
 118:../Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 119:../Core/Src/main.c **** 
 120:../Core/Src/main.c ****   /* USER CODE END SysInit */
 121:../Core/Src/main.c **** 
 122:../Core/Src/main.c ****   /* Initialize all configured peripherals */
 123:../Core/Src/main.c ****   MX_GPIO_Init();
 124:../Core/Src/main.c ****   MX_DMA_Init();
 125:../Core/Src/main.c ****   MX_USART3_UART_Init();
 126:../Core/Src/main.c ****   MX_ADC1_Init();
 127:../Core/Src/main.c ****   MX_DAC_Init();
 128:../Core/Src/main.c ****   MX_TIM2_Init();
 129:../Core/Src/main.c ****   MX_TIM6_Init();
 130:../Core/Src/main.c ****   MX_SPI1_Init();
ARM GAS  /tmp/cccl9yjp.s 			page 6


 131:../Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 132:../Core/Src/main.c ****   // print startup message
 133:../Core/Src/main.c ****   ver_cb(1, NULL);
 134:../Core/Src/main.c ****   UART_puts("\n\rType '?' for list of available commands\n\r");
 135:../Core/Src/main.c ****   UART_puts("Type '? <cmd>' for more info on a given command\n\r");
 136:../Core/Src/main.c **** 
 137:../Core/Src/main.c ****   /* USER CODE END 2 */
 138:../Core/Src/main.c **** 
 139:../Core/Src/main.c ****   /* Infinite loop */
 140:../Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 141:../Core/Src/main.c ****   complex y[N] = {{1,0},{2,0},{3,0},{4,0},{5,0},{6,0},{7,0},{8,0}};
 142:../Core/Src/main.c ****   complex y_cwt[N * J] = {{0,0}};
 143:../Core/Src/main.c ****   float period[J] = {0};
 144:../Core/Src/main.c ****   float scale[J];
 145:../Core/Src/main.c ****   float coi[N] = {0};
 146:../Core/Src/main.c **** 
 147:../Core/Src/main.c ****   UART_puts("Original vector:");
 148:../Core/Src/main.c ****   print_vector(y, N, 1);
 149:../Core/Src/main.c **** 
 150:../Core/Src/main.c ****   cwt(y, N, DT, DJ, S0, J, MORLET, 6.0, y_cwt, period, scale, coi);
 151:../Core/Src/main.c **** 
 152:../Core/Src/main.c ****   UART_puts("Transformed vector: ");
 153:../Core/Src/main.c ****   print_vector(y_cwt, N, J);
 154:../Core/Src/main.c **** 
 155:../Core/Src/main.c ****   UART_puts("\n\r>"); // print prompt
 156:../Core/Src/main.c ****   Rx_UART_init(); // set USART3 interrupt
 157:../Core/Src/main.c **** 
 158:../Core/Src/main.c ****   while (1)
 159:../Core/Src/main.c ****   {
 160:../Core/Src/main.c ****     if(Rx_flag)
 161:../Core/Src/main.c ****     {
 162:../Core/Src/main.c ****       c = UART_Receive(); // Returns received char
 163:../Core/Src/main.c ****       if(c != (char)(-1))
 164:../Core/Src/main.c ****         // Its not a special character
 165:../Core/Src/main.c ****         UART_putchar(c); // Received char is echoed
 166:../Core/Src/main.c **** 
 167:../Core/Src/main.c ****       Rx_flag = 0;
 168:../Core/Src/main.c ****     }
 169:../Core/Src/main.c ****     
 170:../Core/Src/main.c ****     if(cmd_received)
 171:../Core/Src/main.c ****     {
 172:../Core/Src/main.c ****       if(exec_cmd(Rx_Buffer) == 0)// Is there an error?
 173:../Core/Src/main.c ****         // No error. Command is valid
 174:../Core/Src/main.c ****         strcpy(last_valid_cmd, Rx_Buffer); // Save this as last valid command
 175:../Core/Src/main.c ****       
 176:../Core/Src/main.c ****       UART_putchar('>');// print prompt
 177:../Core/Src/main.c ****       cmd_received = 0;
 178:../Core/Src/main.c ****       Rx_UART_init(); // ready to begin reception
 179:../Core/Src/main.c ****     }
 180:../Core/Src/main.c **** 
 181:../Core/Src/main.c ****     /* USER CODE END WHILE */
 182:../Core/Src/main.c **** 
 183:../Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 184:../Core/Src/main.c ****   }
 185:../Core/Src/main.c ****   /* USER CODE END 3 */
 186:../Core/Src/main.c **** }
 187:../Core/Src/main.c **** 
ARM GAS  /tmp/cccl9yjp.s 			page 7


 188:../Core/Src/main.c **** /**
 189:../Core/Src/main.c ****   * @brief System Clock Configuration
 190:../Core/Src/main.c ****   * @retval None
 191:../Core/Src/main.c ****   */
 192:../Core/Src/main.c **** void SystemClock_Config(void)
 193:../Core/Src/main.c **** {
 194:../Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 195:../Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 196:../Core/Src/main.c **** 
 197:../Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 198:../Core/Src/main.c ****   */
 199:../Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 200:../Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 201:../Core/Src/main.c **** 
 202:../Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 203:../Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 204:../Core/Src/main.c ****   */
 205:../Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 206:../Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 207:../Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 208:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 209:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 210:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 211:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 216;
 212:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 213:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 214:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 215:../Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 216:../Core/Src/main.c ****   {
 217:../Core/Src/main.c ****     Error_Handler();
 218:../Core/Src/main.c ****   }
 219:../Core/Src/main.c **** 
 220:../Core/Src/main.c ****   /** Activate the Over-Drive mode
 221:../Core/Src/main.c ****   */
 222:../Core/Src/main.c ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 223:../Core/Src/main.c ****   {
 224:../Core/Src/main.c ****     Error_Handler();
 225:../Core/Src/main.c ****   }
 226:../Core/Src/main.c **** 
 227:../Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 228:../Core/Src/main.c ****   */
 229:../Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 230:../Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 231:../Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 232:../Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 233:../Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 234:../Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 235:../Core/Src/main.c **** 
 236:../Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 237:../Core/Src/main.c ****   {
 238:../Core/Src/main.c ****     Error_Handler();
 239:../Core/Src/main.c ****   }
 240:../Core/Src/main.c **** }
 241:../Core/Src/main.c **** 
 242:../Core/Src/main.c **** /* USER CODE BEGIN 4 */
 243:../Core/Src/main.c **** 
 244:../Core/Src/main.c **** /* USER CODE END 4 */
ARM GAS  /tmp/cccl9yjp.s 			page 8


 245:../Core/Src/main.c **** 
 246:../Core/Src/main.c **** /**
 247:../Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 248:../Core/Src/main.c ****   * @retval None
 249:../Core/Src/main.c ****   */
 250:../Core/Src/main.c **** void Error_Handler(void)
 251:../Core/Src/main.c **** {
 147              		.loc 1 251 1 is_stmt 1 view -0
 148              		.cfi_startproc
 149              		@ Volatile: function does not return.
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              		@ link register save eliminated.
 252:../Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 253:../Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 254:../Core/Src/main.c ****   __disable_irq();
 153              		.loc 1 254 3 view .LVU26
 154              	.LBB8:
 155              	.LBI8:
 156              		.file 2 "../Drivers/CMSIS/Include/cmsis_gcc.h"
   1:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:../Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:../Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/cccl9yjp.s 			page 9


  38:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:../Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
ARM GAS  /tmp/cccl9yjp.s 			page 10


  95:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:../Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:../Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:../Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 157              		.loc 2 140 27 view .LVU27
 158              	.LBB9:
 141:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 159              		.loc 2 142 3 view .LVU28
 160              		.syntax unified
 161              	@ 142 "../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 162 0000 72B6     		cpsid i
 163              	@ 0 "" 2
 164              		.thumb
 165              		.syntax unified
ARM GAS  /tmp/cccl9yjp.s 			page 11


 166              	.L11:
 167              	.LBE9:
 168              	.LBE8:
 255:../Core/Src/main.c ****   while (1)
 169              		.loc 1 255 3 discriminator 1 view .LVU29
 256:../Core/Src/main.c ****   {
 257:../Core/Src/main.c **** 
 258:../Core/Src/main.c ****   }
 170              		.loc 1 258 3 discriminator 1 view .LVU30
 255:../Core/Src/main.c ****   while (1)
 171              		.loc 1 255 9 discriminator 1 view .LVU31
 172 0002 FEE7     		b	.L11
 173              		.cfi_endproc
 174              	.LFE149:
 176              		.section	.text.SystemClock_Config,"ax",%progbits
 177              		.align	1
 178              		.global	SystemClock_Config
 179              		.syntax unified
 180              		.thumb
 181              		.thumb_func
 182              		.fpu fpv5-d16
 184              	SystemClock_Config:
 185              	.LFB148:
 193:../Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 186              		.loc 1 193 1 view -0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 80
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190 0000 00B5     		push	{lr}
 191              	.LCFI3:
 192              		.cfi_def_cfa_offset 4
 193              		.cfi_offset 14, -4
 194 0002 95B0     		sub	sp, sp, #84
 195              	.LCFI4:
 196              		.cfi_def_cfa_offset 88
 194:../Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 197              		.loc 1 194 3 view .LVU33
 194:../Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 198              		.loc 1 194 22 is_stmt 0 view .LVU34
 199 0004 3422     		movs	r2, #52
 200 0006 0021     		movs	r1, #0
 201 0008 07A8     		add	r0, sp, #28
 202 000a FFF7FEFF 		bl	memset
 203              	.LVL10:
 195:../Core/Src/main.c **** 
 204              		.loc 1 195 3 is_stmt 1 view .LVU35
 195:../Core/Src/main.c **** 
 205              		.loc 1 195 22 is_stmt 0 view .LVU36
 206 000e 0023     		movs	r3, #0
 207 0010 0293     		str	r3, [sp, #8]
 208 0012 0393     		str	r3, [sp, #12]
 209 0014 0493     		str	r3, [sp, #16]
 210 0016 0593     		str	r3, [sp, #20]
 211 0018 0693     		str	r3, [sp, #24]
 199:../Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 212              		.loc 1 199 3 is_stmt 1 view .LVU37
 213              	.LBB10:
ARM GAS  /tmp/cccl9yjp.s 			page 12


 199:../Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 214              		.loc 1 199 3 view .LVU38
 199:../Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 215              		.loc 1 199 3 view .LVU39
 216 001a 224A     		ldr	r2, .L20
 217 001c 116C     		ldr	r1, [r2, #64]
 218 001e 41F08051 		orr	r1, r1, #268435456
 219 0022 1164     		str	r1, [r2, #64]
 199:../Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 220              		.loc 1 199 3 view .LVU40
 221 0024 126C     		ldr	r2, [r2, #64]
 222 0026 02F08052 		and	r2, r2, #268435456
 223 002a 0092     		str	r2, [sp]
 199:../Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 224              		.loc 1 199 3 view .LVU41
 225 002c 009A     		ldr	r2, [sp]
 226              	.LBE10:
 199:../Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 227              		.loc 1 199 3 view .LVU42
 200:../Core/Src/main.c **** 
 228              		.loc 1 200 3 view .LVU43
 229              	.LBB11:
 200:../Core/Src/main.c **** 
 230              		.loc 1 200 3 view .LVU44
 200:../Core/Src/main.c **** 
 231              		.loc 1 200 3 view .LVU45
 232 002e 1E4A     		ldr	r2, .L20+4
 233 0030 1168     		ldr	r1, [r2]
 234 0032 41F44041 		orr	r1, r1, #49152
 235 0036 1160     		str	r1, [r2]
 200:../Core/Src/main.c **** 
 236              		.loc 1 200 3 view .LVU46
 237 0038 1268     		ldr	r2, [r2]
 238 003a 02F44042 		and	r2, r2, #49152
 239 003e 0192     		str	r2, [sp, #4]
 200:../Core/Src/main.c **** 
 240              		.loc 1 200 3 view .LVU47
 241 0040 019A     		ldr	r2, [sp, #4]
 242              	.LBE11:
 200:../Core/Src/main.c **** 
 243              		.loc 1 200 3 view .LVU48
 205:../Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 244              		.loc 1 205 3 view .LVU49
 205:../Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 245              		.loc 1 205 36 is_stmt 0 view .LVU50
 246 0042 0222     		movs	r2, #2
 247 0044 0792     		str	r2, [sp, #28]
 206:../Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 248              		.loc 1 206 3 is_stmt 1 view .LVU51
 206:../Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 249              		.loc 1 206 30 is_stmt 0 view .LVU52
 250 0046 0121     		movs	r1, #1
 251 0048 0A91     		str	r1, [sp, #40]
 207:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 252              		.loc 1 207 3 is_stmt 1 view .LVU53
 207:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 253              		.loc 1 207 41 is_stmt 0 view .LVU54
ARM GAS  /tmp/cccl9yjp.s 			page 13


 254 004a 1021     		movs	r1, #16
 255 004c 0B91     		str	r1, [sp, #44]
 208:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 256              		.loc 1 208 3 is_stmt 1 view .LVU55
 208:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 257              		.loc 1 208 34 is_stmt 0 view .LVU56
 258 004e 0D92     		str	r2, [sp, #52]
 209:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 259              		.loc 1 209 3 is_stmt 1 view .LVU57
 209:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 260              		.loc 1 209 35 is_stmt 0 view .LVU58
 261 0050 0E93     		str	r3, [sp, #56]
 210:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 216;
 262              		.loc 1 210 3 is_stmt 1 view .LVU59
 210:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 216;
 263              		.loc 1 210 30 is_stmt 0 view .LVU60
 264 0052 0823     		movs	r3, #8
 265 0054 0F93     		str	r3, [sp, #60]
 211:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 266              		.loc 1 211 3 is_stmt 1 view .LVU61
 211:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 267              		.loc 1 211 30 is_stmt 0 view .LVU62
 268 0056 D823     		movs	r3, #216
 269 0058 1093     		str	r3, [sp, #64]
 212:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 270              		.loc 1 212 3 is_stmt 1 view .LVU63
 212:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 271              		.loc 1 212 30 is_stmt 0 view .LVU64
 272 005a 1192     		str	r2, [sp, #68]
 213:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 273              		.loc 1 213 3 is_stmt 1 view .LVU65
 213:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 274              		.loc 1 213 30 is_stmt 0 view .LVU66
 275 005c 1292     		str	r2, [sp, #72]
 214:../Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 276              		.loc 1 214 3 is_stmt 1 view .LVU67
 214:../Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 277              		.loc 1 214 30 is_stmt 0 view .LVU68
 278 005e 1392     		str	r2, [sp, #76]
 215:../Core/Src/main.c ****   {
 279              		.loc 1 215 3 is_stmt 1 view .LVU69
 215:../Core/Src/main.c ****   {
 280              		.loc 1 215 7 is_stmt 0 view .LVU70
 281 0060 07A8     		add	r0, sp, #28
 282 0062 FFF7FEFF 		bl	HAL_RCC_OscConfig
 283              	.LVL11:
 215:../Core/Src/main.c ****   {
 284              		.loc 1 215 6 view .LVU71
 285 0066 B0B9     		cbnz	r0, .L17
 222:../Core/Src/main.c ****   {
 286              		.loc 1 222 3 is_stmt 1 view .LVU72
 222:../Core/Src/main.c ****   {
 287              		.loc 1 222 7 is_stmt 0 view .LVU73
 288 0068 FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 289              	.LVL12:
 222:../Core/Src/main.c ****   {
 290              		.loc 1 222 6 view .LVU74
ARM GAS  /tmp/cccl9yjp.s 			page 14


 291 006c A8B9     		cbnz	r0, .L18
 229:../Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 292              		.loc 1 229 3 is_stmt 1 view .LVU75
 229:../Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 293              		.loc 1 229 31 is_stmt 0 view .LVU76
 294 006e 0F23     		movs	r3, #15
 295 0070 0293     		str	r3, [sp, #8]
 231:../Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 296              		.loc 1 231 3 is_stmt 1 view .LVU77
 231:../Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 297              		.loc 1 231 34 is_stmt 0 view .LVU78
 298 0072 0223     		movs	r3, #2
 299 0074 0393     		str	r3, [sp, #12]
 232:../Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 300              		.loc 1 232 3 is_stmt 1 view .LVU79
 232:../Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 301              		.loc 1 232 35 is_stmt 0 view .LVU80
 302 0076 0023     		movs	r3, #0
 303 0078 0493     		str	r3, [sp, #16]
 233:../Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 304              		.loc 1 233 3 is_stmt 1 view .LVU81
 233:../Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 305              		.loc 1 233 36 is_stmt 0 view .LVU82
 306 007a 4FF4A053 		mov	r3, #5120
 307 007e 0593     		str	r3, [sp, #20]
 234:../Core/Src/main.c **** 
 308              		.loc 1 234 3 is_stmt 1 view .LVU83
 234:../Core/Src/main.c **** 
 309              		.loc 1 234 36 is_stmt 0 view .LVU84
 310 0080 4FF48053 		mov	r3, #4096
 311 0084 0693     		str	r3, [sp, #24]
 236:../Core/Src/main.c ****   {
 312              		.loc 1 236 3 is_stmt 1 view .LVU85
 236:../Core/Src/main.c ****   {
 313              		.loc 1 236 7 is_stmt 0 view .LVU86
 314 0086 0721     		movs	r1, #7
 315 0088 02A8     		add	r0, sp, #8
 316 008a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 317              	.LVL13:
 236:../Core/Src/main.c ****   {
 318              		.loc 1 236 6 view .LVU87
 319 008e 30B9     		cbnz	r0, .L19
 240:../Core/Src/main.c **** 
 320              		.loc 1 240 1 view .LVU88
 321 0090 15B0     		add	sp, sp, #84
 322              	.LCFI5:
 323              		.cfi_remember_state
 324              		.cfi_def_cfa_offset 4
 325              		@ sp needed
 326 0092 5DF804FB 		ldr	pc, [sp], #4
 327              	.L17:
 328              	.LCFI6:
 329              		.cfi_restore_state
 217:../Core/Src/main.c ****   }
 330              		.loc 1 217 5 is_stmt 1 view .LVU89
 331 0096 FFF7FEFF 		bl	Error_Handler
 332              	.LVL14:
ARM GAS  /tmp/cccl9yjp.s 			page 15


 333              	.L18:
 224:../Core/Src/main.c ****   }
 334              		.loc 1 224 5 view .LVU90
 335 009a FFF7FEFF 		bl	Error_Handler
 336              	.LVL15:
 337              	.L19:
 238:../Core/Src/main.c ****   }
 338              		.loc 1 238 5 view .LVU91
 339 009e FFF7FEFF 		bl	Error_Handler
 340              	.LVL16:
 341              	.L21:
 342 00a2 00BF     		.align	2
 343              	.L20:
 344 00a4 00380240 		.word	1073887232
 345 00a8 00700040 		.word	1073770496
 346              		.cfi_endproc
 347              	.LFE148:
 349              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 350              		.align	2
 351              	.LC3:
 352 0000 0A0D5479 		.ascii	"\012\015Type '?' for list of available commands\012"
 352      70652027 
 352      3F272066 
 352      6F72206C 
 352      69737420 
 353 002a 0D00     		.ascii	"\015\000"
 354              		.align	2
 355              	.LC4:
 356 002c 54797065 		.ascii	"Type '? <cmd>' for more info on a given command\012"
 356      20273F20 
 356      3C636D64 
 356      3E272066 
 356      6F72206D 
 357 005c 0D00     		.ascii	"\015\000"
 358 005e 0000     		.align	2
 359              	.LC5:
 360 0060 4F726967 		.ascii	"Original vector:\000"
 360      696E616C 
 360      20766563 
 360      746F723A 
 360      00
 361 0071 000000   		.align	2
 362              	.LC6:
 363 0074 5472616E 		.ascii	"Transformed vector: \000"
 363      73666F72 
 363      6D656420 
 363      76656374 
 363      6F723A20 
 364 0089 000000   		.align	2
 365              	.LC7:
 366 008c 0A0D3E00 		.ascii	"\012\015>\000"
 367              		.section	.text.main,"ax",%progbits
 368              		.align	1
 369              		.global	main
 370              		.syntax unified
 371              		.thumb
 372              		.thumb_func
ARM GAS  /tmp/cccl9yjp.s 			page 16


 373              		.fpu fpv5-d16
 375              	main:
 376              	.LFB147:
 100:../Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 377              		.loc 1 100 1 view -0
 378              		.cfi_startproc
 379              		@ args = 0, pretend = 0, frame = 840
 380              		@ frame_needed = 0, uses_anonymous_args = 0
 381 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 382              	.LCFI7:
 383              		.cfi_def_cfa_offset 20
 384              		.cfi_offset 4, -20
 385              		.cfi_offset 5, -16
 386              		.cfi_offset 6, -12
 387              		.cfi_offset 7, -8
 388              		.cfi_offset 14, -4
 389 0002 ADF5577D 		sub	sp, sp, #860
 390              	.LCFI8:
 391              		.cfi_def_cfa_offset 880
 102:../Core/Src/main.c ****   
 392              		.loc 1 102 3 view .LVU93
 109:../Core/Src/main.c **** 
 393              		.loc 1 109 3 view .LVU94
 394 0006 FFF7FEFF 		bl	HAL_Init
 395              	.LVL17:
 116:../Core/Src/main.c **** 
 396              		.loc 1 116 3 view .LVU95
 397 000a FFF7FEFF 		bl	SystemClock_Config
 398              	.LVL18:
 123:../Core/Src/main.c ****   MX_DMA_Init();
 399              		.loc 1 123 3 view .LVU96
 400 000e FFF7FEFF 		bl	MX_GPIO_Init
 401              	.LVL19:
 124:../Core/Src/main.c ****   MX_USART3_UART_Init();
 402              		.loc 1 124 3 view .LVU97
 403 0012 FFF7FEFF 		bl	MX_DMA_Init
 404              	.LVL20:
 125:../Core/Src/main.c ****   MX_ADC1_Init();
 405              		.loc 1 125 3 view .LVU98
 406 0016 FFF7FEFF 		bl	MX_USART3_UART_Init
 407              	.LVL21:
 126:../Core/Src/main.c ****   MX_DAC_Init();
 408              		.loc 1 126 3 view .LVU99
 409 001a FFF7FEFF 		bl	MX_ADC1_Init
 410              	.LVL22:
 127:../Core/Src/main.c ****   MX_TIM2_Init();
 411              		.loc 1 127 3 view .LVU100
 412 001e FFF7FEFF 		bl	MX_DAC_Init
 413              	.LVL23:
 128:../Core/Src/main.c ****   MX_TIM6_Init();
 414              		.loc 1 128 3 view .LVU101
 415 0022 FFF7FEFF 		bl	MX_TIM2_Init
 416              	.LVL24:
 129:../Core/Src/main.c ****   MX_SPI1_Init();
 417              		.loc 1 129 3 view .LVU102
 418 0026 FFF7FEFF 		bl	MX_TIM6_Init
 419              	.LVL25:
ARM GAS  /tmp/cccl9yjp.s 			page 17


 130:../Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 420              		.loc 1 130 3 view .LVU103
 421 002a FFF7FEFF 		bl	MX_SPI1_Init
 422              	.LVL26:
 133:../Core/Src/main.c ****   UART_puts("\n\rType '?' for list of available commands\n\r");
 423              		.loc 1 133 3 view .LVU104
 424 002e 0021     		movs	r1, #0
 425 0030 0120     		movs	r0, #1
 426 0032 FFF7FEFF 		bl	ver_cb
 427              	.LVL27:
 134:../Core/Src/main.c ****   UART_puts("Type '? <cmd>' for more info on a given command\n\r");
 428              		.loc 1 134 3 view .LVU105
 429 0036 3548     		ldr	r0, .L30
 430 0038 FFF7FEFF 		bl	UART_puts
 431              	.LVL28:
 135:../Core/Src/main.c **** 
 432              		.loc 1 135 3 view .LVU106
 433 003c 3448     		ldr	r0, .L30+4
 434 003e FFF7FEFF 		bl	UART_puts
 435              	.LVL29:
 141:../Core/Src/main.c ****   complex y_cwt[N * J] = {{0,0}};
 436              		.loc 1 141 3 view .LVU107
 141:../Core/Src/main.c ****   complex y_cwt[N * J] = {{0,0}};
 437              		.loc 1 141 11 is_stmt 0 view .LVU108
 438 0042 8022     		movs	r2, #128
 439 0044 3349     		ldr	r1, .L30+8
 440 0046 B6A8     		add	r0, sp, #728
 441 0048 FFF7FEFF 		bl	memcpy
 442              	.LVL30:
 142:../Core/Src/main.c ****   float period[J] = {0};
 443              		.loc 1 142 3 is_stmt 1 view .LVU109
 142:../Core/Src/main.c ****   float period[J] = {0};
 444              		.loc 1 142 11 is_stmt 0 view .LVU110
 445 004c 16AE     		add	r6, sp, #88
 446 004e 4FF42072 		mov	r2, #640
 447 0052 0021     		movs	r1, #0
 448 0054 3046     		mov	r0, r6
 449 0056 FFF7FEFF 		bl	memset
 450              	.LVL31:
 143:../Core/Src/main.c ****   float scale[J];
 451              		.loc 1 143 3 is_stmt 1 view .LVU111
 143:../Core/Src/main.c ****   float scale[J];
 452              		.loc 1 143 9 is_stmt 0 view .LVU112
 453 005a 11AD     		add	r5, sp, #68
 454 005c 0024     		movs	r4, #0
 455 005e 1194     		str	r4, [sp, #68]
 456 0060 1294     		str	r4, [sp, #72]
 457 0062 1394     		str	r4, [sp, #76]
 458 0064 1494     		str	r4, [sp, #80]
 459 0066 1594     		str	r4, [sp, #84]
 144:../Core/Src/main.c ****   float coi[N] = {0};
 460              		.loc 1 144 3 is_stmt 1 view .LVU113
 145:../Core/Src/main.c **** 
 461              		.loc 1 145 3 view .LVU114
 145:../Core/Src/main.c **** 
 462              		.loc 1 145 9 is_stmt 0 view .LVU115
 463 0068 04AF     		add	r7, sp, #16
ARM GAS  /tmp/cccl9yjp.s 			page 18


 464 006a 2022     		movs	r2, #32
 465 006c 2146     		mov	r1, r4
 466 006e 3846     		mov	r0, r7
 467 0070 FFF7FEFF 		bl	memset
 468              	.LVL32:
 147:../Core/Src/main.c ****   print_vector(y, N, 1);
 469              		.loc 1 147 3 is_stmt 1 view .LVU116
 470 0074 2848     		ldr	r0, .L30+12
 471 0076 FFF7FEFF 		bl	UART_puts
 472              	.LVL33:
 148:../Core/Src/main.c **** 
 473              		.loc 1 148 3 view .LVU117
 474 007a 0122     		movs	r2, #1
 475 007c 0821     		movs	r1, #8
 476 007e B6A8     		add	r0, sp, #728
 477 0080 FFF7FEFF 		bl	print_vector
 478              	.LVL34:
 150:../Core/Src/main.c **** 
 479              		.loc 1 150 3 view .LVU118
 480 0084 0397     		str	r7, [sp, #12]
 481 0086 0CAB     		add	r3, sp, #48
 482 0088 0293     		str	r3, [sp, #8]
 483 008a 0195     		str	r5, [sp, #4]
 484 008c 0096     		str	r6, [sp]
 485 008e F1EE081A 		vmov.f32	s3, #6.0e+0
 486 0092 2346     		mov	r3, r4
 487 0094 0522     		movs	r2, #5
 488 0096 B6EE001A 		vmov.f32	s2, #5.0e-1
 489 009a F5EE000A 		vmov.f32	s1, #2.5e-1
 490 009e B0EE600A 		vmov.f32	s0, s1
 491 00a2 0821     		movs	r1, #8
 492 00a4 B6A8     		add	r0, sp, #728
 493 00a6 FFF7FEFF 		bl	cwt
 494              	.LVL35:
 152:../Core/Src/main.c ****   print_vector(y_cwt, N, J);
 495              		.loc 1 152 3 view .LVU119
 496 00aa 1C48     		ldr	r0, .L30+16
 497 00ac FFF7FEFF 		bl	UART_puts
 498              	.LVL36:
 153:../Core/Src/main.c **** 
 499              		.loc 1 153 3 view .LVU120
 500 00b0 0522     		movs	r2, #5
 501 00b2 0821     		movs	r1, #8
 502 00b4 3046     		mov	r0, r6
 503 00b6 FFF7FEFF 		bl	print_vector
 504              	.LVL37:
 155:../Core/Src/main.c ****   Rx_UART_init(); // set USART3 interrupt
 505              		.loc 1 155 3 view .LVU121
 506 00ba 1948     		ldr	r0, .L30+20
 507 00bc FFF7FEFF 		bl	UART_puts
 508              	.LVL38:
 156:../Core/Src/main.c **** 
 509              		.loc 1 156 3 view .LVU122
 510 00c0 FFF7FEFF 		bl	Rx_UART_init
 511              	.LVL39:
 512 00c4 05E0     		b	.L25
 513              	.LVL40:
ARM GAS  /tmp/cccl9yjp.s 			page 19


 514              	.L24:
 167:../Core/Src/main.c ****     }
 515              		.loc 1 167 7 view .LVU123
 167:../Core/Src/main.c ****     }
 516              		.loc 1 167 15 is_stmt 0 view .LVU124
 517 00c6 174B     		ldr	r3, .L30+24
 518 00c8 0022     		movs	r2, #0
 519 00ca 1A70     		strb	r2, [r3]
 520              	.L23:
 170:../Core/Src/main.c ****     {
 521              		.loc 1 170 5 is_stmt 1 view .LVU125
 170:../Core/Src/main.c ****     {
 522              		.loc 1 170 8 is_stmt 0 view .LVU126
 523 00cc 164B     		ldr	r3, .L30+28
 524 00ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 170:../Core/Src/main.c ****     {
 525              		.loc 1 170 7 view .LVU127
 526 00d0 53B9     		cbnz	r3, .L29
 527              	.L25:
 158:../Core/Src/main.c ****   {
 528              		.loc 1 158 3 is_stmt 1 view .LVU128
 160:../Core/Src/main.c ****     {
 529              		.loc 1 160 5 view .LVU129
 160:../Core/Src/main.c ****     {
 530              		.loc 1 160 8 is_stmt 0 view .LVU130
 531 00d2 144B     		ldr	r3, .L30+24
 532 00d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 160:../Core/Src/main.c ****     {
 533              		.loc 1 160 7 view .LVU131
 534 00d6 002B     		cmp	r3, #0
 535 00d8 F8D0     		beq	.L23
 162:../Core/Src/main.c ****       if(c != (char)(-1))
 536              		.loc 1 162 7 is_stmt 1 view .LVU132
 162:../Core/Src/main.c ****       if(c != (char)(-1))
 537              		.loc 1 162 11 is_stmt 0 view .LVU133
 538 00da FFF7FEFF 		bl	UART_Receive
 539              	.LVL41:
 163:../Core/Src/main.c ****         // Its not a special character
 540              		.loc 1 163 7 is_stmt 1 view .LVU134
 163:../Core/Src/main.c ****         // Its not a special character
 541              		.loc 1 163 9 is_stmt 0 view .LVU135
 542 00de FF28     		cmp	r0, #255
 543 00e0 F1D0     		beq	.L24
 165:../Core/Src/main.c **** 
 544              		.loc 1 165 9 is_stmt 1 view .LVU136
 545 00e2 FFF7FEFF 		bl	UART_putchar
 546              	.LVL42:
 165:../Core/Src/main.c **** 
 547              		.loc 1 165 9 is_stmt 0 view .LVU137
 548 00e6 EEE7     		b	.L24
 549              	.L29:
 172:../Core/Src/main.c ****         // No error. Command is valid
 550              		.loc 1 172 7 is_stmt 1 view .LVU138
 172:../Core/Src/main.c ****         // No error. Command is valid
 551              		.loc 1 172 10 is_stmt 0 view .LVU139
 552 00e8 1048     		ldr	r0, .L30+32
 553 00ea FFF7FEFF 		bl	exec_cmd
ARM GAS  /tmp/cccl9yjp.s 			page 20


 554              	.LVL43:
 172:../Core/Src/main.c ****         // No error. Command is valid
 555              		.loc 1 172 9 view .LVU140
 556 00ee 18B9     		cbnz	r0, .L26
 174:../Core/Src/main.c ****       
 557              		.loc 1 174 9 is_stmt 1 view .LVU141
 558 00f0 0E49     		ldr	r1, .L30+32
 559 00f2 0F48     		ldr	r0, .L30+36
 560 00f4 FFF7FEFF 		bl	strcpy
 561              	.LVL44:
 562              	.L26:
 176:../Core/Src/main.c ****       cmd_received = 0;
 563              		.loc 1 176 7 view .LVU142
 564 00f8 3E20     		movs	r0, #62
 565 00fa FFF7FEFF 		bl	UART_putchar
 566              	.LVL45:
 177:../Core/Src/main.c ****       Rx_UART_init(); // ready to begin reception
 567              		.loc 1 177 7 view .LVU143
 177:../Core/Src/main.c ****       Rx_UART_init(); // ready to begin reception
 568              		.loc 1 177 20 is_stmt 0 view .LVU144
 569 00fe 0A4B     		ldr	r3, .L30+28
 570 0100 0022     		movs	r2, #0
 571 0102 1A70     		strb	r2, [r3]
 178:../Core/Src/main.c ****     }
 572              		.loc 1 178 7 is_stmt 1 view .LVU145
 573 0104 FFF7FEFF 		bl	Rx_UART_init
 574              	.LVL46:
 575 0108 E3E7     		b	.L25
 576              	.L31:
 577 010a 00BF     		.align	2
 578              	.L30:
 579 010c 00000000 		.word	.LC3
 580 0110 2C000000 		.word	.LC4
 581 0114 00000000 		.word	.LANCHOR0
 582 0118 60000000 		.word	.LC5
 583 011c 74000000 		.word	.LC6
 584 0120 8C000000 		.word	.LC7
 585 0124 00000000 		.word	Rx_flag
 586 0128 00000000 		.word	cmd_received
 587 012c 00000000 		.word	Rx_Buffer
 588 0130 00000000 		.word	.LANCHOR1
 589              		.cfi_endproc
 590              	.LFE147:
 592              		.global	last_valid_cmd
 593              		.section	.rodata
 594              		.align	3
 595              		.set	.LANCHOR0,. + 0
 596              	.LC0:
 597 0000 00000000 		.word	0
 598 0004 0000F03F 		.word	1072693248
 599 0008 00000000 		.word	0
 600 000c 00000000 		.word	0
 601 0010 00000000 		.word	0
 602 0014 00000040 		.word	1073741824
 603 0018 00000000 		.word	0
 604 001c 00000000 		.word	0
 605 0020 00000000 		.word	0
ARM GAS  /tmp/cccl9yjp.s 			page 21


 606 0024 00000840 		.word	1074266112
 607 0028 00000000 		.word	0
 608 002c 00000000 		.word	0
 609 0030 00000000 		.word	0
 610 0034 00001040 		.word	1074790400
 611 0038 00000000 		.word	0
 612 003c 00000000 		.word	0
 613 0040 00000000 		.word	0
 614 0044 00001440 		.word	1075052544
 615 0048 00000000 		.word	0
 616 004c 00000000 		.word	0
 617 0050 00000000 		.word	0
 618 0054 00001840 		.word	1075314688
 619 0058 00000000 		.word	0
 620 005c 00000000 		.word	0
 621 0060 00000000 		.word	0
 622 0064 00001C40 		.word	1075576832
 623 0068 00000000 		.word	0
 624 006c 00000000 		.word	0
 625 0070 00000000 		.word	0
 626 0074 00002040 		.word	1075838976
 627 0078 00000000 		.word	0
 628 007c 00000000 		.word	0
 629              		.section	.bss.last_valid_cmd,"aw",%nobits
 630              		.align	2
 631              		.set	.LANCHOR1,. + 0
 634              	last_valid_cmd:
 635 0000 00000000 		.space	16
 635      00000000 
 635      00000000 
 635      00000000 
 636              		.text
 637              	.Letext0:
 638              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 639              		.file 4 "../Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 640              		.file 5 "../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 641              		.file 6 "../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 642              		.file 7 "../Core/Inc/main.h"
 643              		.file 8 "../Core/Inc/usart.h"
 644              		.file 9 "../Core/Inc/complex.h"
 645              		.file 10 "../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 646              		.file 11 "../Core/Inc/wavelet.h"
 647              		.file 12 "../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pwr_ex.h"
 648              		.file 13 "../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 649              		.file 14 "../Core/Inc/gpio.h"
 650              		.file 15 "../Core/Inc/dma.h"
 651              		.file 16 "../Core/Inc/adc.h"
 652              		.file 17 "../Core/Inc/dac.h"
 653              		.file 18 "../Core/Inc/tim.h"
 654              		.file 19 "../Core/Inc/spi.h"
 655              		.file 20 "../Core/Inc/interface.h"
 656              		.file 21 "<built-in>"
 657              		.file 22 "../Core/Inc/commands.h"
 658              		.file 23 "/usr/include/newlib/string.h"
 659              		.file 24 "/usr/include/newlib/stdio.h"
 660              		.file 25 "../Core/Inc/cwt.h"
ARM GAS  /tmp/cccl9yjp.s 			page 22


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cccl9yjp.s:17     .rodata.print_vector.str1.4:0000000000000000 $d
     /tmp/cccl9yjp.s:24     .text.print_vector:0000000000000000 $t
     /tmp/cccl9yjp.s:32     .text.print_vector:0000000000000000 print_vector
     /tmp/cccl9yjp.s:132    .text.print_vector:0000000000000054 $d
     /tmp/cccl9yjp.s:138    .text.Error_Handler:0000000000000000 $t
     /tmp/cccl9yjp.s:145    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cccl9yjp.s:177    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cccl9yjp.s:184    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cccl9yjp.s:344    .text.SystemClock_Config:00000000000000a4 $d
     /tmp/cccl9yjp.s:350    .rodata.main.str1.4:0000000000000000 $d
     /tmp/cccl9yjp.s:368    .text.main:0000000000000000 $t
     /tmp/cccl9yjp.s:375    .text.main:0000000000000000 main
     /tmp/cccl9yjp.s:579    .text.main:000000000000010c $d
     /tmp/cccl9yjp.s:634    .bss.last_valid_cmd:0000000000000000 last_valid_cmd
     /tmp/cccl9yjp.s:594    .rodata:0000000000000000 $d
     /tmp/cccl9yjp.s:630    .bss.last_valid_cmd:0000000000000000 $d

UNDEFINED SYMBOLS
sprintf
UART_puts
memset
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_USART3_UART_Init
MX_ADC1_Init
MX_DAC_Init
MX_TIM2_Init
MX_TIM6_Init
MX_SPI1_Init
ver_cb
memcpy
cwt
Rx_UART_init
UART_Receive
UART_putchar
exec_cmd
strcpy
Rx_flag
cmd_received
Rx_Buffer
