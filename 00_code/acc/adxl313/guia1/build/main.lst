ARM GAS  /tmp/cc8RiYqH.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"main.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
  17              		.align	1
  18              		.global	HAL_GPIO_EXTI_Callback
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	HAL_GPIO_EXTI_Callback:
  26              	.LVL0:
  27              	.LFB146:
  28              		.file 1 "../Core/Src/main.c"
   1:../Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:../Core/Src/main.c **** /**
   3:../Core/Src/main.c ****   ******************************************************************************
   4:../Core/Src/main.c ****   * @file           : main.c
   5:../Core/Src/main.c ****   * @brief          : Main program body
   6:../Core/Src/main.c ****   ******************************************************************************
   7:../Core/Src/main.c ****   * @attention
   8:../Core/Src/main.c ****   *
   9:../Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:../Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:../Core/Src/main.c ****   *
  12:../Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:../Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:../Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:../Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:../Core/Src/main.c ****   *
  17:../Core/Src/main.c ****   ******************************************************************************
  18:../Core/Src/main.c ****   */
  19:../Core/Src/main.c **** /* USER CODE END Header */
  20:../Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:../Core/Src/main.c **** #include "main.h"
  22:../Core/Src/main.c **** #include "adc.h"
  23:../Core/Src/main.c **** #include "dac.h"
  24:../Core/Src/main.c **** #include "dma.h"
  25:../Core/Src/main.c **** #include "spi.h"
  26:../Core/Src/main.c **** #include "tim.h"
  27:../Core/Src/main.c **** #include "usart.h"
  28:../Core/Src/main.c **** #include "gpio.h"
  29:../Core/Src/main.c **** 
  30:../Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
ARM GAS  /tmp/cc8RiYqH.s 			page 2


  31:../Core/Src/main.c **** /* USER CODE BEGIN Includes */
  32:../Core/Src/main.c **** #include <string.h>
  33:../Core/Src/main.c **** #include "commands.h"
  34:../Core/Src/main.c **** #include "interface.h" // print startup message
  35:../Core/Src/main.c **** #include "adxl313.h"
  36:../Core/Src/main.c **** 
  37:../Core/Src/main.c **** //#include "adxl313.h"
  38:../Core/Src/main.c **** /* USER CODE END Includes */
  39:../Core/Src/main.c **** 
  40:../Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  41:../Core/Src/main.c **** /* USER CODE BEGIN PTD */
  42:../Core/Src/main.c **** 
  43:../Core/Src/main.c **** /* USER CODE END PTD */
  44:../Core/Src/main.c **** 
  45:../Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  46:../Core/Src/main.c **** /* USER CODE BEGIN PD */
  47:../Core/Src/main.c **** 
  48:../Core/Src/main.c **** /* USER CODE END PD */
  49:../Core/Src/main.c **** 
  50:../Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  51:../Core/Src/main.c **** /* USER CODE BEGIN PM */
  52:../Core/Src/main.c **** 
  53:../Core/Src/main.c **** /* USER CODE END PM */
  54:../Core/Src/main.c **** 
  55:../Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  56:../Core/Src/main.c **** 
  57:../Core/Src/main.c **** /* USER CODE BEGIN PV */
  58:../Core/Src/main.c **** char last_valid_cmd[RX_BUFF_LEN] = {0};
  59:../Core/Src/main.c **** 
  60:../Core/Src/main.c **** adxl313_dev *acc_ptr;
  61:../Core/Src/main.c **** 
  62:../Core/Src/main.c **** static uint16_t x = 0, y = 0, z = 0; 
  63:../Core/Src/main.c **** 
  64:../Core/Src/main.c **** /* USER CODE END PV */
  65:../Core/Src/main.c **** 
  66:../Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  67:../Core/Src/main.c **** void SystemClock_Config(void);
  68:../Core/Src/main.c **** /* USER CODE BEGIN PFP */
  69:../Core/Src/main.c **** 
  70:../Core/Src/main.c **** /* USER CODE END PFP */
  71:../Core/Src/main.c **** 
  72:../Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  73:../Core/Src/main.c **** /* USER CODE BEGIN 0 */
  74:../Core/Src/main.c **** 
  75:../Core/Src/main.c **** /* USER CODE END 0 */
  76:../Core/Src/main.c **** 
  77:../Core/Src/main.c **** /**
  78:../Core/Src/main.c ****   * @brief  The application entry point.
  79:../Core/Src/main.c ****   * @retval int
  80:../Core/Src/main.c ****   */
  81:../Core/Src/main.c **** int main(void)
  82:../Core/Src/main.c **** {
  83:../Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  84:../Core/Src/main.c ****   char c;
  85:../Core/Src/main.c ****   char string[24];
  86:../Core/Src/main.c **** 
  87:../Core/Src/main.c ****   adxl313_dev acc_dev; // accelerometer
ARM GAS  /tmp/cc8RiYqH.s 			page 3


  88:../Core/Src/main.c **** 
  89:../Core/Src/main.c ****   /* USER CODE END 1 */
  90:../Core/Src/main.c **** 
  91:../Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  92:../Core/Src/main.c **** 
  93:../Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  94:../Core/Src/main.c ****   HAL_Init();
  95:../Core/Src/main.c **** 
  96:../Core/Src/main.c ****   /* USER CODE BEGIN Init */
  97:../Core/Src/main.c **** 
  98:../Core/Src/main.c ****   /* USER CODE END Init */
  99:../Core/Src/main.c **** 
 100:../Core/Src/main.c ****   /* Configure the system clock */
 101:../Core/Src/main.c ****   SystemClock_Config();
 102:../Core/Src/main.c **** 
 103:../Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 104:../Core/Src/main.c **** 
 105:../Core/Src/main.c ****   /* USER CODE END SysInit */
 106:../Core/Src/main.c **** 
 107:../Core/Src/main.c ****   /* Initialize all configured peripherals */
 108:../Core/Src/main.c ****   MX_GPIO_Init();
 109:../Core/Src/main.c ****   MX_DMA_Init();
 110:../Core/Src/main.c ****   MX_USART3_UART_Init();
 111:../Core/Src/main.c ****   MX_ADC1_Init();
 112:../Core/Src/main.c ****   MX_DAC_Init();
 113:../Core/Src/main.c ****   MX_TIM2_Init();
 114:../Core/Src/main.c ****   MX_TIM6_Init();
 115:../Core/Src/main.c ****   MX_SPI1_Init();
 116:../Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 117:../Core/Src/main.c ****   // print startup message
 118:../Core/Src/main.c ****   ver_cb(1, NULL);
 119:../Core/Src/main.c ****   UART_puts("\n\rType '?' for list of available commands\n\r");
 120:../Core/Src/main.c ****   UART_puts("Type '? <cmd>' for more info on a given command\n\r");
 121:../Core/Src/main.c **** 
 122:../Core/Src/main.c ****   /* USER CODE END 2 */
 123:../Core/Src/main.c **** 
 124:../Core/Src/main.c ****   /* Infinite loop */
 125:../Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 126:../Core/Src/main.c ****   { // initialization commands
 127:../Core/Src/main.c ****     exec_cmd("MO 1 1");
 128:../Core/Src/main.c ****     exec_cmd("WG sin 32");
 129:../Core/Src/main.c ****     exec_cmd("SP ms 1");
 130:../Core/Src/main.c ****     exec_cmd("S");
 131:../Core/Src/main.c ****   }
 132:../Core/Src/main.c **** 
 133:../Core/Src/main.c ****   acc_ptr = &acc_dev;
 134:../Core/Src/main.c ****   // initialize accelerometer
 135:../Core/Src/main.c ****   begin(acc_ptr, ADXL313_SPI_COMM, ADXL313_4G_RANGE, ADXL313_13_BIT_RES, 3200);
 136:../Core/Src/main.c **** 
 137:../Core/Src/main.c ****   UART_putchar('>'); // print prompt
 138:../Core/Src/main.c ****   Rx_UART_init(); // set USART3 interrupt
 139:../Core/Src/main.c **** 
 140:../Core/Src/main.c ****   while (1)
 141:../Core/Src/main.c ****   {
 142:../Core/Src/main.c ****     if(Rx_flag)
 143:../Core/Src/main.c ****     {
 144:../Core/Src/main.c ****       c = UART_Receive(); // Returns received char
ARM GAS  /tmp/cc8RiYqH.s 			page 4


 145:../Core/Src/main.c ****       if(c != (char)(-1))
 146:../Core/Src/main.c ****         // Its not a special character
 147:../Core/Src/main.c ****         UART_putchar(c); // Received char is echoed
 148:../Core/Src/main.c **** 
 149:../Core/Src/main.c ****       Rx_flag = 0;
 150:../Core/Src/main.c ****     }
 151:../Core/Src/main.c ****     
 152:../Core/Src/main.c ****     if(cmd_received)
 153:../Core/Src/main.c ****     {
 154:../Core/Src/main.c ****       if(exec_cmd(Rx_Buffer) == 0)// Is there an error?
 155:../Core/Src/main.c ****         // No error. Command is valid
 156:../Core/Src/main.c ****         strcpy(last_valid_cmd, Rx_Buffer); // Save this as last valid command
 157:../Core/Src/main.c ****       
 158:../Core/Src/main.c ****       UART_putchar('>');// print prompt
 159:../Core/Src/main.c ****       cmd_received = 0;
 160:../Core/Src/main.c ****       Rx_UART_init(); // ready to begin reception
 161:../Core/Src/main.c ****     }
 162:../Core/Src/main.c **** 
 163:../Core/Src/main.c ****     if(acc_ptr->data_ready)
 164:../Core/Src/main.c ****     {
 165:../Core/Src/main.c ****       acc_ptr->data_ready = false;
 166:../Core/Src/main.c ****       sprintf(string, "x:0x%X\ty:0x%X\tz:0x%X\n\r", acc_ptr->x, acc_ptr->y, acc_ptr->z);
 167:../Core/Src/main.c ****       UART_puts(string);
 168:../Core/Src/main.c ****     }
 169:../Core/Src/main.c ****     /* USER CODE END WHILE */
 170:../Core/Src/main.c **** 
 171:../Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 172:../Core/Src/main.c ****   }
 173:../Core/Src/main.c ****   /* USER CODE END 3 */
 174:../Core/Src/main.c **** }
 175:../Core/Src/main.c **** 
 176:../Core/Src/main.c **** /**
 177:../Core/Src/main.c ****   * @brief System Clock Configuration
 178:../Core/Src/main.c ****   * @retval None
 179:../Core/Src/main.c ****   */
 180:../Core/Src/main.c **** void SystemClock_Config(void)
 181:../Core/Src/main.c **** {
 182:../Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 183:../Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 184:../Core/Src/main.c **** 
 185:../Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 186:../Core/Src/main.c ****   */
 187:../Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 188:../Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 189:../Core/Src/main.c **** 
 190:../Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 191:../Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 192:../Core/Src/main.c ****   */
 193:../Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 194:../Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 195:../Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 196:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 197:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 198:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 199:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 216;
 200:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 201:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
ARM GAS  /tmp/cc8RiYqH.s 			page 5


 202:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 203:../Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 204:../Core/Src/main.c ****   {
 205:../Core/Src/main.c ****     Error_Handler();
 206:../Core/Src/main.c ****   }
 207:../Core/Src/main.c **** 
 208:../Core/Src/main.c ****   /** Activate the Over-Drive mode
 209:../Core/Src/main.c ****   */
 210:../Core/Src/main.c ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 211:../Core/Src/main.c ****   {
 212:../Core/Src/main.c ****     Error_Handler();
 213:../Core/Src/main.c ****   }
 214:../Core/Src/main.c **** 
 215:../Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 216:../Core/Src/main.c ****   */
 217:../Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 218:../Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 219:../Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 220:../Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 221:../Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 222:../Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 223:../Core/Src/main.c **** 
 224:../Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 225:../Core/Src/main.c ****   {
 226:../Core/Src/main.c ****     Error_Handler();
 227:../Core/Src/main.c ****   }
 228:../Core/Src/main.c **** }
 229:../Core/Src/main.c **** 
 230:../Core/Src/main.c **** /* USER CODE BEGIN 4 */
 231:../Core/Src/main.c **** 
 232:../Core/Src/main.c **** // EXTI Line9 External Interrupt ISR Handler CallBackFun
 233:../Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
 234:../Core/Src/main.c **** {
  29              		.loc 1 234 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
 235:../Core/Src/main.c ****     if(GPIO_Pin == GPIO_PIN_12) // If The INT Source Is EXTI Line12 (A12 Pin)
  33              		.loc 1 235 5 view .LVU1
  34              		.loc 1 235 7 is_stmt 0 view .LVU2
  35 0000 B0F5805F 		cmp	r0, #4096
  36 0004 00D0     		beq	.L7
  37 0006 7047     		bx	lr
  38              	.L7:
 234:../Core/Src/main.c ****     if(GPIO_Pin == GPIO_PIN_12) // If The INT Source Is EXTI Line12 (A12 Pin)
  39              		.loc 1 234 1 view .LVU3
  40 0008 08B5     		push	{r3, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 3, -8
  44              		.cfi_offset 14, -4
 236:../Core/Src/main.c ****     {
 237:../Core/Src/main.c ****       readAccel(acc_ptr, &x, &y, &z);
  45              		.loc 1 237 7 is_stmt 1 view .LVU4
  46 000a 044B     		ldr	r3, .L8
  47 000c 044A     		ldr	r2, .L8+4
  48 000e 0549     		ldr	r1, .L8+8
ARM GAS  /tmp/cc8RiYqH.s 			page 6


  49 0010 0548     		ldr	r0, .L8+12
  50              	.LVL1:
  51              		.loc 1 237 7 is_stmt 0 view .LVU5
  52 0012 0068     		ldr	r0, [r0]
  53 0014 FFF7FEFF 		bl	readAccel
  54              	.LVL2:
 238:../Core/Src/main.c ****     }
 239:../Core/Src/main.c **** }
  55              		.loc 1 239 1 view .LVU6
  56 0018 08BD     		pop	{r3, pc}
  57              	.L9:
  58 001a 00BF     		.align	2
  59              	.L8:
  60 001c 00000000 		.word	.LANCHOR0
  61 0020 00000000 		.word	.LANCHOR1
  62 0024 00000000 		.word	.LANCHOR2
  63 0028 00000000 		.word	.LANCHOR3
  64              		.cfi_endproc
  65              	.LFE146:
  67              		.section	.text.Error_Handler,"ax",%progbits
  68              		.align	1
  69              		.global	Error_Handler
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  73              		.fpu fpv5-d16
  75              	Error_Handler:
  76              	.LFB147:
 240:../Core/Src/main.c **** 
 241:../Core/Src/main.c **** /* USER CODE END 4 */
 242:../Core/Src/main.c **** 
 243:../Core/Src/main.c **** /**
 244:../Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 245:../Core/Src/main.c ****   * @retval None
 246:../Core/Src/main.c ****   */
 247:../Core/Src/main.c **** void Error_Handler(void)
 248:../Core/Src/main.c **** {
  77              		.loc 1 248 1 is_stmt 1 view -0
  78              		.cfi_startproc
  79              		@ Volatile: function does not return.
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		@ link register save eliminated.
 249:../Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 250:../Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 251:../Core/Src/main.c ****   __disable_irq();
  83              		.loc 1 251 3 view .LVU8
  84              	.LBB4:
  85              	.LBI4:
  86              		.file 2 "../Drivers/CMSIS/Include/cmsis_gcc.h"
   1:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:../Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:../Drivers/CMSIS/Include/cmsis_gcc.h **** /*
ARM GAS  /tmp/cc8RiYqH.s 			page 7


   8:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
ARM GAS  /tmp/cc8RiYqH.s 			page 8


  65:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:../Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:../Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:../Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:../Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
ARM GAS  /tmp/cc8RiYqH.s 			page 9


 122:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  87              		.loc 2 140 27 view .LVU9
  88              	.LBB5:
 141:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  89              		.loc 2 142 3 view .LVU10
  90              		.syntax unified
  91              	@ 142 "../Drivers/CMSIS/Include/cmsis_gcc.h" 1
  92 0000 72B6     		cpsid i
  93              	@ 0 "" 2
  94              		.thumb
  95              		.syntax unified
  96              	.L11:
  97              	.LBE5:
  98              	.LBE4:
 252:../Core/Src/main.c ****   while (1)
  99              		.loc 1 252 3 discriminator 1 view .LVU11
 253:../Core/Src/main.c ****   {
 254:../Core/Src/main.c **** 
 255:../Core/Src/main.c ****   }
 100              		.loc 1 255 3 discriminator 1 view .LVU12
 252:../Core/Src/main.c ****   while (1)
 101              		.loc 1 252 9 discriminator 1 view .LVU13
 102 0002 FEE7     		b	.L11
 103              		.cfi_endproc
 104              	.LFE147:
 106              		.section	.text.SystemClock_Config,"ax",%progbits
 107              		.align	1
 108              		.global	SystemClock_Config
 109              		.syntax unified
 110              		.thumb
 111              		.thumb_func
 112              		.fpu fpv5-d16
 114              	SystemClock_Config:
 115              	.LFB145:
 181:../Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 116              		.loc 1 181 1 view -0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 80
ARM GAS  /tmp/cc8RiYqH.s 			page 10


 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120 0000 00B5     		push	{lr}
 121              	.LCFI1:
 122              		.cfi_def_cfa_offset 4
 123              		.cfi_offset 14, -4
 124 0002 95B0     		sub	sp, sp, #84
 125              	.LCFI2:
 126              		.cfi_def_cfa_offset 88
 182:../Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 127              		.loc 1 182 3 view .LVU15
 182:../Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 128              		.loc 1 182 22 is_stmt 0 view .LVU16
 129 0004 3422     		movs	r2, #52
 130 0006 0021     		movs	r1, #0
 131 0008 07A8     		add	r0, sp, #28
 132 000a FFF7FEFF 		bl	memset
 133              	.LVL3:
 183:../Core/Src/main.c **** 
 134              		.loc 1 183 3 is_stmt 1 view .LVU17
 183:../Core/Src/main.c **** 
 135              		.loc 1 183 22 is_stmt 0 view .LVU18
 136 000e 0023     		movs	r3, #0
 137 0010 0293     		str	r3, [sp, #8]
 138 0012 0393     		str	r3, [sp, #12]
 139 0014 0493     		str	r3, [sp, #16]
 140 0016 0593     		str	r3, [sp, #20]
 141 0018 0693     		str	r3, [sp, #24]
 187:../Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 142              		.loc 1 187 3 is_stmt 1 view .LVU19
 143              	.LBB6:
 187:../Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 144              		.loc 1 187 3 view .LVU20
 187:../Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 145              		.loc 1 187 3 view .LVU21
 146 001a 224A     		ldr	r2, .L20
 147 001c 116C     		ldr	r1, [r2, #64]
 148 001e 41F08051 		orr	r1, r1, #268435456
 149 0022 1164     		str	r1, [r2, #64]
 187:../Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 150              		.loc 1 187 3 view .LVU22
 151 0024 126C     		ldr	r2, [r2, #64]
 152 0026 02F08052 		and	r2, r2, #268435456
 153 002a 0092     		str	r2, [sp]
 187:../Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 154              		.loc 1 187 3 view .LVU23
 155 002c 009A     		ldr	r2, [sp]
 156              	.LBE6:
 187:../Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 157              		.loc 1 187 3 view .LVU24
 188:../Core/Src/main.c **** 
 158              		.loc 1 188 3 view .LVU25
 159              	.LBB7:
 188:../Core/Src/main.c **** 
 160              		.loc 1 188 3 view .LVU26
 188:../Core/Src/main.c **** 
 161              		.loc 1 188 3 view .LVU27
 162 002e 1E4A     		ldr	r2, .L20+4
ARM GAS  /tmp/cc8RiYqH.s 			page 11


 163 0030 1168     		ldr	r1, [r2]
 164 0032 41F44041 		orr	r1, r1, #49152
 165 0036 1160     		str	r1, [r2]
 188:../Core/Src/main.c **** 
 166              		.loc 1 188 3 view .LVU28
 167 0038 1268     		ldr	r2, [r2]
 168 003a 02F44042 		and	r2, r2, #49152
 169 003e 0192     		str	r2, [sp, #4]
 188:../Core/Src/main.c **** 
 170              		.loc 1 188 3 view .LVU29
 171 0040 019A     		ldr	r2, [sp, #4]
 172              	.LBE7:
 188:../Core/Src/main.c **** 
 173              		.loc 1 188 3 view .LVU30
 193:../Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 174              		.loc 1 193 3 view .LVU31
 193:../Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 175              		.loc 1 193 36 is_stmt 0 view .LVU32
 176 0042 0222     		movs	r2, #2
 177 0044 0792     		str	r2, [sp, #28]
 194:../Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 178              		.loc 1 194 3 is_stmt 1 view .LVU33
 194:../Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 179              		.loc 1 194 30 is_stmt 0 view .LVU34
 180 0046 0121     		movs	r1, #1
 181 0048 0A91     		str	r1, [sp, #40]
 195:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 182              		.loc 1 195 3 is_stmt 1 view .LVU35
 195:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 183              		.loc 1 195 41 is_stmt 0 view .LVU36
 184 004a 1021     		movs	r1, #16
 185 004c 0B91     		str	r1, [sp, #44]
 196:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 186              		.loc 1 196 3 is_stmt 1 view .LVU37
 196:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 187              		.loc 1 196 34 is_stmt 0 view .LVU38
 188 004e 0D92     		str	r2, [sp, #52]
 197:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 189              		.loc 1 197 3 is_stmt 1 view .LVU39
 197:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 190              		.loc 1 197 35 is_stmt 0 view .LVU40
 191 0050 0E93     		str	r3, [sp, #56]
 198:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 216;
 192              		.loc 1 198 3 is_stmt 1 view .LVU41
 198:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 216;
 193              		.loc 1 198 30 is_stmt 0 view .LVU42
 194 0052 0823     		movs	r3, #8
 195 0054 0F93     		str	r3, [sp, #60]
 199:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 196              		.loc 1 199 3 is_stmt 1 view .LVU43
 199:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 197              		.loc 1 199 30 is_stmt 0 view .LVU44
 198 0056 D823     		movs	r3, #216
 199 0058 1093     		str	r3, [sp, #64]
 200:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 200              		.loc 1 200 3 is_stmt 1 view .LVU45
 200:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
ARM GAS  /tmp/cc8RiYqH.s 			page 12


 201              		.loc 1 200 30 is_stmt 0 view .LVU46
 202 005a 1192     		str	r2, [sp, #68]
 201:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 203              		.loc 1 201 3 is_stmt 1 view .LVU47
 201:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 204              		.loc 1 201 30 is_stmt 0 view .LVU48
 205 005c 1292     		str	r2, [sp, #72]
 202:../Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 206              		.loc 1 202 3 is_stmt 1 view .LVU49
 202:../Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 207              		.loc 1 202 30 is_stmt 0 view .LVU50
 208 005e 1392     		str	r2, [sp, #76]
 203:../Core/Src/main.c ****   {
 209              		.loc 1 203 3 is_stmt 1 view .LVU51
 203:../Core/Src/main.c ****   {
 210              		.loc 1 203 7 is_stmt 0 view .LVU52
 211 0060 07A8     		add	r0, sp, #28
 212 0062 FFF7FEFF 		bl	HAL_RCC_OscConfig
 213              	.LVL4:
 203:../Core/Src/main.c ****   {
 214              		.loc 1 203 6 view .LVU53
 215 0066 B0B9     		cbnz	r0, .L17
 210:../Core/Src/main.c ****   {
 216              		.loc 1 210 3 is_stmt 1 view .LVU54
 210:../Core/Src/main.c ****   {
 217              		.loc 1 210 7 is_stmt 0 view .LVU55
 218 0068 FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 219              	.LVL5:
 210:../Core/Src/main.c ****   {
 220              		.loc 1 210 6 view .LVU56
 221 006c A8B9     		cbnz	r0, .L18
 217:../Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 222              		.loc 1 217 3 is_stmt 1 view .LVU57
 217:../Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 223              		.loc 1 217 31 is_stmt 0 view .LVU58
 224 006e 0F23     		movs	r3, #15
 225 0070 0293     		str	r3, [sp, #8]
 219:../Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 226              		.loc 1 219 3 is_stmt 1 view .LVU59
 219:../Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 227              		.loc 1 219 34 is_stmt 0 view .LVU60
 228 0072 0223     		movs	r3, #2
 229 0074 0393     		str	r3, [sp, #12]
 220:../Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 230              		.loc 1 220 3 is_stmt 1 view .LVU61
 220:../Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 231              		.loc 1 220 35 is_stmt 0 view .LVU62
 232 0076 0023     		movs	r3, #0
 233 0078 0493     		str	r3, [sp, #16]
 221:../Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 234              		.loc 1 221 3 is_stmt 1 view .LVU63
 221:../Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 235              		.loc 1 221 36 is_stmt 0 view .LVU64
 236 007a 4FF4A053 		mov	r3, #5120
 237 007e 0593     		str	r3, [sp, #20]
 222:../Core/Src/main.c **** 
 238              		.loc 1 222 3 is_stmt 1 view .LVU65
ARM GAS  /tmp/cc8RiYqH.s 			page 13


 222:../Core/Src/main.c **** 
 239              		.loc 1 222 36 is_stmt 0 view .LVU66
 240 0080 4FF48053 		mov	r3, #4096
 241 0084 0693     		str	r3, [sp, #24]
 224:../Core/Src/main.c ****   {
 242              		.loc 1 224 3 is_stmt 1 view .LVU67
 224:../Core/Src/main.c ****   {
 243              		.loc 1 224 7 is_stmt 0 view .LVU68
 244 0086 0721     		movs	r1, #7
 245 0088 02A8     		add	r0, sp, #8
 246 008a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 247              	.LVL6:
 224:../Core/Src/main.c ****   {
 248              		.loc 1 224 6 view .LVU69
 249 008e 30B9     		cbnz	r0, .L19
 228:../Core/Src/main.c **** 
 250              		.loc 1 228 1 view .LVU70
 251 0090 15B0     		add	sp, sp, #84
 252              	.LCFI3:
 253              		.cfi_remember_state
 254              		.cfi_def_cfa_offset 4
 255              		@ sp needed
 256 0092 5DF804FB 		ldr	pc, [sp], #4
 257              	.L17:
 258              	.LCFI4:
 259              		.cfi_restore_state
 205:../Core/Src/main.c ****   }
 260              		.loc 1 205 5 is_stmt 1 view .LVU71
 261 0096 FFF7FEFF 		bl	Error_Handler
 262              	.LVL7:
 263              	.L18:
 212:../Core/Src/main.c ****   }
 264              		.loc 1 212 5 view .LVU72
 265 009a FFF7FEFF 		bl	Error_Handler
 266              	.LVL8:
 267              	.L19:
 226:../Core/Src/main.c ****   }
 268              		.loc 1 226 5 view .LVU73
 269 009e FFF7FEFF 		bl	Error_Handler
 270              	.LVL9:
 271              	.L21:
 272 00a2 00BF     		.align	2
 273              	.L20:
 274 00a4 00380240 		.word	1073887232
 275 00a8 00700040 		.word	1073770496
 276              		.cfi_endproc
 277              	.LFE145:
 279              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 280              		.align	2
 281              	.LC0:
 282 0000 0A0D5479 		.ascii	"\012\015Type '?' for list of available commands\012"
 282      70652027 
 282      3F272066 
 282      6F72206C 
 282      69737420 
 283 002a 0D00     		.ascii	"\015\000"
 284              		.align	2
ARM GAS  /tmp/cc8RiYqH.s 			page 14


 285              	.LC1:
 286 002c 54797065 		.ascii	"Type '? <cmd>' for more info on a given command\012"
 286      20273F20 
 286      3C636D64 
 286      3E272066 
 286      6F72206D 
 287 005c 0D00     		.ascii	"\015\000"
 288 005e 0000     		.align	2
 289              	.LC2:
 290 0060 4D4F2031 		.ascii	"MO 1 1\000"
 290      203100
 291 0067 00       		.align	2
 292              	.LC3:
 293 0068 57472073 		.ascii	"WG sin 32\000"
 293      696E2033 
 293      3200
 294 0072 0000     		.align	2
 295              	.LC4:
 296 0074 5350206D 		.ascii	"SP ms 1\000"
 296      73203100 
 297              		.align	2
 298              	.LC5:
 299 007c 5300     		.ascii	"S\000"
 300 007e 0000     		.align	2
 301              	.LC6:
 302 0080 783A3078 		.ascii	"x:0x%X\011y:0x%X\011z:0x%X\012\015\000"
 302      25580979 
 302      3A307825 
 302      58097A3A 
 302      30782558 
 303              		.section	.text.main,"ax",%progbits
 304              		.align	1
 305              		.global	main
 306              		.syntax unified
 307              		.thumb
 308              		.thumb_func
 309              		.fpu fpv5-d16
 311              	main:
 312              	.LFB144:
  82:../Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 313              		.loc 1 82 1 view -0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 88
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317 0000 00B5     		push	{lr}
 318              	.LCFI5:
 319              		.cfi_def_cfa_offset 4
 320              		.cfi_offset 14, -4
 321 0002 99B0     		sub	sp, sp, #100
 322              	.LCFI6:
 323              		.cfi_def_cfa_offset 104
  84:../Core/Src/main.c ****   char string[24];
 324              		.loc 1 84 3 view .LVU75
  85:../Core/Src/main.c **** 
 325              		.loc 1 85 3 view .LVU76
  87:../Core/Src/main.c **** 
 326              		.loc 1 87 3 view .LVU77
ARM GAS  /tmp/cc8RiYqH.s 			page 15


  94:../Core/Src/main.c **** 
 327              		.loc 1 94 3 view .LVU78
 328 0004 FFF7FEFF 		bl	HAL_Init
 329              	.LVL10:
 101:../Core/Src/main.c **** 
 330              		.loc 1 101 3 view .LVU79
 331 0008 FFF7FEFF 		bl	SystemClock_Config
 332              	.LVL11:
 108:../Core/Src/main.c ****   MX_DMA_Init();
 333              		.loc 1 108 3 view .LVU80
 334 000c FFF7FEFF 		bl	MX_GPIO_Init
 335              	.LVL12:
 109:../Core/Src/main.c ****   MX_USART3_UART_Init();
 336              		.loc 1 109 3 view .LVU81
 337 0010 FFF7FEFF 		bl	MX_DMA_Init
 338              	.LVL13:
 110:../Core/Src/main.c ****   MX_ADC1_Init();
 339              		.loc 1 110 3 view .LVU82
 340 0014 FFF7FEFF 		bl	MX_USART3_UART_Init
 341              	.LVL14:
 111:../Core/Src/main.c ****   MX_DAC_Init();
 342              		.loc 1 111 3 view .LVU83
 343 0018 FFF7FEFF 		bl	MX_ADC1_Init
 344              	.LVL15:
 112:../Core/Src/main.c ****   MX_TIM2_Init();
 345              		.loc 1 112 3 view .LVU84
 346 001c FFF7FEFF 		bl	MX_DAC_Init
 347              	.LVL16:
 113:../Core/Src/main.c ****   MX_TIM6_Init();
 348              		.loc 1 113 3 view .LVU85
 349 0020 FFF7FEFF 		bl	MX_TIM2_Init
 350              	.LVL17:
 114:../Core/Src/main.c ****   MX_SPI1_Init();
 351              		.loc 1 114 3 view .LVU86
 352 0024 FFF7FEFF 		bl	MX_TIM6_Init
 353              	.LVL18:
 115:../Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 354              		.loc 1 115 3 view .LVU87
 355 0028 FFF7FEFF 		bl	MX_SPI1_Init
 356              	.LVL19:
 118:../Core/Src/main.c ****   UART_puts("\n\rType '?' for list of available commands\n\r");
 357              		.loc 1 118 3 view .LVU88
 358 002c 0021     		movs	r1, #0
 359 002e 0120     		movs	r0, #1
 360 0030 FFF7FEFF 		bl	ver_cb
 361              	.LVL20:
 119:../Core/Src/main.c ****   UART_puts("Type '? <cmd>' for more info on a given command\n\r");
 362              		.loc 1 119 3 view .LVU89
 363 0034 2E48     		ldr	r0, .L34
 364 0036 FFF7FEFF 		bl	UART_puts
 365              	.LVL21:
 120:../Core/Src/main.c **** 
 366              		.loc 1 120 3 view .LVU90
 367 003a 2E48     		ldr	r0, .L34+4
 368 003c FFF7FEFF 		bl	UART_puts
 369              	.LVL22:
 127:../Core/Src/main.c ****     exec_cmd("WG sin 32");
ARM GAS  /tmp/cc8RiYqH.s 			page 16


 370              		.loc 1 127 5 view .LVU91
 371 0040 2D48     		ldr	r0, .L34+8
 372 0042 FFF7FEFF 		bl	exec_cmd
 373              	.LVL23:
 128:../Core/Src/main.c ****     exec_cmd("SP ms 1");
 374              		.loc 1 128 5 view .LVU92
 375 0046 2D48     		ldr	r0, .L34+12
 376 0048 FFF7FEFF 		bl	exec_cmd
 377              	.LVL24:
 129:../Core/Src/main.c ****     exec_cmd("S");
 378              		.loc 1 129 5 view .LVU93
 379 004c 2C48     		ldr	r0, .L34+16
 380 004e FFF7FEFF 		bl	exec_cmd
 381              	.LVL25:
 130:../Core/Src/main.c ****   }
 382              		.loc 1 130 5 view .LVU94
 383 0052 2C48     		ldr	r0, .L34+20
 384 0054 FFF7FEFF 		bl	exec_cmd
 385              	.LVL26:
 133:../Core/Src/main.c ****   // initialize accelerometer
 386              		.loc 1 133 3 view .LVU95
 133:../Core/Src/main.c ****   // initialize accelerometer
 387              		.loc 1 133 11 is_stmt 0 view .LVU96
 388 0058 02A8     		add	r0, sp, #8
 389 005a 2B4B     		ldr	r3, .L34+24
 390 005c 1860     		str	r0, [r3]
 135:../Core/Src/main.c **** 
 391              		.loc 1 135 3 is_stmt 1 view .LVU97
 392 005e 4FF44863 		mov	r3, #3200
 393 0062 0093     		str	r3, [sp]
 394 0064 0323     		movs	r3, #3
 395 0066 1A46     		mov	r2, r3
 396 0068 0021     		movs	r1, #0
 397 006a FFF7FEFF 		bl	begin
 398              	.LVL27:
 137:../Core/Src/main.c ****   Rx_UART_init(); // set USART3 interrupt
 399              		.loc 1 137 3 view .LVU98
 400 006e 3E20     		movs	r0, #62
 401 0070 FFF7FEFF 		bl	UART_putchar
 402              	.LVL28:
 138:../Core/Src/main.c **** 
 403              		.loc 1 138 3 view .LVU99
 404 0074 FFF7FEFF 		bl	Rx_UART_init
 405              	.LVL29:
 406              	.L27:
 140:../Core/Src/main.c ****   {
 407              		.loc 1 140 3 view .LVU100
 142:../Core/Src/main.c ****     {
 408              		.loc 1 142 5 view .LVU101
 142:../Core/Src/main.c ****     {
 409              		.loc 1 142 8 is_stmt 0 view .LVU102
 410 0078 244B     		ldr	r3, .L34+28
 411 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 142:../Core/Src/main.c ****     {
 412              		.loc 1 142 7 view .LVU103
 413 007c D3B9     		cbnz	r3, .L30
 414              	.L23:
ARM GAS  /tmp/cc8RiYqH.s 			page 17


 152:../Core/Src/main.c ****     {
 415              		.loc 1 152 5 is_stmt 1 view .LVU104
 152:../Core/Src/main.c ****     {
 416              		.loc 1 152 8 is_stmt 0 view .LVU105
 417 007e 244B     		ldr	r3, .L34+32
 418 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 152:../Core/Src/main.c ****     {
 419              		.loc 1 152 7 view .LVU106
 420 0082 13BB     		cbnz	r3, .L31
 421              	.L25:
 163:../Core/Src/main.c ****     {
 422              		.loc 1 163 5 is_stmt 1 view .LVU107
 163:../Core/Src/main.c ****     {
 423              		.loc 1 163 15 is_stmt 0 view .LVU108
 424 0084 204B     		ldr	r3, .L34+24
 425 0086 1968     		ldr	r1, [r3]
 426 0088 91F83B30 		ldrb	r3, [r1, #59]	@ zero_extendqisi2
 163:../Core/Src/main.c ****     {
 427              		.loc 1 163 7 view .LVU109
 428 008c 002B     		cmp	r3, #0
 429 008e F3D0     		beq	.L27
 165:../Core/Src/main.c ****       sprintf(string, "x:0x%X\ty:0x%X\tz:0x%X\n\r", acc_ptr->x, acc_ptr->y, acc_ptr->z);
 430              		.loc 1 165 7 is_stmt 1 view .LVU110
 165:../Core/Src/main.c ****       sprintf(string, "x:0x%X\ty:0x%X\tz:0x%X\n\r", acc_ptr->x, acc_ptr->y, acc_ptr->z);
 431              		.loc 1 165 27 is_stmt 0 view .LVU111
 432 0090 0023     		movs	r3, #0
 433 0092 81F83B30 		strb	r3, [r1, #59]
 166:../Core/Src/main.c ****       UART_puts(string);
 434              		.loc 1 166 7 is_stmt 1 view .LVU112
 166:../Core/Src/main.c ****       UART_puts(string);
 435              		.loc 1 166 60 is_stmt 0 view .LVU113
 436 0096 B1F92820 		ldrsh	r2, [r1, #40]
 166:../Core/Src/main.c ****       UART_puts(string);
 437              		.loc 1 166 72 view .LVU114
 438 009a B1F92A30 		ldrsh	r3, [r1, #42]
 166:../Core/Src/main.c ****       UART_puts(string);
 439              		.loc 1 166 84 view .LVU115
 440 009e B1F92C10 		ldrsh	r1, [r1, #44]
 166:../Core/Src/main.c ****       UART_puts(string);
 441              		.loc 1 166 7 view .LVU116
 442 00a2 0091     		str	r1, [sp]
 443 00a4 1B49     		ldr	r1, .L34+36
 444 00a6 12A8     		add	r0, sp, #72
 445 00a8 FFF7FEFF 		bl	sprintf
 446              	.LVL30:
 167:../Core/Src/main.c ****     }
 447              		.loc 1 167 7 is_stmt 1 view .LVU117
 448 00ac 12A8     		add	r0, sp, #72
 449 00ae FFF7FEFF 		bl	UART_puts
 450              	.LVL31:
 451 00b2 E1E7     		b	.L27
 452              	.L30:
 144:../Core/Src/main.c ****       if(c != (char)(-1))
 453              		.loc 1 144 7 view .LVU118
 144:../Core/Src/main.c ****       if(c != (char)(-1))
 454              		.loc 1 144 11 is_stmt 0 view .LVU119
 455 00b4 FFF7FEFF 		bl	UART_Receive
ARM GAS  /tmp/cc8RiYqH.s 			page 18


 456              	.LVL32:
 145:../Core/Src/main.c ****         // Its not a special character
 457              		.loc 1 145 7 is_stmt 1 view .LVU120
 145:../Core/Src/main.c ****         // Its not a special character
 458              		.loc 1 145 9 is_stmt 0 view .LVU121
 459 00b8 FF28     		cmp	r0, #255
 460 00ba 03D1     		bne	.L32
 461              	.LVL33:
 462              	.L24:
 149:../Core/Src/main.c ****     }
 463              		.loc 1 149 7 is_stmt 1 view .LVU122
 149:../Core/Src/main.c ****     }
 464              		.loc 1 149 15 is_stmt 0 view .LVU123
 465 00bc 134B     		ldr	r3, .L34+28
 466 00be 0022     		movs	r2, #0
 467 00c0 1A70     		strb	r2, [r3]
 468 00c2 DCE7     		b	.L23
 469              	.LVL34:
 470              	.L32:
 147:../Core/Src/main.c **** 
 471              		.loc 1 147 9 is_stmt 1 view .LVU124
 472 00c4 FFF7FEFF 		bl	UART_putchar
 473              	.LVL35:
 147:../Core/Src/main.c **** 
 474              		.loc 1 147 9 is_stmt 0 view .LVU125
 475 00c8 F8E7     		b	.L24
 476              	.L31:
 154:../Core/Src/main.c ****         // No error. Command is valid
 477              		.loc 1 154 7 is_stmt 1 view .LVU126
 154:../Core/Src/main.c ****         // No error. Command is valid
 478              		.loc 1 154 10 is_stmt 0 view .LVU127
 479 00ca 1348     		ldr	r0, .L34+40
 480 00cc FFF7FEFF 		bl	exec_cmd
 481              	.LVL36:
 154:../Core/Src/main.c ****         // No error. Command is valid
 482              		.loc 1 154 9 view .LVU128
 483 00d0 40B1     		cbz	r0, .L33
 484              	.L26:
 158:../Core/Src/main.c ****       cmd_received = 0;
 485              		.loc 1 158 7 is_stmt 1 view .LVU129
 486 00d2 3E20     		movs	r0, #62
 487 00d4 FFF7FEFF 		bl	UART_putchar
 488              	.LVL37:
 159:../Core/Src/main.c ****       Rx_UART_init(); // ready to begin reception
 489              		.loc 1 159 7 view .LVU130
 159:../Core/Src/main.c ****       Rx_UART_init(); // ready to begin reception
 490              		.loc 1 159 20 is_stmt 0 view .LVU131
 491 00d8 0D4B     		ldr	r3, .L34+32
 492 00da 0022     		movs	r2, #0
 493 00dc 1A70     		strb	r2, [r3]
 160:../Core/Src/main.c ****     }
 494              		.loc 1 160 7 is_stmt 1 view .LVU132
 495 00de FFF7FEFF 		bl	Rx_UART_init
 496              	.LVL38:
 497 00e2 CFE7     		b	.L25
 498              	.L33:
 156:../Core/Src/main.c ****       
ARM GAS  /tmp/cc8RiYqH.s 			page 19


 499              		.loc 1 156 9 view .LVU133
 500 00e4 0C49     		ldr	r1, .L34+40
 501 00e6 0D48     		ldr	r0, .L34+44
 502 00e8 FFF7FEFF 		bl	strcpy
 503              	.LVL39:
 504 00ec F1E7     		b	.L26
 505              	.L35:
 506 00ee 00BF     		.align	2
 507              	.L34:
 508 00f0 00000000 		.word	.LC0
 509 00f4 2C000000 		.word	.LC1
 510 00f8 60000000 		.word	.LC2
 511 00fc 68000000 		.word	.LC3
 512 0100 74000000 		.word	.LC4
 513 0104 7C000000 		.word	.LC5
 514 0108 00000000 		.word	.LANCHOR3
 515 010c 00000000 		.word	Rx_flag
 516 0110 00000000 		.word	cmd_received
 517 0114 80000000 		.word	.LC6
 518 0118 00000000 		.word	Rx_Buffer
 519 011c 00000000 		.word	.LANCHOR4
 520              		.cfi_endproc
 521              	.LFE144:
 523              		.global	acc_ptr
 524              		.global	last_valid_cmd
 525              		.section	.bss.acc_ptr,"aw",%nobits
 526              		.align	2
 527              		.set	.LANCHOR3,. + 0
 530              	acc_ptr:
 531 0000 00000000 		.space	4
 532              		.section	.bss.last_valid_cmd,"aw",%nobits
 533              		.align	2
 534              		.set	.LANCHOR4,. + 0
 537              	last_valid_cmd:
 538 0000 00000000 		.space	16
 538      00000000 
 538      00000000 
 538      00000000 
 539              		.section	.bss.x,"aw",%nobits
 540              		.align	1
 541              		.set	.LANCHOR2,. + 0
 544              	x:
 545 0000 0000     		.space	2
 546              		.section	.bss.y,"aw",%nobits
 547              		.align	1
 548              		.set	.LANCHOR1,. + 0
 551              	y:
 552 0000 0000     		.space	2
 553              		.section	.bss.z,"aw",%nobits
 554              		.align	1
 555              		.set	.LANCHOR0,. + 0
 558              	z:
 559 0000 0000     		.space	2
 560              		.text
 561              	.Letext0:
 562              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 563              		.file 4 "../Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
ARM GAS  /tmp/cc8RiYqH.s 			page 20


 564              		.file 5 "../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 565              		.file 6 "../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 566              		.file 7 "../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 567              		.file 8 "../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 568              		.file 9 "../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_spi.h"
 569              		.file 10 "../Core/Inc/spi.h"
 570              		.file 11 "../Core/Inc/main.h"
 571              		.file 12 "../Core/Inc/usart.h"
 572              		.file 13 "../Core/Inc/adxl313.h"
 573              		.file 14 "../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pwr_ex.h"
 574              		.file 15 "../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 575              		.file 16 "../Core/Inc/gpio.h"
 576              		.file 17 "../Core/Inc/dma.h"
 577              		.file 18 "../Core/Inc/adc.h"
 578              		.file 19 "../Core/Inc/dac.h"
 579              		.file 20 "../Core/Inc/tim.h"
 580              		.file 21 "../Core/Inc/interface.h"
 581              		.file 22 "../Core/Inc/commands.h"
 582              		.file 23 "/usr/include/newlib/stdio.h"
 583              		.file 24 "/usr/include/newlib/string.h"
 584              		.file 25 "<built-in>"
ARM GAS  /tmp/cc8RiYqH.s 			page 21


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc8RiYqH.s:17     .text.HAL_GPIO_EXTI_Callback:0000000000000000 $t
     /tmp/cc8RiYqH.s:25     .text.HAL_GPIO_EXTI_Callback:0000000000000000 HAL_GPIO_EXTI_Callback
     /tmp/cc8RiYqH.s:60     .text.HAL_GPIO_EXTI_Callback:000000000000001c $d
     /tmp/cc8RiYqH.s:68     .text.Error_Handler:0000000000000000 $t
     /tmp/cc8RiYqH.s:75     .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cc8RiYqH.s:107    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc8RiYqH.s:114    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc8RiYqH.s:274    .text.SystemClock_Config:00000000000000a4 $d
     /tmp/cc8RiYqH.s:280    .rodata.main.str1.4:0000000000000000 $d
     /tmp/cc8RiYqH.s:304    .text.main:0000000000000000 $t
     /tmp/cc8RiYqH.s:311    .text.main:0000000000000000 main
     /tmp/cc8RiYqH.s:508    .text.main:00000000000000f0 $d
     /tmp/cc8RiYqH.s:530    .bss.acc_ptr:0000000000000000 acc_ptr
     /tmp/cc8RiYqH.s:537    .bss.last_valid_cmd:0000000000000000 last_valid_cmd
     /tmp/cc8RiYqH.s:526    .bss.acc_ptr:0000000000000000 $d
     /tmp/cc8RiYqH.s:533    .bss.last_valid_cmd:0000000000000000 $d
     /tmp/cc8RiYqH.s:540    .bss.x:0000000000000000 $d
     /tmp/cc8RiYqH.s:544    .bss.x:0000000000000000 x
     /tmp/cc8RiYqH.s:547    .bss.y:0000000000000000 $d
     /tmp/cc8RiYqH.s:551    .bss.y:0000000000000000 y
     /tmp/cc8RiYqH.s:554    .bss.z:0000000000000000 $d
     /tmp/cc8RiYqH.s:558    .bss.z:0000000000000000 z

UNDEFINED SYMBOLS
readAccel
memset
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_USART3_UART_Init
MX_ADC1_Init
MX_DAC_Init
MX_TIM2_Init
MX_TIM6_Init
MX_SPI1_Init
ver_cb
UART_puts
exec_cmd
begin
UART_putchar
Rx_UART_init
sprintf
UART_Receive
strcpy
Rx_flag
cmd_received
Rx_Buffer
