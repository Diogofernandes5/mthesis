ARM GAS  /tmp/cclFEDX6.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"adc.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.output,"ax",%progbits
  17              		.align	1
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	output:
  25              	.LVL0:
  26              	.LFB151:
  27              		.file 1 "../Core/Src/adc.c"
   1:../Core/Src/adc.c **** /* USER CODE BEGIN Header */
   2:../Core/Src/adc.c **** /**
   3:../Core/Src/adc.c ****   ******************************************************************************
   4:../Core/Src/adc.c ****   * @file    adc.c
   5:../Core/Src/adc.c ****   * @brief   This file provides code for the configuration
   6:../Core/Src/adc.c ****   *          of the ADC instances.
   7:../Core/Src/adc.c ****   ******************************************************************************
   8:../Core/Src/adc.c ****   * @attention
   9:../Core/Src/adc.c ****   *
  10:../Core/Src/adc.c ****   * Copyright (c) 2023 STMicroelectronics.
  11:../Core/Src/adc.c ****   * All rights reserved.
  12:../Core/Src/adc.c ****   *
  13:../Core/Src/adc.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:../Core/Src/adc.c ****   * in the root directory of this software component.
  15:../Core/Src/adc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:../Core/Src/adc.c ****   *
  17:../Core/Src/adc.c ****   ******************************************************************************
  18:../Core/Src/adc.c ****   */
  19:../Core/Src/adc.c **** /* USER CODE END Header */
  20:../Core/Src/adc.c **** /* Includes ------------------------------------------------------------------*/
  21:../Core/Src/adc.c **** #include "adc.h"
  22:../Core/Src/adc.c **** 
  23:../Core/Src/adc.c **** /* USER CODE BEGIN 0 */
  24:../Core/Src/adc.c **** #include "filters.h"
  25:../Core/Src/adc.c **** #include "usart.h"
  26:../Core/Src/adc.c **** #include "dac.h"
  27:../Core/Src/adc.c **** 
  28:../Core/Src/adc.c **** #include <stdio.h>
  29:../Core/Src/adc.c **** 
  30:../Core/Src/adc.c **** #define ADC_VALUES_LEN 32
  31:../Core/Src/adc.c **** 
ARM GAS  /tmp/cclFEDX6.s 			page 2


  32:../Core/Src/adc.c **** /******************************************************************************
  33:../Core/Src/adc.c **** Global Variables
  34:../Core/Src/adc.c **** ******************************************************************************/
  35:../Core/Src/adc.c **** 
  36:../Core/Src/adc.c **** const uint32_t ADC_Channels [] = {ADC_CHANNEL_0, ADC_CHANNEL_1, ADC_CHANNEL_2, ADC_CHANNEL_3, ADC_C
  37:../Core/Src/adc.c **** 														ADC_CHANNEL_5, ADC_CHANNEL_6, ADC_CHANNEL_7, ADC_CHANNEL_8, ADC_CHANNEL_9,
  38:../Core/Src/adc.c **** 														ADC_CHANNEL_10, ADC_CHANNEL_11, ADC_CHANNEL_12, ADC_CHANNEL_13, ADC_CHANNEL_14, ADC_C
  39:../Core/Src/adc.c **** 
  40:../Core/Src/adc.c **** volatile uint32_t adcValue;
  41:../Core/Src/adc.c **** volatile uint8_t adcFlag = 0;
  42:../Core/Src/adc.c **** 
  43:../Core/Src/adc.c **** uint32_t pin_mode; 
  44:../Core/Src/adc.c **** uint8_t port;
  45:../Core/Src/adc.c **** uint8_t pin;
  46:../Core/Src/adc.c **** 														
  47:../Core/Src/adc.c **** uint32_t ADC_Values[ADC_VALUES_LEN]; // ADC Values buffer
  48:../Core/Src/adc.c **** volatile uint8_t ADC_Val_index = 0;
  49:../Core/Src/adc.c **** volatile uint16_t ADC_smp_num = 1; 					 // Sample number
  50:../Core/Src/adc.c **** 														
  51:../Core/Src/adc.c **** volatile uint8_t smps_left;					 // Number of samples left
  52:../Core/Src/adc.c **** extern filter_t f;
  53:../Core/Src/adc.c **** 
  54:../Core/Src/adc.c **** /******************************************************************************
  55:../Core/Src/adc.c **** Function Prototypes
  56:../Core/Src/adc.c **** ******************************************************************************/
  57:../Core/Src/adc.c **** 														
  58:../Core/Src/adc.c **** static void output(uint32_t value);														
  59:../Core/Src/adc.c **** 
  60:../Core/Src/adc.c **** /* USER CODE END 0 */
  61:../Core/Src/adc.c **** 
  62:../Core/Src/adc.c **** ADC_HandleTypeDef hadc1;
  63:../Core/Src/adc.c **** 
  64:../Core/Src/adc.c **** /* ADC1 init function */
  65:../Core/Src/adc.c **** void MX_ADC1_Init(void)
  66:../Core/Src/adc.c **** {
  67:../Core/Src/adc.c **** 
  68:../Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_Init 0 */
  69:../Core/Src/adc.c **** 
  70:../Core/Src/adc.c ****   /* USER CODE END ADC1_Init 0 */
  71:../Core/Src/adc.c **** 
  72:../Core/Src/adc.c ****   ADC_ChannelConfTypeDef sConfig = {0};
  73:../Core/Src/adc.c **** 
  74:../Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_Init 1 */
  75:../Core/Src/adc.c **** 
  76:../Core/Src/adc.c ****   /* USER CODE END ADC1_Init 1 */
  77:../Core/Src/adc.c **** 
  78:../Core/Src/adc.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
  79:../Core/Src/adc.c ****   */
  80:../Core/Src/adc.c ****   hadc1.Instance = ADC1;
  81:../Core/Src/adc.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
  82:../Core/Src/adc.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
  83:../Core/Src/adc.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
  84:../Core/Src/adc.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
  85:../Core/Src/adc.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
  86:../Core/Src/adc.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
  87:../Core/Src/adc.c ****   hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T6_TRGO;
  88:../Core/Src/adc.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
ARM GAS  /tmp/cclFEDX6.s 			page 3


  89:../Core/Src/adc.c ****   hadc1.Init.NbrOfConversion = 1;
  90:../Core/Src/adc.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
  91:../Core/Src/adc.c ****   hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
  92:../Core/Src/adc.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
  93:../Core/Src/adc.c ****   {
  94:../Core/Src/adc.c ****     Error_Handler();
  95:../Core/Src/adc.c ****   }
  96:../Core/Src/adc.c **** 
  97:../Core/Src/adc.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
  98:../Core/Src/adc.c ****   */
  99:../Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_0;
 100:../Core/Src/adc.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 101:../Core/Src/adc.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 102:../Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 103:../Core/Src/adc.c ****   {
 104:../Core/Src/adc.c ****     Error_Handler();
 105:../Core/Src/adc.c ****   }
 106:../Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 107:../Core/Src/adc.c **** 
 108:../Core/Src/adc.c ****   /* USER CODE END ADC1_Init 2 */
 109:../Core/Src/adc.c **** 
 110:../Core/Src/adc.c **** }
 111:../Core/Src/adc.c **** 
 112:../Core/Src/adc.c **** void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
 113:../Core/Src/adc.c **** {
 114:../Core/Src/adc.c **** 
 115:../Core/Src/adc.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 116:../Core/Src/adc.c ****   if(adcHandle->Instance==ADC1)
 117:../Core/Src/adc.c ****   {
 118:../Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspInit 0 */
 119:../Core/Src/adc.c **** 
 120:../Core/Src/adc.c ****   /* USER CODE END ADC1_MspInit 0 */
 121:../Core/Src/adc.c ****     /* ADC1 clock enable */
 122:../Core/Src/adc.c ****     __HAL_RCC_ADC1_CLK_ENABLE();
 123:../Core/Src/adc.c **** 
 124:../Core/Src/adc.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 125:../Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 126:../Core/Src/adc.c ****     PA0/WKUP     ------> ADC1_IN0
 127:../Core/Src/adc.c ****     */
 128:../Core/Src/adc.c ****     GPIO_InitStruct.Pin = GPIO_PIN_0;
 129:../Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 130:../Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 131:../Core/Src/adc.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 132:../Core/Src/adc.c **** 
 133:../Core/Src/adc.c ****     /* ADC1 interrupt Init */
 134:../Core/Src/adc.c ****     HAL_NVIC_SetPriority(ADC_IRQn, 0, 0);
 135:../Core/Src/adc.c ****     HAL_NVIC_EnableIRQ(ADC_IRQn);
 136:../Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 137:../Core/Src/adc.c **** 	
 138:../Core/Src/adc.c **** 		__HAL_RCC_GPIOB_CLK_ENABLE();
 139:../Core/Src/adc.c **** 		__HAL_RCC_GPIOC_CLK_ENABLE();
 140:../Core/Src/adc.c **** 		
 141:../Core/Src/adc.c ****   /* USER CODE END ADC1_MspInit 1 */
 142:../Core/Src/adc.c ****   }
 143:../Core/Src/adc.c **** }
 144:../Core/Src/adc.c **** 
 145:../Core/Src/adc.c **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)
ARM GAS  /tmp/cclFEDX6.s 			page 4


 146:../Core/Src/adc.c **** {
 147:../Core/Src/adc.c **** 
 148:../Core/Src/adc.c ****   if(adcHandle->Instance==ADC1)
 149:../Core/Src/adc.c ****   {
 150:../Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 151:../Core/Src/adc.c **** 
 152:../Core/Src/adc.c ****   /* USER CODE END ADC1_MspDeInit 0 */
 153:../Core/Src/adc.c ****     /* Peripheral clock disable */
 154:../Core/Src/adc.c ****     __HAL_RCC_ADC1_CLK_DISABLE();
 155:../Core/Src/adc.c **** 
 156:../Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 157:../Core/Src/adc.c ****     PA0/WKUP     ------> ADC1_IN0
 158:../Core/Src/adc.c ****     */
 159:../Core/Src/adc.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 160:../Core/Src/adc.c **** 
 161:../Core/Src/adc.c ****     /* ADC1 interrupt Deinit */
 162:../Core/Src/adc.c ****     HAL_NVIC_DisableIRQ(ADC_IRQn);
 163:../Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 164:../Core/Src/adc.c **** 
 165:../Core/Src/adc.c ****   /* USER CODE END ADC1_MspDeInit 1 */
 166:../Core/Src/adc.c ****   }
 167:../Core/Src/adc.c **** }
 168:../Core/Src/adc.c **** 
 169:../Core/Src/adc.c **** /* USER CODE BEGIN 1 */
 170:../Core/Src/adc.c **** 
 171:../Core/Src/adc.c **** char ADC_Config_Channel(ADC_HandleTypeDef* hadc, uint8_t addr)
 172:../Core/Src/adc.c **** {
 173:../Core/Src/adc.c **** 	ADC_ChannelConfTypeDef channel_config = {0};
 174:../Core/Src/adc.c **** 
 175:../Core/Src/adc.c **** 	/**** ADC1 CHANNELS ****/
 176:../Core/Src/adc.c **** 	// IN0  - IN7  in pins PA0 - PA7
 177:../Core/Src/adc.c **** 	// IN8  - IN9  in pins PB0 - PB1
 178:../Core/Src/adc.c **** 	// IN10 - IN15 in pins PC0 - PC5
 179:../Core/Src/adc.c **** 	pin = addr;
 180:../Core/Src/adc.c **** 	port = 2; // GPIO Port C
 181:../Core/Src/adc.c **** 	
 182:../Core/Src/adc.c **** 	if(addr < 8) 				// Channels IN0 - IN7
 183:../Core/Src/adc.c **** 		port = 0;		 			// GPIO Port A
 184:../Core/Src/adc.c **** 	else if(addr < 10)  // Channels IN8 - IN9
 185:../Core/Src/adc.c **** 	{
 186:../Core/Src/adc.c **** 		port = 1;					// GPIO Port B
 187:../Core/Src/adc.c **** 		pin -= 8;					// Pins 0 - 1
 188:../Core/Src/adc.c **** 	}
 189:../Core/Src/adc.c **** 	else								// Channels IN10 - IN15
 190:../Core/Src/adc.c **** 		pin -= 10;				// Pins 0 - 5
 191:../Core/Src/adc.c **** 	
 192:../Core/Src/adc.c **** 	pin_mode = GPIO_PIN_MODE(port, pin); // Save pin mode
 193:../Core/Src/adc.c **** 	if((pin_mode != GPIO_MODE_INPUT) && (pin_mode != GPIO_MODE_ANALOG)) // PinMode as output push-pull
 194:../Core/Src/adc.c **** 		return (char)(-1);
 195:../Core/Src/adc.c **** 	
 196:../Core/Src/adc.c **** 	GPIO_config_pins(port, (1<<pin), GPIO_MODE_ANALOG);
 197:../Core/Src/adc.c **** 	
 198:../Core/Src/adc.c **** 	channel_config.Channel = ADC_Channels[addr];
 199:../Core/Src/adc.c **** 	channel_config.Rank = ADC_REGULAR_RANK_1;
 200:../Core/Src/adc.c ****   channel_config.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 201:../Core/Src/adc.c **** 	
 202:../Core/Src/adc.c **** 	HAL_ADC_ConfigChannel(hadc, &channel_config);
ARM GAS  /tmp/cclFEDX6.s 			page 5


 203:../Core/Src/adc.c **** 	
 204:../Core/Src/adc.c **** 	return 0;
 205:../Core/Src/adc.c **** }
 206:../Core/Src/adc.c **** 
 207:../Core/Src/adc.c **** void ADC_DeConfig_Channel(ADC_HandleTypeDef* hadc, uint8_t addr)
 208:../Core/Src/adc.c **** {
 209:../Core/Src/adc.c **** 		GPIO_config_pins(port, (1<<pin), pin_mode);
 210:../Core/Src/adc.c **** }
 211:../Core/Src/adc.c **** 
 212:../Core/Src/adc.c **** uint32_t ADC_Polling_Conv(ADC_HandleTypeDef* hadc)
 213:../Core/Src/adc.c **** {
 214:../Core/Src/adc.c **** 	uint32_t dig_val = 0;
 215:../Core/Src/adc.c **** 	
 216:../Core/Src/adc.c **** //	HAL_ADC_Start_IT(hadc);		// iniciar uma convers�o
 217:../Core/Src/adc.c **** //	while(adcFlag == 0)
 218:../Core/Src/adc.c **** //		;
 219:../Core/Src/adc.c **** //	adcFlag = 0;
 220:../Core/Src/adc.c **** //	HAL_ADC_Stop_IT(hadc);
 221:../Core/Src/adc.c **** 
 222:../Core/Src/adc.c **** //	HAL_ADC_Start(hadc);
 223:../Core/Src/adc.c **** //	while(hadc->State == HAL_BUSY)
 224:../Core/Src/adc.c **** //		;
 225:../Core/Src/adc.c **** //	dig_val = HAL_ADC_GetValue(hadc);
 226:../Core/Src/adc.c **** //	HAL_ADC_Stop(hadc);
 227:../Core/Src/adc.c **** 	
 228:../Core/Src/adc.c **** 	return dig_val;
 229:../Core/Src/adc.c **** }
 230:../Core/Src/adc.c **** 
 231:../Core/Src/adc.c **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
 232:../Core/Src/adc.c **** {
 233:../Core/Src/adc.c **** 	static float y;
 234:../Core/Src/adc.c **** 	
 235:../Core/Src/adc.c **** //	HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, (GPIO_PinState) 1);
 236:../Core/Src/adc.c **** 	
 237:../Core/Src/adc.c **** 	HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_0); //#debug
 238:../Core/Src/adc.c **** 	if(hadc->Instance == ADC1)
 239:../Core/Src/adc.c **** 	{
 240:../Core/Src/adc.c **** 		adcValue = HAL_ADC_GetValue(&hadc1);
 241:../Core/Src/adc.c **** 		smps_left--;
 242:../Core/Src/adc.c **** 
 243:../Core/Src/adc.c **** 		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, (GPIO_PinState) 1);
 244:../Core/Src/adc.c **** 		// apply selected filter
 245:../Core/Src/adc.c **** 		y = filter_calc(&f, adcValue);
 246:../Core/Src/adc.c **** 		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, (GPIO_PinState) 0);
 247:../Core/Src/adc.c **** 
 248:../Core/Src/adc.c **** 		if(y == -1) // is filter disabled?
 249:../Core/Src/adc.c **** 			// Add new value to buffer
 250:../Core/Src/adc.c **** 			output(adcValue);
 251:../Core/Src/adc.c **** 		else
 252:../Core/Src/adc.c **** 		{
 253:../Core/Src/adc.c **** 				if(y > 4095)  // larger than max digital DAC value?
 254:../Core/Src/adc.c **** 					// send max value
 255:../Core/Src/adc.c **** 					y = 4095;
 256:../Core/Src/adc.c **** 			
 257:../Core/Src/adc.c **** 			// Add filtered value to buffer
 258:../Core/Src/adc.c **** 			output(y);
 259:../Core/Src/adc.c **** 		}
ARM GAS  /tmp/cclFEDX6.s 			page 6


 260:../Core/Src/adc.c **** 		
 261:../Core/Src/adc.c **** //		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, (GPIO_PinState) 0);
 262:../Core/Src/adc.c **** 		//adcFlag = 1;
 263:../Core/Src/adc.c **** 	}
 264:../Core/Src/adc.c **** }
 265:../Core/Src/adc.c **** 
 266:../Core/Src/adc.c **** static void output(uint32_t value)
 267:../Core/Src/adc.c **** {
  28              		.loc 1 267 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 267 1 is_stmt 0 view .LVU1
  33 0000 10B5     		push	{r4, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
  38 0002 0446     		mov	r4, r0
 268:../Core/Src/adc.c **** //	char str[16];
 269:../Core/Src/adc.c **** 	ADC_Values[ADC_Val_index & (ADC_VALUES_LEN - 1)] = value;
  39              		.loc 1 269 2 is_stmt 1 view .LVU2
  40              		.loc 1 269 27 is_stmt 0 view .LVU3
  41 0004 134B     		ldr	r3, .L7
  42 0006 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  43 0008 02F01F02 		and	r2, r2, #31
  44              		.loc 1 269 51 view .LVU4
  45 000c 1249     		ldr	r1, .L7+4
  46 000e 41F82200 		str	r0, [r1, r2, lsl #2]
 270:../Core/Src/adc.c **** 	ADC_Val_index++;
  47              		.loc 1 270 2 is_stmt 1 view .LVU5
  48              		.loc 1 270 15 is_stmt 0 view .LVU6
  49 0012 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  50 0014 0132     		adds	r2, r2, #1
  51 0016 D2B2     		uxtb	r2, r2
  52 0018 1A70     		strb	r2, [r3]
 271:../Core/Src/adc.c **** 	
 272:../Core/Src/adc.c **** //	sprintf(str, "n%d v%d\n\r", ADC_smp_num, value);
 273:../Core/Src/adc.c **** //	UART_puts(str);
 274:../Core/Src/adc.c **** 
 275:../Core/Src/adc.c **** 	ADC_smp_num++;
  53              		.loc 1 275 2 is_stmt 1 view .LVU7
  54              		.loc 1 275 13 is_stmt 0 view .LVU8
  55 001a 104B     		ldr	r3, .L7+8
  56 001c 1A88     		ldrh	r2, [r3]
  57 001e 92B2     		uxth	r2, r2
  58 0020 0132     		adds	r2, r2, #1
  59 0022 92B2     		uxth	r2, r2
  60 0024 1A80     		strh	r2, [r3]	@ movhi
 276:../Core/Src/adc.c **** 
 277:../Core/Src/adc.c **** 	// Send to DAC
 278:../Core/Src/adc.c **** 	// DAC ready to send?
 279:../Core/Src/adc.c **** 	if(HAL_DAC_GetState(&hdac) != HAL_DAC_STATE_READY)
  61              		.loc 1 279 2 is_stmt 1 view .LVU9
  62              		.loc 1 279 5 is_stmt 0 view .LVU10
  63 0026 0E48     		ldr	r0, .L7+12
  64              	.LVL1:
ARM GAS  /tmp/cclFEDX6.s 			page 7


  65              		.loc 1 279 5 view .LVU11
  66 0028 FFF7FEFF 		bl	HAL_DAC_GetState
  67              	.LVL2:
  68              		.loc 1 279 4 view .LVU12
  69 002c 0128     		cmp	r0, #1
  70 002e 05D1     		bne	.L5
  71              	.L2:
 280:../Core/Src/adc.c **** 		HAL_DAC_Stop(&hdac,DAC1_CHANNEL_1);
 281:../Core/Src/adc.c **** 	// Start DAC and send value
 282:../Core/Src/adc.c **** 	if(HAL_DAC_Start(&hdac,DAC1_CHANNEL_1) == HAL_OK)
  72              		.loc 1 282 2 is_stmt 1 view .LVU13
  73              		.loc 1 282 5 is_stmt 0 view .LVU14
  74 0030 0021     		movs	r1, #0
  75 0032 0B48     		ldr	r0, .L7+12
  76 0034 FFF7FEFF 		bl	HAL_DAC_Start
  77              	.LVL3:
  78              		.loc 1 282 4 view .LVU15
  79 0038 28B1     		cbz	r0, .L6
  80              	.L1:
 283:../Core/Src/adc.c **** 		HAL_DAC_SetValue(&hdac, DAC1_CHANNEL_1, DAC_ALIGN_12B_R, value);
 284:../Core/Src/adc.c **** 
 285:../Core/Src/adc.c **** }
  81              		.loc 1 285 1 view .LVU16
  82 003a 10BD     		pop	{r4, pc}
  83              	.LVL4:
  84              	.L5:
 280:../Core/Src/adc.c **** 		HAL_DAC_Stop(&hdac,DAC1_CHANNEL_1);
  85              		.loc 1 280 3 is_stmt 1 view .LVU17
  86 003c 0021     		movs	r1, #0
  87 003e 0848     		ldr	r0, .L7+12
  88 0040 FFF7FEFF 		bl	HAL_DAC_Stop
  89              	.LVL5:
  90 0044 F4E7     		b	.L2
  91              	.L6:
 283:../Core/Src/adc.c **** 		HAL_DAC_SetValue(&hdac, DAC1_CHANNEL_1, DAC_ALIGN_12B_R, value);
  92              		.loc 1 283 3 view .LVU18
  93 0046 2346     		mov	r3, r4
  94 0048 0022     		movs	r2, #0
  95 004a 1146     		mov	r1, r2
  96 004c 0448     		ldr	r0, .L7+12
  97 004e FFF7FEFF 		bl	HAL_DAC_SetValue
  98              	.LVL6:
  99              		.loc 1 285 1 is_stmt 0 view .LVU19
 100 0052 F2E7     		b	.L1
 101              	.L8:
 102              		.align	2
 103              	.L7:
 104 0054 00000000 		.word	.LANCHOR0
 105 0058 00000000 		.word	.LANCHOR1
 106 005c 00000000 		.word	.LANCHOR2
 107 0060 00000000 		.word	hdac
 108              		.cfi_endproc
 109              	.LFE151:
 111              		.section	.text.MX_ADC1_Init,"ax",%progbits
 112              		.align	1
 113              		.global	MX_ADC1_Init
 114              		.syntax unified
ARM GAS  /tmp/cclFEDX6.s 			page 8


 115              		.thumb
 116              		.thumb_func
 117              		.fpu fpv5-d16
 119              	MX_ADC1_Init:
 120              	.LFB144:
  66:../Core/Src/adc.c **** 
 121              		.loc 1 66 1 is_stmt 1 view -0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 16
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125 0000 00B5     		push	{lr}
 126              	.LCFI1:
 127              		.cfi_def_cfa_offset 4
 128              		.cfi_offset 14, -4
 129 0002 85B0     		sub	sp, sp, #20
 130              	.LCFI2:
 131              		.cfi_def_cfa_offset 24
  72:../Core/Src/adc.c **** 
 132              		.loc 1 72 3 view .LVU21
  72:../Core/Src/adc.c **** 
 133              		.loc 1 72 26 is_stmt 0 view .LVU22
 134 0004 0023     		movs	r3, #0
 135 0006 0093     		str	r3, [sp]
 136 0008 0193     		str	r3, [sp, #4]
 137 000a 0293     		str	r3, [sp, #8]
 138 000c 0393     		str	r3, [sp, #12]
  80:../Core/Src/adc.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 139              		.loc 1 80 3 is_stmt 1 view .LVU23
  80:../Core/Src/adc.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 140              		.loc 1 80 18 is_stmt 0 view .LVU24
 141 000e 1648     		ldr	r0, .L15
 142 0010 164A     		ldr	r2, .L15+4
 143 0012 0260     		str	r2, [r0]
  81:../Core/Src/adc.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 144              		.loc 1 81 3 is_stmt 1 view .LVU25
  81:../Core/Src/adc.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 145              		.loc 1 81 29 is_stmt 0 view .LVU26
 146 0014 4FF48032 		mov	r2, #65536
 147 0018 4260     		str	r2, [r0, #4]
  82:../Core/Src/adc.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 148              		.loc 1 82 3 is_stmt 1 view .LVU27
  82:../Core/Src/adc.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 149              		.loc 1 82 25 is_stmt 0 view .LVU28
 150 001a 8360     		str	r3, [r0, #8]
  83:../Core/Src/adc.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 151              		.loc 1 83 3 is_stmt 1 view .LVU29
  83:../Core/Src/adc.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 152              		.loc 1 83 27 is_stmt 0 view .LVU30
 153 001c 0361     		str	r3, [r0, #16]
  84:../Core/Src/adc.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 154              		.loc 1 84 3 is_stmt 1 view .LVU31
  84:../Core/Src/adc.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 155              		.loc 1 84 33 is_stmt 0 view .LVU32
 156 001e 8361     		str	r3, [r0, #24]
  85:../Core/Src/adc.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
 157              		.loc 1 85 3 is_stmt 1 view .LVU33
  85:../Core/Src/adc.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
ARM GAS  /tmp/cclFEDX6.s 			page 9


 158              		.loc 1 85 36 is_stmt 0 view .LVU34
 159 0020 80F82030 		strb	r3, [r0, #32]
  86:../Core/Src/adc.c ****   hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T6_TRGO;
 160              		.loc 1 86 3 is_stmt 1 view .LVU35
  86:../Core/Src/adc.c ****   hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T6_TRGO;
 161              		.loc 1 86 35 is_stmt 0 view .LVU36
 162 0024 4FF08052 		mov	r2, #268435456
 163 0028 C262     		str	r2, [r0, #44]
  87:../Core/Src/adc.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 164              		.loc 1 87 3 is_stmt 1 view .LVU37
  87:../Core/Src/adc.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 165              		.loc 1 87 31 is_stmt 0 view .LVU38
 166 002a 4FF05062 		mov	r2, #218103808
 167 002e 8262     		str	r2, [r0, #40]
  88:../Core/Src/adc.c ****   hadc1.Init.NbrOfConversion = 1;
 168              		.loc 1 88 3 is_stmt 1 view .LVU39
  88:../Core/Src/adc.c ****   hadc1.Init.NbrOfConversion = 1;
 169              		.loc 1 88 24 is_stmt 0 view .LVU40
 170 0030 C360     		str	r3, [r0, #12]
  89:../Core/Src/adc.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 171              		.loc 1 89 3 is_stmt 1 view .LVU41
  89:../Core/Src/adc.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 172              		.loc 1 89 30 is_stmt 0 view .LVU42
 173 0032 0122     		movs	r2, #1
 174 0034 C261     		str	r2, [r0, #28]
  90:../Core/Src/adc.c ****   hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 175              		.loc 1 90 3 is_stmt 1 view .LVU43
  90:../Core/Src/adc.c ****   hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 176              		.loc 1 90 36 is_stmt 0 view .LVU44
 177 0036 80F83030 		strb	r3, [r0, #48]
  91:../Core/Src/adc.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 178              		.loc 1 91 3 is_stmt 1 view .LVU45
  91:../Core/Src/adc.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 179              		.loc 1 91 27 is_stmt 0 view .LVU46
 180 003a 4361     		str	r3, [r0, #20]
  92:../Core/Src/adc.c ****   {
 181              		.loc 1 92 3 is_stmt 1 view .LVU47
  92:../Core/Src/adc.c ****   {
 182              		.loc 1 92 7 is_stmt 0 view .LVU48
 183 003c FFF7FEFF 		bl	HAL_ADC_Init
 184              	.LVL7:
  92:../Core/Src/adc.c ****   {
 185              		.loc 1 92 6 view .LVU49
 186 0040 60B9     		cbnz	r0, .L13
 187              	.L10:
  99:../Core/Src/adc.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 188              		.loc 1 99 3 is_stmt 1 view .LVU50
  99:../Core/Src/adc.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 189              		.loc 1 99 19 is_stmt 0 view .LVU51
 190 0042 0023     		movs	r3, #0
 191 0044 0093     		str	r3, [sp]
 100:../Core/Src/adc.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 192              		.loc 1 100 3 is_stmt 1 view .LVU52
 100:../Core/Src/adc.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 193              		.loc 1 100 16 is_stmt 0 view .LVU53
 194 0046 0122     		movs	r2, #1
 195 0048 0192     		str	r2, [sp, #4]
ARM GAS  /tmp/cclFEDX6.s 			page 10


 101:../Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 196              		.loc 1 101 3 is_stmt 1 view .LVU54
 101:../Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 197              		.loc 1 101 24 is_stmt 0 view .LVU55
 198 004a 0293     		str	r3, [sp, #8]
 102:../Core/Src/adc.c ****   {
 199              		.loc 1 102 3 is_stmt 1 view .LVU56
 102:../Core/Src/adc.c ****   {
 200              		.loc 1 102 7 is_stmt 0 view .LVU57
 201 004c 6946     		mov	r1, sp
 202 004e 0648     		ldr	r0, .L15
 203 0050 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 204              	.LVL8:
 102:../Core/Src/adc.c ****   {
 205              		.loc 1 102 6 view .LVU58
 206 0054 28B9     		cbnz	r0, .L14
 207              	.L9:
 110:../Core/Src/adc.c **** 
 208              		.loc 1 110 1 view .LVU59
 209 0056 05B0     		add	sp, sp, #20
 210              	.LCFI3:
 211              		.cfi_remember_state
 212              		.cfi_def_cfa_offset 4
 213              		@ sp needed
 214 0058 5DF804FB 		ldr	pc, [sp], #4
 215              	.L13:
 216              	.LCFI4:
 217              		.cfi_restore_state
  94:../Core/Src/adc.c ****   }
 218              		.loc 1 94 5 is_stmt 1 view .LVU60
 219 005c FFF7FEFF 		bl	Error_Handler
 220              	.LVL9:
 221 0060 EFE7     		b	.L10
 222              	.L14:
 104:../Core/Src/adc.c ****   }
 223              		.loc 1 104 5 view .LVU61
 224 0062 FFF7FEFF 		bl	Error_Handler
 225              	.LVL10:
 110:../Core/Src/adc.c **** 
 226              		.loc 1 110 1 is_stmt 0 view .LVU62
 227 0066 F6E7     		b	.L9
 228              	.L16:
 229              		.align	2
 230              	.L15:
 231 0068 00000000 		.word	.LANCHOR3
 232 006c 00200140 		.word	1073815552
 233              		.cfi_endproc
 234              	.LFE144:
 236              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 237              		.align	1
 238              		.global	HAL_ADC_MspInit
 239              		.syntax unified
 240              		.thumb
 241              		.thumb_func
 242              		.fpu fpv5-d16
 244              	HAL_ADC_MspInit:
 245              	.LVL11:
ARM GAS  /tmp/cclFEDX6.s 			page 11


 246              	.LFB145:
 113:../Core/Src/adc.c **** 
 247              		.loc 1 113 1 is_stmt 1 view -0
 248              		.cfi_startproc
 249              		@ args = 0, pretend = 0, frame = 40
 250              		@ frame_needed = 0, uses_anonymous_args = 0
 113:../Core/Src/adc.c **** 
 251              		.loc 1 113 1 is_stmt 0 view .LVU64
 252 0000 10B5     		push	{r4, lr}
 253              	.LCFI5:
 254              		.cfi_def_cfa_offset 8
 255              		.cfi_offset 4, -8
 256              		.cfi_offset 14, -4
 257 0002 8AB0     		sub	sp, sp, #40
 258              	.LCFI6:
 259              		.cfi_def_cfa_offset 48
 115:../Core/Src/adc.c ****   if(adcHandle->Instance==ADC1)
 260              		.loc 1 115 3 is_stmt 1 view .LVU65
 115:../Core/Src/adc.c ****   if(adcHandle->Instance==ADC1)
 261              		.loc 1 115 20 is_stmt 0 view .LVU66
 262 0004 0023     		movs	r3, #0
 263 0006 0593     		str	r3, [sp, #20]
 264 0008 0693     		str	r3, [sp, #24]
 265 000a 0793     		str	r3, [sp, #28]
 266 000c 0893     		str	r3, [sp, #32]
 267 000e 0993     		str	r3, [sp, #36]
 116:../Core/Src/adc.c ****   {
 268              		.loc 1 116 3 is_stmt 1 view .LVU67
 116:../Core/Src/adc.c ****   {
 269              		.loc 1 116 15 is_stmt 0 view .LVU68
 270 0010 0268     		ldr	r2, [r0]
 116:../Core/Src/adc.c ****   {
 271              		.loc 1 116 5 view .LVU69
 272 0012 03F18043 		add	r3, r3, #1073741824
 273 0016 03F59033 		add	r3, r3, #73728
 274 001a 9A42     		cmp	r2, r3
 275 001c 01D0     		beq	.L20
 276              	.LVL12:
 277              	.L17:
 143:../Core/Src/adc.c **** 
 278              		.loc 1 143 1 view .LVU70
 279 001e 0AB0     		add	sp, sp, #40
 280              	.LCFI7:
 281              		.cfi_remember_state
 282              		.cfi_def_cfa_offset 8
 283              		@ sp needed
 284 0020 10BD     		pop	{r4, pc}
 285              	.LVL13:
 286              	.L20:
 287              	.LCFI8:
 288              		.cfi_restore_state
 122:../Core/Src/adc.c **** 
 289              		.loc 1 122 5 is_stmt 1 view .LVU71
 290              	.LBB2:
 122:../Core/Src/adc.c **** 
 291              		.loc 1 122 5 view .LVU72
 122:../Core/Src/adc.c **** 
ARM GAS  /tmp/cclFEDX6.s 			page 12


 292              		.loc 1 122 5 view .LVU73
 293 0022 1B4C     		ldr	r4, .L21
 294 0024 636C     		ldr	r3, [r4, #68]
 295 0026 43F48073 		orr	r3, r3, #256
 296 002a 6364     		str	r3, [r4, #68]
 122:../Core/Src/adc.c **** 
 297              		.loc 1 122 5 view .LVU74
 298 002c 636C     		ldr	r3, [r4, #68]
 299 002e 03F48073 		and	r3, r3, #256
 300 0032 0193     		str	r3, [sp, #4]
 122:../Core/Src/adc.c **** 
 301              		.loc 1 122 5 view .LVU75
 302 0034 019B     		ldr	r3, [sp, #4]
 303              	.LBE2:
 122:../Core/Src/adc.c **** 
 304              		.loc 1 122 5 view .LVU76
 124:../Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 305              		.loc 1 124 5 view .LVU77
 306              	.LBB3:
 124:../Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 307              		.loc 1 124 5 view .LVU78
 124:../Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 308              		.loc 1 124 5 view .LVU79
 309 0036 236B     		ldr	r3, [r4, #48]
 310 0038 43F00103 		orr	r3, r3, #1
 311 003c 2363     		str	r3, [r4, #48]
 124:../Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 312              		.loc 1 124 5 view .LVU80
 313 003e 236B     		ldr	r3, [r4, #48]
 314 0040 03F00103 		and	r3, r3, #1
 315 0044 0293     		str	r3, [sp, #8]
 124:../Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 316              		.loc 1 124 5 view .LVU81
 317 0046 029B     		ldr	r3, [sp, #8]
 318              	.LBE3:
 124:../Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 319              		.loc 1 124 5 view .LVU82
 128:../Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 320              		.loc 1 128 5 view .LVU83
 128:../Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 321              		.loc 1 128 25 is_stmt 0 view .LVU84
 322 0048 0123     		movs	r3, #1
 323 004a 0593     		str	r3, [sp, #20]
 129:../Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 324              		.loc 1 129 5 is_stmt 1 view .LVU85
 129:../Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 325              		.loc 1 129 26 is_stmt 0 view .LVU86
 326 004c 0323     		movs	r3, #3
 327 004e 0693     		str	r3, [sp, #24]
 130:../Core/Src/adc.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 328              		.loc 1 130 5 is_stmt 1 view .LVU87
 131:../Core/Src/adc.c **** 
 329              		.loc 1 131 5 view .LVU88
 330 0050 05A9     		add	r1, sp, #20
 331 0052 1048     		ldr	r0, .L21+4
 332              	.LVL14:
 131:../Core/Src/adc.c **** 
ARM GAS  /tmp/cclFEDX6.s 			page 13


 333              		.loc 1 131 5 is_stmt 0 view .LVU89
 334 0054 FFF7FEFF 		bl	HAL_GPIO_Init
 335              	.LVL15:
 134:../Core/Src/adc.c ****     HAL_NVIC_EnableIRQ(ADC_IRQn);
 336              		.loc 1 134 5 is_stmt 1 view .LVU90
 337 0058 0022     		movs	r2, #0
 338 005a 1146     		mov	r1, r2
 339 005c 1220     		movs	r0, #18
 340 005e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 341              	.LVL16:
 135:../Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 342              		.loc 1 135 5 view .LVU91
 343 0062 1220     		movs	r0, #18
 344 0064 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 345              	.LVL17:
 138:../Core/Src/adc.c **** 		__HAL_RCC_GPIOC_CLK_ENABLE();
 346              		.loc 1 138 3 view .LVU92
 347              	.LBB4:
 138:../Core/Src/adc.c **** 		__HAL_RCC_GPIOC_CLK_ENABLE();
 348              		.loc 1 138 3 view .LVU93
 138:../Core/Src/adc.c **** 		__HAL_RCC_GPIOC_CLK_ENABLE();
 349              		.loc 1 138 3 view .LVU94
 350 0068 236B     		ldr	r3, [r4, #48]
 351 006a 43F00203 		orr	r3, r3, #2
 352 006e 2363     		str	r3, [r4, #48]
 138:../Core/Src/adc.c **** 		__HAL_RCC_GPIOC_CLK_ENABLE();
 353              		.loc 1 138 3 view .LVU95
 354 0070 236B     		ldr	r3, [r4, #48]
 355 0072 03F00203 		and	r3, r3, #2
 356 0076 0393     		str	r3, [sp, #12]
 138:../Core/Src/adc.c **** 		__HAL_RCC_GPIOC_CLK_ENABLE();
 357              		.loc 1 138 3 view .LVU96
 358 0078 039B     		ldr	r3, [sp, #12]
 359              	.LBE4:
 138:../Core/Src/adc.c **** 		__HAL_RCC_GPIOC_CLK_ENABLE();
 360              		.loc 1 138 3 view .LVU97
 139:../Core/Src/adc.c **** 		
 361              		.loc 1 139 3 view .LVU98
 362              	.LBB5:
 139:../Core/Src/adc.c **** 		
 363              		.loc 1 139 3 view .LVU99
 139:../Core/Src/adc.c **** 		
 364              		.loc 1 139 3 view .LVU100
 365 007a 236B     		ldr	r3, [r4, #48]
 366 007c 43F00403 		orr	r3, r3, #4
 367 0080 2363     		str	r3, [r4, #48]
 139:../Core/Src/adc.c **** 		
 368              		.loc 1 139 3 view .LVU101
 369 0082 236B     		ldr	r3, [r4, #48]
 370 0084 03F00403 		and	r3, r3, #4
 371 0088 0493     		str	r3, [sp, #16]
 139:../Core/Src/adc.c **** 		
 372              		.loc 1 139 3 view .LVU102
 373 008a 049B     		ldr	r3, [sp, #16]
 374              	.LBE5:
 139:../Core/Src/adc.c **** 		
 375              		.loc 1 139 3 view .LVU103
ARM GAS  /tmp/cclFEDX6.s 			page 14


 143:../Core/Src/adc.c **** 
 376              		.loc 1 143 1 is_stmt 0 view .LVU104
 377 008c C7E7     		b	.L17
 378              	.L22:
 379 008e 00BF     		.align	2
 380              	.L21:
 381 0090 00380240 		.word	1073887232
 382 0094 00000240 		.word	1073872896
 383              		.cfi_endproc
 384              	.LFE145:
 386              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 387              		.align	1
 388              		.global	HAL_ADC_MspDeInit
 389              		.syntax unified
 390              		.thumb
 391              		.thumb_func
 392              		.fpu fpv5-d16
 394              	HAL_ADC_MspDeInit:
 395              	.LVL18:
 396              	.LFB146:
 146:../Core/Src/adc.c **** 
 397              		.loc 1 146 1 is_stmt 1 view -0
 398              		.cfi_startproc
 399              		@ args = 0, pretend = 0, frame = 0
 400              		@ frame_needed = 0, uses_anonymous_args = 0
 146:../Core/Src/adc.c **** 
 401              		.loc 1 146 1 is_stmt 0 view .LVU106
 402 0000 08B5     		push	{r3, lr}
 403              	.LCFI9:
 404              		.cfi_def_cfa_offset 8
 405              		.cfi_offset 3, -8
 406              		.cfi_offset 14, -4
 148:../Core/Src/adc.c ****   {
 407              		.loc 1 148 3 is_stmt 1 view .LVU107
 148:../Core/Src/adc.c ****   {
 408              		.loc 1 148 15 is_stmt 0 view .LVU108
 409 0002 0268     		ldr	r2, [r0]
 148:../Core/Src/adc.c ****   {
 410              		.loc 1 148 5 view .LVU109
 411 0004 084B     		ldr	r3, .L27
 412 0006 9A42     		cmp	r2, r3
 413 0008 00D0     		beq	.L26
 414              	.LVL19:
 415              	.L23:
 167:../Core/Src/adc.c **** 
 416              		.loc 1 167 1 view .LVU110
 417 000a 08BD     		pop	{r3, pc}
 418              	.LVL20:
 419              	.L26:
 154:../Core/Src/adc.c **** 
 420              		.loc 1 154 5 is_stmt 1 view .LVU111
 421 000c 074A     		ldr	r2, .L27+4
 422 000e 536C     		ldr	r3, [r2, #68]
 423 0010 23F48073 		bic	r3, r3, #256
 424 0014 5364     		str	r3, [r2, #68]
 159:../Core/Src/adc.c **** 
 425              		.loc 1 159 5 view .LVU112
ARM GAS  /tmp/cclFEDX6.s 			page 15


 426 0016 0121     		movs	r1, #1
 427 0018 0548     		ldr	r0, .L27+8
 428              	.LVL21:
 159:../Core/Src/adc.c **** 
 429              		.loc 1 159 5 is_stmt 0 view .LVU113
 430 001a FFF7FEFF 		bl	HAL_GPIO_DeInit
 431              	.LVL22:
 162:../Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 432              		.loc 1 162 5 is_stmt 1 view .LVU114
 433 001e 1220     		movs	r0, #18
 434 0020 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 435              	.LVL23:
 167:../Core/Src/adc.c **** 
 436              		.loc 1 167 1 is_stmt 0 view .LVU115
 437 0024 F1E7     		b	.L23
 438              	.L28:
 439 0026 00BF     		.align	2
 440              	.L27:
 441 0028 00200140 		.word	1073815552
 442 002c 00380240 		.word	1073887232
 443 0030 00000240 		.word	1073872896
 444              		.cfi_endproc
 445              	.LFE146:
 447              		.section	.text.ADC_Config_Channel,"ax",%progbits
 448              		.align	1
 449              		.global	ADC_Config_Channel
 450              		.syntax unified
 451              		.thumb
 452              		.thumb_func
 453              		.fpu fpv5-d16
 455              	ADC_Config_Channel:
 456              	.LVL24:
 457              	.LFB147:
 172:../Core/Src/adc.c **** 	ADC_ChannelConfTypeDef channel_config = {0};
 458              		.loc 1 172 1 is_stmt 1 view -0
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 16
 461              		@ frame_needed = 0, uses_anonymous_args = 0
 172:../Core/Src/adc.c **** 	ADC_ChannelConfTypeDef channel_config = {0};
 462              		.loc 1 172 1 is_stmt 0 view .LVU117
 463 0000 70B5     		push	{r4, r5, r6, lr}
 464              	.LCFI10:
 465              		.cfi_def_cfa_offset 16
 466              		.cfi_offset 4, -16
 467              		.cfi_offset 5, -12
 468              		.cfi_offset 6, -8
 469              		.cfi_offset 14, -4
 470 0002 84B0     		sub	sp, sp, #16
 471              	.LCFI11:
 472              		.cfi_def_cfa_offset 32
 473 0004 0546     		mov	r5, r0
 474 0006 0C46     		mov	r4, r1
 173:../Core/Src/adc.c **** 
 475              		.loc 1 173 2 is_stmt 1 view .LVU118
 173:../Core/Src/adc.c **** 
 476              		.loc 1 173 25 is_stmt 0 view .LVU119
 477 0008 0023     		movs	r3, #0
ARM GAS  /tmp/cclFEDX6.s 			page 16


 478 000a 0093     		str	r3, [sp]
 479 000c 0193     		str	r3, [sp, #4]
 480 000e 0293     		str	r3, [sp, #8]
 481 0010 0393     		str	r3, [sp, #12]
 179:../Core/Src/adc.c **** 	port = 2; // GPIO Port C
 482              		.loc 1 179 2 is_stmt 1 view .LVU120
 179:../Core/Src/adc.c **** 	port = 2; // GPIO Port C
 483              		.loc 1 179 6 is_stmt 0 view .LVU121
 484 0012 204B     		ldr	r3, .L36
 485 0014 1970     		strb	r1, [r3]
 180:../Core/Src/adc.c **** 	
 486              		.loc 1 180 2 is_stmt 1 view .LVU122
 180:../Core/Src/adc.c **** 	
 487              		.loc 1 180 7 is_stmt 0 view .LVU123
 488 0016 204B     		ldr	r3, .L36+4
 489 0018 0222     		movs	r2, #2
 490 001a 1A70     		strb	r2, [r3]
 182:../Core/Src/adc.c **** 		port = 0;		 			// GPIO Port A
 491              		.loc 1 182 2 is_stmt 1 view .LVU124
 182:../Core/Src/adc.c **** 		port = 0;		 			// GPIO Port A
 492              		.loc 1 182 4 is_stmt 0 view .LVU125
 493 001c 0729     		cmp	r1, #7
 494 001e 27D8     		bhi	.L30
 183:../Core/Src/adc.c **** 	else if(addr < 10)  // Channels IN8 - IN9
 495              		.loc 1 183 3 is_stmt 1 view .LVU126
 183:../Core/Src/adc.c **** 	else if(addr < 10)  // Channels IN8 - IN9
 496              		.loc 1 183 8 is_stmt 0 view .LVU127
 497 0020 0022     		movs	r2, #0
 498 0022 1A70     		strb	r2, [r3]
 499              	.L31:
 192:../Core/Src/adc.c **** 	if((pin_mode != GPIO_MODE_INPUT) && (pin_mode != GPIO_MODE_ANALOG)) // PinMode as output push-pull
 500              		.loc 1 192 2 is_stmt 1 view .LVU128
 192:../Core/Src/adc.c **** 	if((pin_mode != GPIO_MODE_INPUT) && (pin_mode != GPIO_MODE_ANALOG)) // PinMode as output push-pull
 501              		.loc 1 192 13 is_stmt 0 view .LVU129
 502 0024 1C4B     		ldr	r3, .L36+4
 503 0026 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 504              	.LVL25:
 192:../Core/Src/adc.c **** 	if((pin_mode != GPIO_MODE_INPUT) && (pin_mode != GPIO_MODE_ANALOG)) // PinMode as output push-pull
 505              		.loc 1 192 13 view .LVU130
 506 0028 1C4B     		ldr	r3, .L36+8
 507 002a 53F82030 		ldr	r3, [r3, r0, lsl #2]
 508 002e 1B68     		ldr	r3, [r3]
 509 0030 184A     		ldr	r2, .L36
 510 0032 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 511              	.LVL26:
 192:../Core/Src/adc.c **** 	if((pin_mode != GPIO_MODE_INPUT) && (pin_mode != GPIO_MODE_ANALOG)) // PinMode as output push-pull
 512              		.loc 1 192 13 view .LVU131
 513 0034 4A00     		lsls	r2, r1, #1
 514 0036 D340     		lsrs	r3, r3, r2
 515 0038 03F00303 		and	r3, r3, #3
 192:../Core/Src/adc.c **** 	if((pin_mode != GPIO_MODE_INPUT) && (pin_mode != GPIO_MODE_ANALOG)) // PinMode as output push-pull
 516              		.loc 1 192 11 view .LVU132
 517 003c 184A     		ldr	r2, .L36+12
 518 003e 1360     		str	r3, [r2]
 193:../Core/Src/adc.c **** 		return (char)(-1);
 519              		.loc 1 193 2 is_stmt 1 view .LVU133
 193:../Core/Src/adc.c **** 		return (char)(-1);
ARM GAS  /tmp/cclFEDX6.s 			page 17


 520              		.loc 1 193 4 is_stmt 0 view .LVU134
 521 0040 002B     		cmp	r3, #0
 522 0042 18BF     		it	ne
 523 0044 032B     		cmpne	r3, #3
 524 0046 22D1     		bne	.L34
 196:../Core/Src/adc.c **** 	
 525              		.loc 1 196 2 is_stmt 1 view .LVU135
 196:../Core/Src/adc.c **** 	
 526              		.loc 1 196 27 is_stmt 0 view .LVU136
 527 0048 0126     		movs	r6, #1
 196:../Core/Src/adc.c **** 	
 528              		.loc 1 196 2 view .LVU137
 529 004a 0322     		movs	r2, #3
 530 004c 06FA01F1 		lsl	r1, r6, r1
 531 0050 FFF7FEFF 		bl	GPIO_config_pins
 532              	.LVL27:
 198:../Core/Src/adc.c **** 	channel_config.Rank = ADC_REGULAR_RANK_1;
 533              		.loc 1 198 2 is_stmt 1 view .LVU138
 198:../Core/Src/adc.c **** 	channel_config.Rank = ADC_REGULAR_RANK_1;
 534              		.loc 1 198 39 is_stmt 0 view .LVU139
 535 0054 134B     		ldr	r3, .L36+16
 536 0056 53F82430 		ldr	r3, [r3, r4, lsl #2]
 198:../Core/Src/adc.c **** 	channel_config.Rank = ADC_REGULAR_RANK_1;
 537              		.loc 1 198 25 view .LVU140
 538 005a 0093     		str	r3, [sp]
 199:../Core/Src/adc.c ****   channel_config.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 539              		.loc 1 199 2 is_stmt 1 view .LVU141
 199:../Core/Src/adc.c ****   channel_config.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 540              		.loc 1 199 22 is_stmt 0 view .LVU142
 541 005c 0196     		str	r6, [sp, #4]
 200:../Core/Src/adc.c **** 	
 542              		.loc 1 200 3 is_stmt 1 view .LVU143
 200:../Core/Src/adc.c **** 	
 543              		.loc 1 200 31 is_stmt 0 view .LVU144
 544 005e 0024     		movs	r4, #0
 545 0060 0294     		str	r4, [sp, #8]
 202:../Core/Src/adc.c **** 	
 546              		.loc 1 202 2 is_stmt 1 view .LVU145
 547 0062 6946     		mov	r1, sp
 548 0064 2846     		mov	r0, r5
 549 0066 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 550              	.LVL28:
 204:../Core/Src/adc.c **** }
 551              		.loc 1 204 2 view .LVU146
 204:../Core/Src/adc.c **** }
 552              		.loc 1 204 9 is_stmt 0 view .LVU147
 553 006a 2046     		mov	r0, r4
 554              	.L33:
 205:../Core/Src/adc.c **** 
 555              		.loc 1 205 1 view .LVU148
 556 006c 04B0     		add	sp, sp, #16
 557              	.LCFI12:
 558              		.cfi_remember_state
 559              		.cfi_def_cfa_offset 16
 560              		@ sp needed
 561 006e 70BD     		pop	{r4, r5, r6, pc}
 562              	.LVL29:
ARM GAS  /tmp/cclFEDX6.s 			page 18


 563              	.L30:
 564              	.LCFI13:
 565              		.cfi_restore_state
 184:../Core/Src/adc.c **** 	{
 566              		.loc 1 184 7 is_stmt 1 view .LVU149
 184:../Core/Src/adc.c **** 	{
 567              		.loc 1 184 9 is_stmt 0 view .LVU150
 568 0070 0929     		cmp	r1, #9
 569 0072 07D8     		bhi	.L32
 186:../Core/Src/adc.c **** 		pin -= 8;					// Pins 0 - 1
 570              		.loc 1 186 3 is_stmt 1 view .LVU151
 186:../Core/Src/adc.c **** 		pin -= 8;					// Pins 0 - 1
 571              		.loc 1 186 8 is_stmt 0 view .LVU152
 572 0074 084B     		ldr	r3, .L36+4
 573 0076 0122     		movs	r2, #1
 574 0078 1A70     		strb	r2, [r3]
 187:../Core/Src/adc.c **** 	}
 575              		.loc 1 187 3 is_stmt 1 view .LVU153
 187:../Core/Src/adc.c **** 	}
 576              		.loc 1 187 7 is_stmt 0 view .LVU154
 577 007a A1F10803 		sub	r3, r1, #8
 578 007e 054A     		ldr	r2, .L36
 579 0080 1370     		strb	r3, [r2]
 580 0082 CFE7     		b	.L31
 581              	.L32:
 190:../Core/Src/adc.c **** 	
 582              		.loc 1 190 3 is_stmt 1 view .LVU155
 190:../Core/Src/adc.c **** 	
 583              		.loc 1 190 7 is_stmt 0 view .LVU156
 584 0084 A1F10A03 		sub	r3, r1, #10
 585 0088 024A     		ldr	r2, .L36
 586 008a 1370     		strb	r3, [r2]
 587 008c CAE7     		b	.L31
 588              	.LVL30:
 589              	.L34:
 194:../Core/Src/adc.c **** 	
 590              		.loc 1 194 10 view .LVU157
 591 008e FF20     		movs	r0, #255
 592 0090 ECE7     		b	.L33
 593              	.L37:
 594 0092 00BF     		.align	2
 595              	.L36:
 596 0094 00000000 		.word	.LANCHOR4
 597 0098 00000000 		.word	.LANCHOR5
 598 009c 00000000 		.word	GPIO_Ports
 599 00a0 00000000 		.word	.LANCHOR6
 600 00a4 00000000 		.word	.LANCHOR7
 601              		.cfi_endproc
 602              	.LFE147:
 604              		.section	.text.ADC_DeConfig_Channel,"ax",%progbits
 605              		.align	1
 606              		.global	ADC_DeConfig_Channel
 607              		.syntax unified
 608              		.thumb
 609              		.thumb_func
 610              		.fpu fpv5-d16
 612              	ADC_DeConfig_Channel:
ARM GAS  /tmp/cclFEDX6.s 			page 19


 613              	.LVL31:
 614              	.LFB148:
 208:../Core/Src/adc.c **** 		GPIO_config_pins(port, (1<<pin), pin_mode);
 615              		.loc 1 208 1 is_stmt 1 view -0
 616              		.cfi_startproc
 617              		@ args = 0, pretend = 0, frame = 0
 618              		@ frame_needed = 0, uses_anonymous_args = 0
 208:../Core/Src/adc.c **** 		GPIO_config_pins(port, (1<<pin), pin_mode);
 619              		.loc 1 208 1 is_stmt 0 view .LVU159
 620 0000 08B5     		push	{r3, lr}
 621              	.LCFI14:
 622              		.cfi_def_cfa_offset 8
 623              		.cfi_offset 3, -8
 624              		.cfi_offset 14, -4
 209:../Core/Src/adc.c **** }
 625              		.loc 1 209 3 is_stmt 1 view .LVU160
 209:../Core/Src/adc.c **** }
 626              		.loc 1 209 28 is_stmt 0 view .LVU161
 627 0002 054B     		ldr	r3, .L40
 628 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 209:../Core/Src/adc.c **** }
 629              		.loc 1 209 3 view .LVU162
 630 0006 054A     		ldr	r2, .L40+4
 631 0008 1268     		ldr	r2, [r2]
 632 000a 0121     		movs	r1, #1
 633              	.LVL32:
 209:../Core/Src/adc.c **** }
 634              		.loc 1 209 3 view .LVU163
 635 000c 9940     		lsls	r1, r1, r3
 636 000e 044B     		ldr	r3, .L40+8
 637 0010 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 638              	.LVL33:
 209:../Core/Src/adc.c **** }
 639              		.loc 1 209 3 view .LVU164
 640 0012 FFF7FEFF 		bl	GPIO_config_pins
 641              	.LVL34:
 210:../Core/Src/adc.c **** 
 642              		.loc 1 210 1 view .LVU165
 643 0016 08BD     		pop	{r3, pc}
 644              	.L41:
 645              		.align	2
 646              	.L40:
 647 0018 00000000 		.word	.LANCHOR4
 648 001c 00000000 		.word	.LANCHOR6
 649 0020 00000000 		.word	.LANCHOR5
 650              		.cfi_endproc
 651              	.LFE148:
 653              		.section	.text.ADC_Polling_Conv,"ax",%progbits
 654              		.align	1
 655              		.global	ADC_Polling_Conv
 656              		.syntax unified
 657              		.thumb
 658              		.thumb_func
 659              		.fpu fpv5-d16
 661              	ADC_Polling_Conv:
 662              	.LVL35:
 663              	.LFB149:
ARM GAS  /tmp/cclFEDX6.s 			page 20


 213:../Core/Src/adc.c **** 	uint32_t dig_val = 0;
 664              		.loc 1 213 1 is_stmt 1 view -0
 665              		.cfi_startproc
 666              		@ args = 0, pretend = 0, frame = 0
 667              		@ frame_needed = 0, uses_anonymous_args = 0
 668              		@ link register save eliminated.
 214:../Core/Src/adc.c **** 	
 669              		.loc 1 214 2 view .LVU167
 228:../Core/Src/adc.c **** }
 670              		.loc 1 228 2 view .LVU168
 229:../Core/Src/adc.c **** 
 671              		.loc 1 229 1 is_stmt 0 view .LVU169
 672 0000 0020     		movs	r0, #0
 673              	.LVL36:
 229:../Core/Src/adc.c **** 
 674              		.loc 1 229 1 view .LVU170
 675 0002 7047     		bx	lr
 676              		.cfi_endproc
 677              	.LFE149:
 679              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 680              		.align	1
 681              		.global	HAL_ADC_ConvCpltCallback
 682              		.syntax unified
 683              		.thumb
 684              		.thumb_func
 685              		.fpu fpv5-d16
 687              	HAL_ADC_ConvCpltCallback:
 688              	.LVL37:
 689              	.LFB150:
 232:../Core/Src/adc.c **** 	static float y;
 690              		.loc 1 232 1 is_stmt 1 view -0
 691              		.cfi_startproc
 692              		@ args = 0, pretend = 0, frame = 0
 693              		@ frame_needed = 0, uses_anonymous_args = 0
 232:../Core/Src/adc.c **** 	static float y;
 694              		.loc 1 232 1 is_stmt 0 view .LVU172
 695 0000 38B5     		push	{r3, r4, r5, lr}
 696              	.LCFI15:
 697              		.cfi_def_cfa_offset 16
 698              		.cfi_offset 3, -16
 699              		.cfi_offset 4, -12
 700              		.cfi_offset 5, -8
 701              		.cfi_offset 14, -4
 702 0002 0446     		mov	r4, r0
 233:../Core/Src/adc.c **** 	
 703              		.loc 1 233 2 is_stmt 1 view .LVU173
 237:../Core/Src/adc.c **** 	if(hadc->Instance == ADC1)
 704              		.loc 1 237 2 view .LVU174
 705 0004 0121     		movs	r1, #1
 706 0006 2348     		ldr	r0, .L52
 707              	.LVL38:
 237:../Core/Src/adc.c **** 	if(hadc->Instance == ADC1)
 708              		.loc 1 237 2 is_stmt 0 view .LVU175
 709 0008 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 710              	.LVL39:
 238:../Core/Src/adc.c **** 	{
 711              		.loc 1 238 2 is_stmt 1 view .LVU176
ARM GAS  /tmp/cclFEDX6.s 			page 21


 238:../Core/Src/adc.c **** 	{
 712              		.loc 1 238 9 is_stmt 0 view .LVU177
 713 000c 2268     		ldr	r2, [r4]
 238:../Core/Src/adc.c **** 	{
 714              		.loc 1 238 4 view .LVU178
 715 000e 224B     		ldr	r3, .L52+4
 716 0010 9A42     		cmp	r2, r3
 717 0012 00D0     		beq	.L50
 718              	.LVL40:
 719              	.L43:
 264:../Core/Src/adc.c **** 
 720              		.loc 1 264 1 view .LVU179
 721 0014 38BD     		pop	{r3, r4, r5, pc}
 722              	.LVL41:
 723              	.L50:
 240:../Core/Src/adc.c **** 		smps_left--;
 724              		.loc 1 240 3 is_stmt 1 view .LVU180
 240:../Core/Src/adc.c **** 		smps_left--;
 725              		.loc 1 240 14 is_stmt 0 view .LVU181
 726 0016 2148     		ldr	r0, .L52+8
 727 0018 FFF7FEFF 		bl	HAL_ADC_GetValue
 728              	.LVL42:
 240:../Core/Src/adc.c **** 		smps_left--;
 729              		.loc 1 240 12 view .LVU182
 730 001c 204C     		ldr	r4, .L52+12
 731              	.LVL43:
 240:../Core/Src/adc.c **** 		smps_left--;
 732              		.loc 1 240 12 view .LVU183
 733 001e 2060     		str	r0, [r4]
 241:../Core/Src/adc.c **** 
 734              		.loc 1 241 3 is_stmt 1 view .LVU184
 241:../Core/Src/adc.c **** 
 735              		.loc 1 241 12 is_stmt 0 view .LVU185
 736 0020 204A     		ldr	r2, .L52+16
 737 0022 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 738 0024 013B     		subs	r3, r3, #1
 739 0026 DBB2     		uxtb	r3, r3
 740 0028 1370     		strb	r3, [r2]
 243:../Core/Src/adc.c **** 		// apply selected filter
 741              		.loc 1 243 3 is_stmt 1 view .LVU186
 742 002a 1F4D     		ldr	r5, .L52+20
 743 002c 0122     		movs	r2, #1
 744 002e 1146     		mov	r1, r2
 745 0030 2846     		mov	r0, r5
 746 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
 747              	.LVL44:
 245:../Core/Src/adc.c **** 		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, (GPIO_PinState) 0);
 748              		.loc 1 245 3 view .LVU187
 245:../Core/Src/adc.c **** 		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, (GPIO_PinState) 0);
 749              		.loc 1 245 7 is_stmt 0 view .LVU188
 750 0036 2168     		ldr	r1, [r4]
 751 0038 1C48     		ldr	r0, .L52+24
 752 003a FFF7FEFF 		bl	filter_calc
 753              	.LVL45:
 245:../Core/Src/adc.c **** 		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, (GPIO_PinState) 0);
 754              		.loc 1 245 5 view .LVU189
 755 003e 1C4C     		ldr	r4, .L52+28
ARM GAS  /tmp/cclFEDX6.s 			page 22


 756 0040 84ED000A 		vstr.32	s0, [r4]
 246:../Core/Src/adc.c **** 
 757              		.loc 1 246 3 is_stmt 1 view .LVU190
 758 0044 0022     		movs	r2, #0
 759 0046 0121     		movs	r1, #1
 760 0048 2846     		mov	r0, r5
 761 004a FFF7FEFF 		bl	HAL_GPIO_WritePin
 762              	.LVL46:
 248:../Core/Src/adc.c **** 			// Add new value to buffer
 763              		.loc 1 248 3 view .LVU191
 248:../Core/Src/adc.c **** 			// Add new value to buffer
 764              		.loc 1 248 8 is_stmt 0 view .LVU192
 765 004e D4ED007A 		vldr.32	s15, [r4]
 248:../Core/Src/adc.c **** 			// Add new value to buffer
 766              		.loc 1 248 5 view .LVU193
 767 0052 BFEE007A 		vmov.f32	s14, #-1.0e+0
 768 0056 F4EE477A 		vcmp.f32	s15, s14
 769 005a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 770 005e 13D0     		beq	.L51
 253:../Core/Src/adc.c **** 					// send max value
 771              		.loc 1 253 5 is_stmt 1 view .LVU194
 253:../Core/Src/adc.c **** 					// send max value
 772              		.loc 1 253 7 is_stmt 0 view .LVU195
 773 0060 9FED147A 		vldr.32	s14, .L52+32
 774 0064 F4EEC77A 		vcmpe.f32	s15, s14
 775 0068 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 776 006c 02DD     		ble	.L46
 255:../Core/Src/adc.c **** 			
 777              		.loc 1 255 6 is_stmt 1 view .LVU196
 255:../Core/Src/adc.c **** 			
 778              		.loc 1 255 8 is_stmt 0 view .LVU197
 779 006e 104B     		ldr	r3, .L52+28
 780 0070 83ED007A 		vstr.32	s14, [r3]
 781              	.L46:
 258:../Core/Src/adc.c **** 		}
 782              		.loc 1 258 4 is_stmt 1 view .LVU198
 783 0074 0E4B     		ldr	r3, .L52+28
 784 0076 D3ED007A 		vldr.32	s15, [r3]
 785 007a FCEEE77A 		vcvt.u32.f32	s15, s15
 786 007e 17EE900A 		vmov	r0, s15	@ int
 787 0082 FFF7FEFF 		bl	output
 788              	.LVL47:
 264:../Core/Src/adc.c **** 
 789              		.loc 1 264 1 is_stmt 0 view .LVU199
 790 0086 C5E7     		b	.L43
 791              	.L51:
 250:../Core/Src/adc.c **** 		else
 792              		.loc 1 250 4 is_stmt 1 view .LVU200
 793 0088 054B     		ldr	r3, .L52+12
 794 008a 1868     		ldr	r0, [r3]
 795 008c FFF7FEFF 		bl	output
 796              	.LVL48:
 797 0090 C0E7     		b	.L43
 798              	.L53:
 799 0092 00BF     		.align	2
 800              	.L52:
 801 0094 00000240 		.word	1073872896
ARM GAS  /tmp/cclFEDX6.s 			page 23


 802 0098 00200140 		.word	1073815552
 803 009c 00000000 		.word	.LANCHOR3
 804 00a0 00000000 		.word	.LANCHOR8
 805 00a4 00000000 		.word	.LANCHOR9
 806 00a8 00040240 		.word	1073873920
 807 00ac 00000000 		.word	f
 808 00b0 00000000 		.word	.LANCHOR10
 809 00b4 00F07F45 		.word	1166012416
 810              		.cfi_endproc
 811              	.LFE150:
 813              		.section	.rodata.print_adcValues.str1.4,"aMS",%progbits,1
 814              		.align	2
 815              	.LC0:
 816 0000 6E256420 		.ascii	"n%d v%ld\012\015\000"
 816      76256C64 
 816      0A0D00
 817              		.section	.text.print_adcValues,"ax",%progbits
 818              		.align	1
 819              		.global	print_adcValues
 820              		.syntax unified
 821              		.thumb
 822              		.thumb_func
 823              		.fpu fpv5-d16
 825              	print_adcValues:
 826              	.LFB152:
 286:../Core/Src/adc.c **** 
 287:../Core/Src/adc.c **** void print_adcValues(void)
 288:../Core/Src/adc.c **** {
 827              		.loc 1 288 1 view -0
 828              		.cfi_startproc
 829              		@ args = 0, pretend = 0, frame = 16
 830              		@ frame_needed = 0, uses_anonymous_args = 0
 831 0000 30B5     		push	{r4, r5, lr}
 832              	.LCFI16:
 833              		.cfi_def_cfa_offset 12
 834              		.cfi_offset 4, -12
 835              		.cfi_offset 5, -8
 836              		.cfi_offset 14, -4
 837 0002 87B0     		sub	sp, sp, #28
 838              	.LCFI17:
 839              		.cfi_def_cfa_offset 40
 289:../Core/Src/adc.c **** 	char str[16];
 840              		.loc 1 289 2 view .LVU202
 290:../Core/Src/adc.c **** 	uint8_t arr_index = (ADC_Val_index - (ADC_smp_num - 1)), i;
 841              		.loc 1 290 2 view .LVU203
 842              		.loc 1 290 37 is_stmt 0 view .LVU204
 843 0004 124B     		ldr	r3, .L58
 844 0006 1D78     		ldrb	r5, [r3]	@ zero_extendqisi2
 845 0008 124B     		ldr	r3, .L58+4
 846 000a 1B88     		ldrh	r3, [r3]
 847 000c 9BB2     		uxth	r3, r3
 848 000e ED1A     		subs	r5, r5, r3
 849 0010 EDB2     		uxtb	r5, r5
 850              		.loc 1 290 10 view .LVU205
 851 0012 0135     		adds	r5, r5, #1
 852 0014 EDB2     		uxtb	r5, r5
 853              	.LVL49:
ARM GAS  /tmp/cclFEDX6.s 			page 24


 291:../Core/Src/adc.c **** 	
 292:../Core/Src/adc.c **** 	for(i = 1; i < ADC_smp_num; i++)
 854              		.loc 1 292 2 is_stmt 1 view .LVU206
 855              		.loc 1 292 8 is_stmt 0 view .LVU207
 856 0016 0124     		movs	r4, #1
 857              		.loc 1 292 2 view .LVU208
 858 0018 12E0     		b	.L55
 859              	.LVL50:
 860              	.L56:
 293:../Core/Src/adc.c **** 	{
 294:../Core/Src/adc.c **** 		snprintf(str, sizeof(str), "n%d v%ld\n\r", i, ADC_Values[arr_index & (ADC_VALUES_LEN - 1)]);
 861              		.loc 1 294 3 is_stmt 1 discriminator 3 view .LVU209
 862              		.loc 1 294 70 is_stmt 0 discriminator 3 view .LVU210
 863 001a 05F01F02 		and	r2, r5, #31
 864              		.loc 1 294 3 discriminator 3 view .LVU211
 865 001e 0E4B     		ldr	r3, .L58+8
 866 0020 53F82230 		ldr	r3, [r3, r2, lsl #2]
 867 0024 0093     		str	r3, [sp]
 868 0026 2346     		mov	r3, r4
 869 0028 0C4A     		ldr	r2, .L58+12
 870 002a 1021     		movs	r1, #16
 871 002c 02A8     		add	r0, sp, #8
 872 002e FFF7FEFF 		bl	snprintf
 873              	.LVL51:
 295:../Core/Src/adc.c **** 		UART_puts(str);
 874              		.loc 1 295 3 is_stmt 1 discriminator 3 view .LVU212
 875 0032 02A8     		add	r0, sp, #8
 876 0034 FFF7FEFF 		bl	UART_puts
 877              	.LVL52:
 296:../Core/Src/adc.c **** 		arr_index++;
 878              		.loc 1 296 3 discriminator 3 view .LVU213
 879              		.loc 1 296 12 is_stmt 0 discriminator 3 view .LVU214
 880 0038 0135     		adds	r5, r5, #1
 881              	.LVL53:
 882              		.loc 1 296 12 discriminator 3 view .LVU215
 883 003a EDB2     		uxtb	r5, r5
 884              	.LVL54:
 292:../Core/Src/adc.c **** 	{
 885              		.loc 1 292 30 is_stmt 1 discriminator 3 view .LVU216
 292:../Core/Src/adc.c **** 	{
 886              		.loc 1 292 31 is_stmt 0 discriminator 3 view .LVU217
 887 003c 0134     		adds	r4, r4, #1
 888              	.LVL55:
 292:../Core/Src/adc.c **** 	{
 889              		.loc 1 292 31 discriminator 3 view .LVU218
 890 003e E4B2     		uxtb	r4, r4
 891              	.LVL56:
 892              	.L55:
 292:../Core/Src/adc.c **** 	{
 893              		.loc 1 292 13 is_stmt 1 discriminator 1 view .LVU219
 292:../Core/Src/adc.c **** 	{
 894              		.loc 1 292 15 is_stmt 0 discriminator 1 view .LVU220
 895 0040 A2B2     		uxth	r2, r4
 896 0042 044B     		ldr	r3, .L58+4
 897 0044 1B88     		ldrh	r3, [r3]
 898 0046 9BB2     		uxth	r3, r3
 292:../Core/Src/adc.c **** 	{
ARM GAS  /tmp/cclFEDX6.s 			page 25


 899              		.loc 1 292 2 discriminator 1 view .LVU221
 900 0048 9A42     		cmp	r2, r3
 901 004a E6D3     		bcc	.L56
 297:../Core/Src/adc.c **** 	}	
 298:../Core/Src/adc.c **** }	
 902              		.loc 1 298 1 view .LVU222
 903 004c 07B0     		add	sp, sp, #28
 904              	.LCFI18:
 905              		.cfi_def_cfa_offset 12
 906              		@ sp needed
 907 004e 30BD     		pop	{r4, r5, pc}
 908              	.LVL57:
 909              	.L59:
 910              		.loc 1 298 1 view .LVU223
 911              		.align	2
 912              	.L58:
 913 0050 00000000 		.word	.LANCHOR0
 914 0054 00000000 		.word	.LANCHOR2
 915 0058 00000000 		.word	.LANCHOR1
 916 005c 00000000 		.word	.LC0
 917              		.cfi_endproc
 918              	.LFE152:
 920              		.global	hadc1
 921              		.global	smps_left
 922              		.global	ADC_smp_num
 923              		.global	ADC_Val_index
 924              		.global	ADC_Values
 925              		.global	pin
 926              		.global	port
 927              		.global	pin_mode
 928              		.global	adcFlag
 929              		.global	adcValue
 930              		.global	ADC_Channels
 931              		.section	.bss.ADC_Val_index,"aw",%nobits
 932              		.set	.LANCHOR0,. + 0
 935              	ADC_Val_index:
 936 0000 00       		.space	1
 937              		.section	.bss.ADC_Values,"aw",%nobits
 938              		.align	2
 939              		.set	.LANCHOR1,. + 0
 942              	ADC_Values:
 943 0000 00000000 		.space	128
 943      00000000 
 943      00000000 
 943      00000000 
 943      00000000 
 944              		.section	.bss.adcFlag,"aw",%nobits
 947              	adcFlag:
 948 0000 00       		.space	1
 949              		.section	.bss.adcValue,"aw",%nobits
 950              		.align	2
 951              		.set	.LANCHOR8,. + 0
 954              	adcValue:
 955 0000 00000000 		.space	4
 956              		.section	.bss.hadc1,"aw",%nobits
 957              		.align	2
 958              		.set	.LANCHOR3,. + 0
ARM GAS  /tmp/cclFEDX6.s 			page 26


 961              	hadc1:
 962 0000 00000000 		.space	72
 962      00000000 
 962      00000000 
 962      00000000 
 962      00000000 
 963              		.section	.bss.pin,"aw",%nobits
 964              		.set	.LANCHOR4,. + 0
 967              	pin:
 968 0000 00       		.space	1
 969              		.section	.bss.pin_mode,"aw",%nobits
 970              		.align	2
 971              		.set	.LANCHOR6,. + 0
 974              	pin_mode:
 975 0000 00000000 		.space	4
 976              		.section	.bss.port,"aw",%nobits
 977              		.set	.LANCHOR5,. + 0
 980              	port:
 981 0000 00       		.space	1
 982              		.section	.bss.smps_left,"aw",%nobits
 983              		.set	.LANCHOR9,. + 0
 986              	smps_left:
 987 0000 00       		.space	1
 988              		.section	.bss.y.0,"aw",%nobits
 989              		.align	2
 990              		.set	.LANCHOR10,. + 0
 993              	y.0:
 994 0000 00000000 		.space	4
 995              		.section	.data.ADC_smp_num,"aw"
 996              		.align	1
 997              		.set	.LANCHOR2,. + 0
 1000              	ADC_smp_num:
 1001 0000 0100     		.short	1
 1002              		.section	.rodata.ADC_Channels,"a"
 1003              		.align	2
 1004              		.set	.LANCHOR7,. + 0
 1007              	ADC_Channels:
 1008 0000 00000000 		.word	0
 1009 0004 01000000 		.word	1
 1010 0008 02000000 		.word	2
 1011 000c 03000000 		.word	3
 1012 0010 04000000 		.word	4
 1013 0014 05000000 		.word	5
 1014 0018 06000000 		.word	6
 1015 001c 07000000 		.word	7
 1016 0020 08000000 		.word	8
 1017 0024 09000000 		.word	9
 1018 0028 0A000000 		.word	10
 1019 002c 0B000000 		.word	11
 1020 0030 0C000000 		.word	12
 1021 0034 0D000000 		.word	13
 1022 0038 0E000000 		.word	14
 1023 003c 0F000000 		.word	15
 1024              		.text
 1025              	.Letext0:
 1026              		.file 2 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 1027              		.file 3 "../Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
ARM GAS  /tmp/cclFEDX6.s 			page 27


 1028              		.file 4 "../Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 1029              		.file 5 "../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 1030              		.file 6 "../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 1031              		.file 7 "../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 1032              		.file 8 "../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_adc.h"
 1033              		.file 9 "../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dac.h"
 1034              		.file 10 "../Core/Inc/gpio.h"
 1035              		.file 11 "../Core/Inc/adc.h"
 1036              		.file 12 "../Core/Inc/filters.h"
 1037              		.file 13 "../Core/Inc/dac.h"
 1038              		.file 14 "/usr/include/newlib/stdio.h"
 1039              		.file 15 "../Core/Inc/usart.h"
 1040              		.file 16 "../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_cortex.h"
 1041              		.file 17 "../Core/Inc/main.h"
ARM GAS  /tmp/cclFEDX6.s 			page 28


DEFINED SYMBOLS
                            *ABS*:0000000000000000 adc.c
     /tmp/cclFEDX6.s:17     .text.output:0000000000000000 $t
     /tmp/cclFEDX6.s:24     .text.output:0000000000000000 output
     /tmp/cclFEDX6.s:104    .text.output:0000000000000054 $d
     /tmp/cclFEDX6.s:112    .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/cclFEDX6.s:119    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/cclFEDX6.s:231    .text.MX_ADC1_Init:0000000000000068 $d
     /tmp/cclFEDX6.s:237    .text.HAL_ADC_MspInit:0000000000000000 $t
     /tmp/cclFEDX6.s:244    .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
     /tmp/cclFEDX6.s:381    .text.HAL_ADC_MspInit:0000000000000090 $d
     /tmp/cclFEDX6.s:387    .text.HAL_ADC_MspDeInit:0000000000000000 $t
     /tmp/cclFEDX6.s:394    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
     /tmp/cclFEDX6.s:441    .text.HAL_ADC_MspDeInit:0000000000000028 $d
     /tmp/cclFEDX6.s:448    .text.ADC_Config_Channel:0000000000000000 $t
     /tmp/cclFEDX6.s:455    .text.ADC_Config_Channel:0000000000000000 ADC_Config_Channel
     /tmp/cclFEDX6.s:596    .text.ADC_Config_Channel:0000000000000094 $d
     /tmp/cclFEDX6.s:605    .text.ADC_DeConfig_Channel:0000000000000000 $t
     /tmp/cclFEDX6.s:612    .text.ADC_DeConfig_Channel:0000000000000000 ADC_DeConfig_Channel
     /tmp/cclFEDX6.s:647    .text.ADC_DeConfig_Channel:0000000000000018 $d
     /tmp/cclFEDX6.s:654    .text.ADC_Polling_Conv:0000000000000000 $t
     /tmp/cclFEDX6.s:661    .text.ADC_Polling_Conv:0000000000000000 ADC_Polling_Conv
     /tmp/cclFEDX6.s:680    .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/cclFEDX6.s:687    .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/cclFEDX6.s:801    .text.HAL_ADC_ConvCpltCallback:0000000000000094 $d
     /tmp/cclFEDX6.s:814    .rodata.print_adcValues.str1.4:0000000000000000 $d
     /tmp/cclFEDX6.s:818    .text.print_adcValues:0000000000000000 $t
     /tmp/cclFEDX6.s:825    .text.print_adcValues:0000000000000000 print_adcValues
     /tmp/cclFEDX6.s:913    .text.print_adcValues:0000000000000050 $d
     /tmp/cclFEDX6.s:961    .bss.hadc1:0000000000000000 hadc1
     /tmp/cclFEDX6.s:986    .bss.smps_left:0000000000000000 smps_left
     /tmp/cclFEDX6.s:1000   .data.ADC_smp_num:0000000000000000 ADC_smp_num
     /tmp/cclFEDX6.s:935    .bss.ADC_Val_index:0000000000000000 ADC_Val_index
     /tmp/cclFEDX6.s:942    .bss.ADC_Values:0000000000000000 ADC_Values
     /tmp/cclFEDX6.s:967    .bss.pin:0000000000000000 pin
     /tmp/cclFEDX6.s:980    .bss.port:0000000000000000 port
     /tmp/cclFEDX6.s:974    .bss.pin_mode:0000000000000000 pin_mode
     /tmp/cclFEDX6.s:947    .bss.adcFlag:0000000000000000 adcFlag
     /tmp/cclFEDX6.s:954    .bss.adcValue:0000000000000000 adcValue
     /tmp/cclFEDX6.s:1007   .rodata.ADC_Channels:0000000000000000 ADC_Channels
     /tmp/cclFEDX6.s:936    .bss.ADC_Val_index:0000000000000000 $d
     /tmp/cclFEDX6.s:938    .bss.ADC_Values:0000000000000000 $d
     /tmp/cclFEDX6.s:948    .bss.adcFlag:0000000000000000 $d
     /tmp/cclFEDX6.s:950    .bss.adcValue:0000000000000000 $d
     /tmp/cclFEDX6.s:957    .bss.hadc1:0000000000000000 $d
     /tmp/cclFEDX6.s:968    .bss.pin:0000000000000000 $d
     /tmp/cclFEDX6.s:970    .bss.pin_mode:0000000000000000 $d
     /tmp/cclFEDX6.s:981    .bss.port:0000000000000000 $d
     /tmp/cclFEDX6.s:987    .bss.smps_left:0000000000000000 $d
     /tmp/cclFEDX6.s:989    .bss.y.0:0000000000000000 $d
     /tmp/cclFEDX6.s:993    .bss.y.0:0000000000000000 y.0
     /tmp/cclFEDX6.s:996    .data.ADC_smp_num:0000000000000000 $d
     /tmp/cclFEDX6.s:1003   .rodata.ADC_Channels:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_DAC_GetState
HAL_DAC_Start
ARM GAS  /tmp/cclFEDX6.s 			page 29


HAL_DAC_Stop
HAL_DAC_SetValue
hdac
HAL_ADC_Init
HAL_ADC_ConfigChannel
Error_Handler
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_NVIC_DisableIRQ
GPIO_config_pins
GPIO_Ports
HAL_GPIO_TogglePin
HAL_ADC_GetValue
HAL_GPIO_WritePin
filter_calc
f
snprintf
UART_puts
